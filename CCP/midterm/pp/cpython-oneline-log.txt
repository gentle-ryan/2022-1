1f9f2f4c49 Added PyMac_getscript() which returns the pythonic name of the current script. Not ideal and not complete, but good enough for the time being. Idea and most of the code by Fredrik Lund.
12d86c8240 Declare fileno() with prototype if USE_GUSI2 defined. This isn't really the right place, but it will have to do for now.
bc66f950e8 If any of the builds in a group fails offer to stop the fullbuild process and open the failing projects in codewarrior.
919d3267ff Added a "compile-time" flag PPC_ONLY, if set we make ppc-only applications without posting the dialog. This is the normal situation since 1.6alfa (no more 68k support).
5199c54e38 Put in an earlier include of sys/signal.h (within ifdef USE_GUSI) to forestal a multiple define.
e1b304db37 Fix small typos and markup consistency nits.
c44221271a Remove unused variable and what looks like an ancient relic of an old version of SSLeay (now known as OpenSSL.)
1e0c2f4bee Create a new section of pyport.h to hold all external function declarations for systems that are missing those declarations from system include files. Start by moving a pointy-haired ones from their previous locations to the new section.
332c59c4ef change some occurence of python15.dll to python20.dll
5c669860e6 ANSIfy a bit more.
ed77bac472 Fix floattime prototype ((void), not (double))
58d0510245 ANSIfy some more forward declarations.
8ec68fded2 Prototype yet another forward declaration.
ab48e905b5 Don't call BringToFront() on the dialog object, but call GetDialogWindow() to get a window object.
4789b3ae05 ... and yet more ANSIfications...
770e4042db ANSIfy yet another hidden function definition.
eb61b6ebb6 Fix typo in previous patch.
ccada2421b *** empty log message ***
94d8fea62e Remove function-less prototype (old function that was removed ?) that happens to be a C++ reserved word, too.
1790dd4b66 Restore TestSkipped exception; appears to have disappeared in last checkin. Make both TextFailed and TestSkipped subclasses of Error, which derives from Exception.  Docstrings have been added for the exceptions and module.
6899660a81 First round of curses documentation improvements; correct errors, flesh out entry point descriptions.
46a733dfbf Patch #100926 - Better error messages for socket exceptions on Windows.  [Slight style differences from posted patch]
e28c296f0f Another missed ansification.
c307352027 ANSIfy functions that were hiding inside a macro.
8a3ebf8ca8 -- SRE 0.9.6 sync.  this includes:
4f1b2081e9 Removed all instances of RETSIGTYPE from the source code:  signal handlers "return void", according to ANSI C. Removed the new Py_RETURN_FROM_SIGNAL_HANDLER macro. Left RETSIGTYPE in the config stuff, because it's not clear to me that others aren't relying on it (e.g., extension modules).
56055a4749 -- added code to the new Windows popen functions to make close    return the exit code.  Only works on Windows NT/2000, due to    limitations in the Win9X shell.    (based on patch #100941 by David Bolen)
8315ea5790 Included assert.h in Python.h -- it's absurd that this basic tool of good C practice hasn't been available to everything all along. Added Py_SAFE_DOWNCAST(VALUE, WIDE, NARROW) macro to pyport.h; this just casts VALUE from type WIDE to type NARROW, but assert-fails if Py_DEBUG is defined and info is lost due to casting. Replaced a line in Fredrik's fix to marshal.c to use the new macro.
e21107145a Missed a return from a signal handler -- thanks to /F for pointing it out!
115343849c -- changed w_more to take an integer instead of a char    (this is what the callers expect).
1be46844d9 Recent ANSIfication introduced a couple instances of     #if RETSIGTYPE != void That isn't C, and MSVC properly refuses to compile it. Introduced new Py_RETURN_FROM_SIGNAL_HANDLER macro in pyport.h to expand to the correct thing based on RETSIGTYPE.  However, only void is ANSI!  Do we still have platforms that return int? The Unix config mess appears to #define RETSIGTYPE by magic without being asked to, so I assume it's "a problem" across Unices still.
2f2370bfc9 Oops. One of last nights ANSIfication patches accidentily upped the bytecode MAGIC number. When updating it next time, be sure it's higher than 50715 * constants. (Shouldn't be a problem if everyone keeps to the proper algorithm.)
53e7fd77a7 Fix prototypes generated by makesetup, so they include '(void)' rather than empty argumentlists.
a534594fc7 ANSIfication: remove very-old-varargs code, fix function declarations so they include prototypes.
bd4bc4e9e9 Even more ANSIfication: fix as many function pointers and declarations as possible.
3b6448fbae ANSIfication: add proper prototypes to function-pointers and declarations. Also, fix a bug found by said declarations, where a string was defined as unsigned char*, but used as signed.
2c46eaf8e9 ANSIfication of function-pointers and declarations. Also, make sure to return something if RETSIGTYPE is not void, in functions that are defined as returning RETSIGTYPE.
0796b00279 Further ANSIfication of functionpointers and declarations. Also, make sure to return something if RETSIGTYPE isn't void, in functions that are defined to return RETSIGTYPE. Work around an argumentlist mismatch ('void' vs. 'void *') by using a static wrapper function.
b4bd21cf79 ANSIfy as many declarations as possible.
bd8ad942fe Remember to return something if RETSIGTYPE is not 'void'. Do we still need to worry about systems that have signal-handlers return 'int' ? Not all of the code does, though nothing will break because of it.
5f37591a16 ANSIfications: fix empty arglists, and remove the checks for 'HAVE_STDARG_PROTOTYPES' (consider it true, remove false branch)
7889010731 Miscelaneous ANSIfications. I'm assuming here 'main' should take (int, char**) and return an int even on PC platforms. If not, please fix PC/utils/makesrc.c ;-P
23c9e0024a Mass ANSIfication.
f70ef4f860 Mass ANSIfication of function definitions. Doesn't cover all 'extern' declarations yet, those come later.
0452d1f316 Fix two instances of empty argument lists, and fix style ('PyObject** x' -> 'PyObject **x')
ba48a3f3ff Remove unused variable.
1bc8c1eb83 Remove unused helper-function 'posix_strint'.
3531730a68 Mark Favas's fix for typos in docstrings.
623511b7df Added a few docstrings
863d8b855f Added docstrings
f3f33dcf03 Bunch of minor ANSIfications: 'void initfunc()' -> 'void initfunc(void)', and a couple of functions that were missed in the previous batches. Not terribly tested, but very carefully scrutinized, three times.
ff4df6d6fb Small fixes by Petru Paler (patch #100946) checked in with esr's approval.
d372521ec0 added doc for isatty()
e9e5dcd4db restructured a bit and added some more content...
4d06923122 make TestFailed a class exception
018dfae246 added rewritten normpath from Moshe Zadka that does the right thing with paths containing ..
7cb1524586 added documentation for new functions {get,set}_history_length
49bd24d4e4 added history file truncation based upon code from Johannes Zellner.
baf2663e44 Enable extra testing now that os.isatty() is in. (Also tests os.isatty ;P)
616607a987 ANSIfy the just-checked-in isatty() wrapper.
1517d842b6 new method isatty from Thomas Wouters
b1aac244d0 'carb' resource for carbon application.
e82fad7b8c Some thanks weren't checked in yet.
660bb1d1c7 MacPython on MacOSX DP4 gets started in the wrong directory. The workaround (ifdeffed by USE_ARGV0_CHDIR) is to do a chdir() to the folder part of our executable name.
574c0e22a5 Define USE_GUSI if USE_GUSI1 or USE_GUSI2 is defined.
dd6eefb348 no changes other than indentation level (now 4) and comment reflow. use "cvs diff -b" to verify.
9542f48fd5 Fixed problems with UTF error reporting macros and some formatting bugs.
cf5f358784 Restore PyXXX_Length() APIs for binary compatibility. New code will see the macros and therefore use the PyXXX_Size() APIs instead. By Thomas Wouters.
af36a3aa20 gcc is being stupid with if/else constructs clean out some other warnings
1d3dd74574 * split on / or \ * case insensitive comparison
802bc5d9b3 damn! cut-n-paste from ntpath forgot the "import re"
6222c05af6 * split on / or \ * case insensitive
d61591813c At GVR's request.
ff975003cf stop messing around with goto and just write the macro correctly.
9eab78994e Online help facility for the Python interprter and other interactive environments.
f9b526dbfd More of Rob W. W. Hooft's spelling fixes. The only ones left now are the distutils patches, which I'll leave to the distutils maintainers.
f8316638af Rob W. W. Hooft's spelling fixes for the Library Reference. I hope SourceForge doesn't choke on this batch :-)
0e19e76aba - change \x to mean "byte" also in unicode literals   (patch #100912)
855ffac224 Fix fatal compiler (MSVC6) error: unicodeobject.c(735) :     error C2143: syntax error : missing ';' before '}'
a924bb1ad2 split and join on "/" in commonprefix
fb625847bf Fix to a bug found by Florian Weimer:
7e47402264 Spelling fixes supplied by Rob W. W. Hooft. All these are fixes in either comments, docstrings or error messages. I fixed two minor things in test_winreg.py ("didn't" -> "Didn't" and "Didnt" -> "Didn't").
c533e4a012 Bugfix by Rob W. W. Hooft, from his spelling fixes patch. This one is a genuine bug, so I checked it in separately.
307d7a426f Implemented getdefaultlocale() for macintosh, after an idea by Fredrik.
c8081e9bfa Modified the standard mac preamble so we include pymactoolbox.h in stead of defining lots of function prototypes in each module.
629eee0636 ScannerPREUH3.initpatterns() should call Scanner.initpatterns() so the new comment patterns get included.
e201cbad0b Oops, forgot to run autoheader before checking in the _getpty move to posixmodule.
3fded4bb29 -- fixed the comment, too
efd7b001d6 -- note to self: wait until 'cvs commit' has finished before    you edit the file.
47ac12662a -- changed default encoding to "ascii".  you can still change    the default via site.py...
467a67e74d Fix in PyList_New().  With GC enabled and when out of memory, free() the GC pointer, not the object pointer.
5ff2ac2fa9 Break a cycle created in the saboteur() function.
a44923fbfe Got rid of obsolete HAVE_UNIVERSAL_HEADERS test and SystemSevenOrLater define.
74a1e63a89 Test for TARGET_API_MAC_CARBON with #if in stead of #ifdef.
2d391f2f39 include stdio.h for sprintf prototype.
9d8b96c850 pymactoolbox.h contains protoypes for all externally visible toolbox module functions. Include it in stead of duplicating the declarations everywhere. Also cleaned up toolbox module exports, and got rid of resNotFound error.
41e25cc317 include macdefs.h for declaration of getwd, if non-gusi python.
bb7e213a8b PyMac_PromptGetFile and PyMac_GetDirectory don't exist in carbonpython.
c3f593e6ab Don't declare sync if we use gusi.
f868de6491 Document the second round of ConfigParser changes.
70c21a1603 Move (actually copy) support for the sgi._getpty() function into posix.openpty(). And conveniently also check if CVS write access really works.
649685ad9b ConfigParser enhancements to edit existing configs, part 2
23adc9f37b Typo fix from Bastian Kleineidam
397be50a88 moving files to nondist/sf-html
a1dbd1b21b Gosh - clean up that messy HTML; make it valid XHTML instead.
d57f5cff0e Break the cycles after testing cmp() on cyclic objects.
374724ed74 added information how to edit pages at http://python.sourceforge.net
737bcc3466 small FAQ about Python CVS and patches at SourceForge
9f28a039f6 Use PyObject_AsFileDescriptor
8c46b30e0a Document PyObject_AsFileDescriptor
06051edc0d Added PyObject_AsFileDescriptor, which checks for integer, long integer, or .fileno() method
9656abd913 ANSI-fication (got lost in the deep seas of source forge <wink>)
fa521f1b2a fix PyXXX_Length macros as suggested by Fred
f67c2383da Patch by Toby Dickenson, mentored by Mark Hammond, to support automatically finding (most of) the standard PYD extensions, and to remove the hardcoded Python version.
5e70cfe22f Apply Greg Kochanski's fix for open/265.
dfbd4c7695 Fix bug open/243 reported by Dimitri Papadopoulos
9a5086c598 just fixing the indentation
11384c60f6 raise error on duplicate function arguments
91826ed2a9 Improve the descriptions of expected exceptions for __getitem__(), __setitem__(), and __delitem__().  Based on related comments from Barry Warsaw.
8d2f2b2db2 From Sam Rushing's Medusa, via SF patch #100858: add & document os.seteuid(), os.setegid(), os.setreuid(), os.setregid().
4d5d5bf5ae forgot to change copy.copy(m) to m[:]
8dc19f672b Propagate the current exception in get_inprogress_dict() -- it doesn't need to be cleared.
794b483d0d deleted obsolete SYMANTEC__CFM68K__ tests
6980dff3db delete obsolete SYMANTEC__CFM68K__ #ifdefs
97bc98aea7 fixed semantics of commonprefix to work by path elements instead of characters.
03657cfdb0 replace PyXXX_Length calls with PyXXX_Size calls
6253f83b0a change abstract size functions PySequence_Size &c. add macros for backwards compatibility with C source
f981c8f915 Add "exceptions" to list of built-in modules for the sake of sys.builtin_module_names.  (Noticed by Toby Dickenson.)
3f2fa0a53d Add "exceptions" to list of built-in modules for the sake of sys.builtin_module_names.  (Noticed by Toby Dickenson.)
0ae528447f Fixed up some ANSIfications.
42bb8b3987 apply patch #100868 from Moshe Zadka:     refactor the copying of file data. new: shutil.copyfileobj(fsrc, fdst)
35e459c3eb debug_instance(): Use the same %p format directive as with debug_cycle(), and don't cast the pointer to a long.  Neither needs the literal `0x' prefix as %p automatically inserts this (on Linux at least).
a618028e45 Second try: checks whether right shift extends the sign bit.
0582df98d3 Convert coding style to be internally consistent and similar to the rest of the Python C code: space between "if", "for" and "(", no space between "(", ")" and function call parameters, etc.
cc1be2401e Always use the :funcname part of the format specifier for PyArg_ParseTuple() so we get better error messages.
bdcf91fda0 Documentation for the gc module.  Text from Neil Schemenauer <nascheme@enme.ucalgary.ca>, markup & minor revisions from Fred Drake.
bf26e07049 Worm around MSVC6 error on single string literal > 2Kb.
38f744195f Remove extra argument to method call
676aa8894c Checks whether right shift extends the sign bit.
9a5a5d1cb0 Checks whether right shift extends the sign bit.
bd9848d02f Fix typo in error message
7ae3a5e79d Resynchronize the TeX docs with (a) the module docstring, and (b) my recent fix to the code to make it behave like the module docstring.
c72c3bed77 Fix bugs in readinst(): * There was no error reported if the .read() method returns a non-string * If read() returned too much data, the buffer would be overflowed causing a   core dump * Used strncpy, not memcpy, which seems incorrect if there are embedded \0s. * The args and bytes objects were leaked
a4e75d74f8 Patch #100854 from jhylton: eliminate compiler warnings in pyexpat: 	The first two warnings seem harmless enough, 	but the last one looks like a potential bug: an 	uninitialized int is returned on error. (I also 	ended up reformatting some of the code, 	because it was hard to read.)
9e3d73af93 Fix mixed mallocs: re->re_patbuf.buffer is allocated with std malloc().
56509a3cb8 new test for posixpath module
e809b00f36 new test file for posixpath module
618e25dfdf Errare humanum est.
e17fd2a5af Got rid of __SC__ ifdefs.
cbf630f0a9 Include macglue.h for some function prototypes, and renamed a few mac-specific functions to have a PyMac_ name.
28fc880e9a Include macglue.h on the macintosh, so function prototypes are in scope.
e4b4863296 One more include of limits.h (possibly to be moved elsewhere when there is consensus where it should go).
1af5b082ab Removed guesstabsize.c, which is obsolete.
4ceaa03a3e - Removed guesstabsize.c, which is obsolete. - ANSIfication step 3: enable "require prototypes" flags. Still lots of warnings, mainly on init routines and bgen stuff.
9ae898b415 ANSIfication step 2: make sure all needed prototypes are available, and all needed header files included.
5e80a75799 Added a declaration of fileno() if we use GUSI. Not sure whether it should go here or in pyport.h really...
85152b93cb Fiddled declaration/implementation of setcallback() so that it is ansifyable.
88887aa38e small updates to string_join:     use PyString_AS_STRING macro on local string object     when resizing string, make sure resized string will always be big enough     split string containing error message across two lines add test to string_tests that causes resizing
672fac0d65 satisfy the -Wall: remove two unused local variables and unused ins function
d88296d25a ANSIfication step 1: get rid of Py_PROTO and Py_FPROTO.
4d4daed7cd Fix incomplete merge of Ping's SyntaxError enhancement patch (my fault). Comment change only.
7399b9e6e4 Moshe Zadka <mzadka@geocities.com>: Update the "in" / "not in" description to accomodate the current use of the __contains__() discipline.  This patch also incorporates suggestions from Marc-Andre Lemburg <mal@lemburg.com>, minor markup revisions from Fred Drake, and some rewording of the first affected paragraph (also from Fred).
85f363990c Create two new exceptions:  IndentationError and TabError.  These are used for indentation related errors.  This patch includes Ping's improvements for indentation-related error messages.
88e1932930 fixed a warning in getsockaddrlen
7f589fddad add expandtabs command (-e) change eliminate to delete (-d)
acab3d61e9 Change the table in the pyexpat.errors module to a series of datadesc elements (since the table was pretty screwed up); this is how it is done elsewhere in the manual.
fff9e20943 fix bug #42 reported by Andrew Dalke
b35de5b78a Neil Schemenauer <nascheme@enme.ucalgary.ca>: Change a cast, intialize a local, and make some sprintf() format strings type-appropriate (add the "l" to "%d").
5f1b27084a Bug fix: ? and ! were not full aliases for `help' and `shell' as implied in the documentation; the cases `? foo' and `! foo' failed.
7a11671e8b fixed inconsistent use of tab and spaces
d3cf692c38 Add test of resize() method of mmap objects
e0d0090e76 Docstring changes.
566d8a64eb Jeremy Hylton: better error message for unicode coercion failure
771d0675b6 string_join(): Some cleaning up of reference counting.  In the seqlen==1 clause, before returning item, we need to DECREF seq.  In the res=PyString... failure clause, we need to goto finally to also decref seq (and the DECREF of res in finally is changed to a XDECREF).  Also, we need to DECREF seq just before the PyUnicode_Join() return.
20f41b6456 add more tests of string.join variants to run_method_tests
4904829dbf fix two refcount bugs in new string_join implementation: 1. PySequence_Fast_GET_ITEM is a macro and borrows a reference 2. The seq returned from PySequence_Fast must be decref'd
dc0c031ad8 Now that prototypes are in scope, the compiler gives legit wngs about int size mismatches at two calls to s_rand.  Stuffed in casts to make the code do what it did before but w/o warnings -- although unclear that's correct!
194e43e953 two changes to string_join:
663809ed83 -- removed get_default compatibility kludge
dde6164402 - changed hash calculation for unicode strings.  the new   value is calculated from the character values, in a way   that makes sure an 8-bit ASCII string and a unicode string   with the same contents get the same hash value.
417c489def Give ConfigParser the capability to set as well as read options, and to write a representation of the configuration state in .ini format that can be read back in by a future read() call.  Thus this class is now a back end for .ini editors as well as parsers.
3e3175b5e7 ANSI-fication (fixed on parameter list I messed up in the patch)
8bc8f0d036 ANSI-fication
3646366f4c ANSI-fication, added #ifdef construction in mpz_coerce
f82b04ecbb factor out test definitions to string_tests module test_string and test_userstring run same tests for string methods
fd54757336 add isalpha and isalnum methods
cb27c35aa6 ANSI-fication, not really tested, but should (hopefully) compile
6a85027a97 ANSI-fication of the SGI modules (note that svmodule.c and sgimodule.c have already been checked in)
10723347c6 - stupid typo.
c716684df8 Add linker flag -export-dynamic so symbols in libpython*.a are exported.
44328e60df -- get rid of a compiler warning on unix.  (as reported    for #100836, but implemented in a different way)
1bbddd085c Added the line 'Testing UTF-16 code point order comparisons... done." to match addition to test_unicode.py.
964f123346 Adapted for Python 2.0 under RH Linux.
fb8849c4a5 remove prints of file objects from _test
a5ae490584 expect message "no regression test case for method 'encode'
a48dbde93b Patch from Joe Eaton <jeaton@hostway.net> (SF#100741) to fix following problem:   There is a silly bug in the fall-back dumbdbm.py database package in   the Python 1.5.2 standard distro. This bug causes any changes to an   existing item to generate a new key, even when the key already   exists.  After many updates, the .dir file used by dumbdbm grows to   a huge size, and can cause filesystem problems.
39e0e5a180 ANSI-fication
7d0c71ac8c ANSI-fication
286da3b46a ANSI-fying
41c36ffe83 ANSI-fication
416d413527 ANSI-fication
e89b15691e ANSI-fication
c4bc0e0895 ANSI-fication
0659b4af46 ANSI-fication
3707efef9b ANSI-fication
a788a7f0fb ANSI-fication
fe74263cec ANSI-fication
8235f1c834 ANSI-fication
f1ca898d85 ANSI-fication
faaad372ec ANSI-fication (and test if committing files works now)
f985064781 Better error handling of bad entity references.  Before when an & in an attribute value was not escaped, you could get two syntax errors: one about a missing semicolon and one about an unknown entity.  Now you get only one about a bogus ampersand.
b16714b4d0 Initialize the return value in collect_generations() since it is updated conditionally in the code.
14a4d88a2e Remove the "1" that Tim sticked to the preprocessor symbol for unknown reasons (cf. the rest of the headers in the distribution)
d8a933248e A small comment fix just to make sure I got my cvs/ssh setup right.
859bad00cb Guido said include these in the Great ANSI-fication, so here they are!
9ac81f69b2 - changed the nt.popen2 return values back to   (write, read, ...), based on feedback from GvR.
0466132ee4 - repaired locale.py for non-windows platforms.  the try/except   checked for the wrong exception.  my fault.  sorry.   (first reported by Alex Coventry)
b78165566e Exception__str__(): In case 1, be sure to decref the tmp local variable.  This crushes another memory leak.  Slight rewrite included.
a1ae88432d Use TQSQ (triple quoted single quote) module docstring for better font-locking.  This complets the merge with Mailman's version.
620f37723f - changed 1.5 to 2.0 in the help text   (the PYTHONHOMEHELP define)
faa209d6bd - ANSI-fication   (patch #100805 by Peter Schneider-Kamp)
3637799afe Update to use the new standard webbrowser module if available, otherwise uses the BrowserControl module.
bb7eeff44a - added popen.popen2/popen3/popen4 support for   windows.
766ccdcf18 - added optional bufsize argument to new popen methods.   for the moment, this argument must be left out or set   to -1 (only the default bufsize is supported, that is)
6c86b99dc1 - merged setlocale and set_locale.  the internal setlocale   function is overridden by a python version which accepts   *either* a string (old behaviour) or a locale tuple.
c70b4483d2 New module to control Web browsers; see the documentation for more information.
dbbf76bd5a Make tabnanny happy. mailbox.py: Convert to 4-space indents.
c2844af87b needs a space
100814dc44 ANSI-fication of the sources.
a2f5511941 ANSI-fication of the sources.
f5accf38ea - ANSI-fication   (patch #100784 by Peter Schneider-Kamp)
3c5d43d342 - ANSI-ification   (patch #100770 by Peter Schneider-Kamp)
08d87c6de1 Document addition of webbrowser.py Mention the ANSIfication of the source.
ffb9c770f8 - improved os.popen support for windows, based on win32pipe   by Bill Tutt.
ce81d59c0c Remove setup of HAVE_OLD_CPP; it is no longer used in the Python sources. The actual test for it is only commented out in configure.in, so it can be re-enabled if we ever run across the need for it again.
3cd2ee4037 Remove use of HAVE_OLD_CPP to support non-ANSI preprocessors.
ad9b1f8533 Patch from Peter Schneider-Kamp: convert curses module to ANSI prototypes, and substitute the conventional "args" instead of "arg".
bd03bfce45 Remove legacy use of __SC__; no longer needed now that ANSI source is the standard for Python implementation.
5cccf50931 - added (long) casts to a couple of Py_BuildValue calls,   just for the sake of it.
e25cfd8662 - fixed pointer size test in spawn functions.  also added   cast to make sure Py_BuildValue gets the right thing.
43298d1fff - win95/98 helper for new os.popen code
c2e7da9859 Somebody started playing with const, so of course the outcome was cascades of warnings about mismatching const decls.  Overall, I think const creates lots of headaches and solves almost nothing.  Added enough consts to shut up the warnings, but this did require casting away const in one spot too (another usual outcome of starting down this path):  the function mymemreplace can't return const char*, but sometimes wants to return its first argument as-is, which latter must be declared const char* in order to avoid const warnings at mymemreplace's call sites.  So, in the case the function wants to return the first arg, that arg's declared constness must be subverted.
ba09633e1e ANSI-fication of the sources.
45cfbcccc2 ANSI-fication of the sources.
ee238b977f ANSI-fication of the sources.
1b190b4636 ANSI-fication of the sources.
1f0968c5f8 Remove legacy use of __SC__; no longer needed now that ANSI source is the standard for Python implementation.
fd99de6470 ANSI-fication of the sources.
7dfeb42939 EnvironmentError__init__(): The two case clauses were missing `break's.  This first missing break caused a memory leak when case 3 fell through case 2 in the following example:
4288c80599 ANSI-fication of the sources.
4201b9e420 type_error():  Added "const" to signature to eliminate warning with -Wall.
3be9a8a5ed ANSI-fication of the source. Make the indentation and brace placement internally consistent.
799124718d ANSI-fication of the sources.
a83b68a143 Remove the only Py_PROTO in the docs.
dbd9ba6a6c Nuke all remaining occurrences of Py_PROTO and Py_FPROTO.
4be47c0f76 Get rid of unused vars in builtin_unicode (they were causing legit warnings).
3cf4d2b3ea ANSI-fication and Py_PROTO extermination.
ea9cb5aebf ANSI-fication and Py_PROTO extermination.
5eb6d4e3bf ANSI-fication and Py_PROTO extermination.
ff7df9d7b8 this one's a bit risky, but I've spent some considerable time staring at the diffs before checking this one in.  let me know asap if it breaks things on your platform.
54cf3dc88c -- ANSI-fying, names    (patch #100762 by Peter Schneider-Kamp, minus the     indentation changes)
c0348ac670 - removed barry's workaround, to make room for   bill's more complete solution.
89610a4d50 - _getdefaultlocale shouldn't accept arguments
8f017a01f8 - added _getdefaultlocale implementation for WIN32
ddbc11893f - this is a tentative checkin of the #100764 patch (by   Barry Scott).  it appears to solve the problem on NT   and 2000, but not on Windows 95.
2a1e060619 - changed __repr__ to use "unicode escape" encoding for unicode   strings, instead of the default encoding.   (see "minidom" thread for discussion, and also patch #100706)
d5c84ede06 ANSI-fication of the sources -- remove Py_PROTO!
146b28086f Minor revisions similar to some information in the new docstrings.
51b6bc55e3 ANSI-fication of the sources, convert to 4-space indents. Use PyArg_ParseTuple() to get better error messages. Add docstrings all around.
4cbc9f7650 delete unused local variable from _PyTrash_deposit_object
35e8afb76e Rearrange order of sections Fix some incorrect module names
4ca150bdb2 _Py_RefTotal should only be declared here when Py_TRACE_REFS are #define'd
2c4a3dceaf ANSI-fied sources, converted to four-space indentation. Converted to PyArg_ParseTuple() with method names to get better error messages.
edabdc1e9e ANSI-fied sources, converted to four-space indentation.
da940d8f8d Add method names to PyArg_ParseTuple() calls for better error messages. Convert to four-space indents.
5443c49fbb Markup improvements in sections relating to interactive behavior. Clarify some of the details of readline-related configuration.
e3a41c653a ANSI-fy the sources. Convert to using PyArg_ParseTuple() as appropriate to allow method names in error messages. Re-indent to four-space indentation.
0c89d4ec9a Pretensions of the 20th century... remove old-style preprocessor hackery (/**/), leaving only new-style preprocessor hackery (##).
7d3a511a40 Cray J90 fixes for long ints. This was a convenient excuse to create the pyport.h file recently discussed! Please use new Py_ARITHMETIC_RIGHT_SHIFT when right-shifting a signed int and you *need* sign-extension.  This is #define'd in pyport.h, keying off new config symbol SIGNED_RIGHT_SHIFT_ZERO_FILLS. If you're running on a platform that needs that symbol #define'd, the std tests never would have worked for you (in particular, at least test_long would have failed). The autoconfig stuff got added to Python after my Unix days, so I don't know how that works.  Would someone please look into doing & testing an auto-config of the SIGNED_RIGHT_SHIFT_ZERO_FILLS symbol?  It needs to be defined if & only if, e.g., (-1) >> 3 is not -1.
5639ba4896 ANSI-fy the sources.
509d79adaf Removed Py_PROTO, ANSI-fied sources.
43f04a36cf The tail end of x_sub implicitly assumed that an unsigned short contains 16 bits.  Not true on Cray J90.
a90b23c571 One of the new prototypes was missing the "void" args.
9ace6bc7ef Got RID of redundant coercions in longobject.c (as spotted by Greg Stein -- thanks!).  Incidentally removed all the Py_PROTO macros from object.h, as they prevented my editor from magically finding the definitions of the "coercion", "cmpfunc" and "reprfunc" typedefs that were being redundantly applied in longobject.c.
74b2677593 delete bogus file
480fa7319d Deleted bogus file.
2ea17faf4b fix inconsistent use of tabs and spaces convert semicolons to newlines
04f39aa859 fix inconsistent use of tabs and spaces
65d6edb478 fix inconsistent use of tabs and spaces
bc30b11764 Fix to use Py_UCS4. By Bill Tutt.
e12896ec98 New surrogate support in the UTF-8 codec. By Bill Tutt.
d6d06ade26 Tests for new surrogate support in the UTF-8 codec. By Bill Tutt.
fa1309fd72 Fix to use Py_UCS4
c826ecbf8f Add an entry for the KDE File Manager support from Peter Funk.
e55d5446ea Thomas Wouters <thomas@xs4all.net>: Allow -f* parameters to be passed to the compiler from Setup files.
9f688bf9d2 Some cleanup of longs in prepartion for Cray J90 fixes:  got rid of Py_PROTO, switched to ANSI function decls, and did some minor fiddling.
4707320566 Added new APIs and fixed some other Unicode ones (missing * or extra ' ').
5a20b21fb1 Added docs for the new Unicode and string APIs.
71f36983b9 Removed a prototype which is not used in socketmodule.c
1b1bcc9935 Fixed unicode() to use the new API PyUnicode_FromEncodedObject(). This adds support for instance to the constructor (instances have to define __str__ and can return Unicode objects via that hook; string return values are decoded into Unicode using the current default encoding).
5a5c81a0e9 Added new API PyUnicode_FromEncodedObject() which supports decoding objects including instance objects.
b6d78fcd9c Tests for new instance support in unicode().
3d476d73a9 So many things have changed over the last few weeks that it's probably a good idea to check the project files in again.
0b13e7c153 Changed all (hopefully) uses of unsigned 16 bit value to use H format specifier, now that h is signed-only.
89d017d072 Added the unchash module.
063e0cb4c6 Fix to bug #393 (UTF16 codec didn't like empty strings) and corrected some usage of 'unsigned long' where Py_UNICODE should have been used.
295b1bbca1 Defunct the _XOPEN_SOURCE define for now. Suggested by Fredrik Lundh as response to bug reports on True64 and IRIX.
2629bd5a33 Two more places where long should be used instead of int.  Especially true after revision 2.36 was checked in...
43279100f4 Bill Tutt: Added Py_UCS4 typedef to hold UCS4 values (these need at least 32 bits as opposed to Py_UNICODE which rely on having 16 bits).
e4dbb86ab8 New module webbrowser.  Easy-to-use controller objects to make using a Web browser as a help/information browser easy across platforms.
449c325303 Fixed some code that used 'short' to use 'long' instead.
85cc4d8940 Fixed a couple of places where 'int' was used where 'long' should have been used.
49b0c3bafe Fix bug #392, reported by Jonathan Giddy <jon@dstc.edu.au>: In posixmodule.c:posix_fork, the function PyOS_AfterFork is called for both the parent and the child, despite the docs stating that it should be called in the new (child) process.
589c35bcc7 Python 2.0 is not supposed to use string exceptions in the standard library & extensions, so create exceptions in extension modules using the PyErr_NewException() API.
28067821e2 added read_history_file and write_history_file XXX should perhaps support history truncation as well
aa7524cf1f Clean up markup to be more like recommended practice; only small changes needed.
1a10400692 Removed unused variables. Added two functions that were left out of the method definition table.
29fa30ea6b Correct a markup nit that caused a space to be dropped from the HTML version (actually a LaTeX2HTML bug), and clarified a sentence in the mktime() description based entirely on comments from Grant Griffin <grant.griffin@honeywell.com>.
fd022672a0 don't prepend "$(srcdir)/" to paths beginning with "$" since they are likely to be absolute.
e1a85f5e4a Minor changes.  Explain that for class exceptions, use excdesc but do not document the constructor parameters.  Need a better way, but this will do for now.
e3889da076 Make a distinction between shorts and unsigned shorts.
56cdce3070 Conditionally (currently on ifdef macintosh) break the large switch up into 1000-case smaller ones.
8968a8292f modified template to demonstrate subsection for examples.
d50338fbd9 Added support for H (unsigned short) specifier in PyArg_ParseTuple and Py_BuildValue.
63f3d17418 Added new codec APIs and a new interface method .encode() which works just like the Unicode one. The C APIs match the ones in the Unicode implementation, but were extended to be able to reuse the existing Unicode codecs for string purposes too.
3d1a1d7f0c Added prototypes for the new codec APIs for strings. These APIs match the ones in the Unicode implementation, but were extended to be able to reuse the existing Unicode codecs for string purposes too.
0a3f7978c4 Change whitespace in two places to silence tabnanny. Also fix spelling tupel -> tuple.
5802e48033 Added some further description to the usage of the seealso environment.
3c62d9e656 Several small changes, mostly to the markup, to improve consistency and internal hyperlinking.  Move some things around, also for consistency with other modules ("See also" stuff tends to live at the \section level, before sub-sections, etc.).
14ea85f325 Add entry for readline documentation.
011028cf74 Sjoerd Mullender <sjoerd@oratrix.nl>: Updates for recent changes in xmllib.
d14423abe2 Correct typo in description of the machine name parameter to the ConnectRegistry() function; there is no trailing period!
63099f911f added seealso pointing reader at readline example which uses atexit.
510ca1d338 simple-minded readline section doc based upon module's doc strings.
f9059ebede fixed indentation in several places
26a7983f08 fix indentation in one docstring
a2dccfbc09 fix indentation in three docstrings
191a28218f Typo: "This table table" -> "This table is" Noted by Nicholas Spies <ns11@voicenet.com>.
0915165096 added warning about incompatibility with other codes' use of sys.exitfunc.
54925f98d3 Add more "volatile" decls to stop gcc -Wall warnings. Somebody w/ gcc please check that the wngs are gone! There are cheaper (at runtime) ways to prevent the wngs, but they're obscure and delicate.  I'm going for the easy Big Hammer here under the theory that PCRE will be replaced by SRE anyway.
2855290b84 maintenance release:
1f46860a29 Fix to bug #389:
da13f89fee Remove definition of _GNU_SOURCE, since Python.h now does it for us
5f0e29eb45 Modified the encode interfaces of all builtin codecs to accept any object which can be converted to Unicode by means of PyUnicode_FromObject().
adf63d6c24 check for Pth *after* the standard system threading libraries. Pth should not override those.
a7acf425f6 Added new .isalpha() and .isalnum() methods which provide interfaces to the new alphabetic lookup APIs in unicodectype.c.
f3938f55c7 Added new lookup API which matches all alphabetic Unicode characters, i.e the ones with category 'Ll','Lu','Lt','Lo','Lm'.
4027f8f4b3 Added new .isalpha() and .isalnum() methods to match the same ones on the Unicode objects. Note that the string versions use the (locale aware) C lib APIs isalpha() and isalnum().
9d4674168f Added tests for the new .isalpha() and .isalnum() methods.
f03e74126e Modified the ISALPHA and ISALNUM macros to use the new lookup APIs from unicodectype.c
82249c8389 Added #defines to enable SUSv2 compatibility where available and to switch on support for BSD and SysV on platforms which use glibc such as Linux.
fd9f168bcf Fixed so the ZIP file (which is bundled into an executable) goes in the   temporary directory ('bdist_base'). Added --dist-dir option to control where the executable is put.
c4eb84accb Added --dist-dir option to control where output archive(s) go.
040dc0b691 Added the --dist-dir option that the "bdist_*" will use to control where they place their output files.
c0614105aa Added the --dist-dir option to control where the archive(s) are put; defaults to 'dist' (ie. no longer in the distribution root).
b5316188ee Created a new chapter on structured markup processing, including the existing SGML, HTML, & XML support, and providing a home for the new XML support as it becomes documented.
c05cbb0527 Wrapped some long lines. Cleaned up the table of error constants defined in pyexpat.errors; an extra pair of braces had pretty much destroyed the table!  (Not sure why.) Moved the pyexpat.errors module documentation into a \section with the proper headers for a module.
7bd9f41c65 pyexpat.errors is a *strange* module!
f93cb1875c Evt moved to the core toolbox modules.
7797d3692b Remove warning about local variable possibly being using uninitialized; noted by Marc-Andre Lemburg <mal@lemburg.com>.
1f5871e834 Removed Py_PROTO and switched to ANSI C declarations in the dict implementation.  This was really to test whether my new CVS+SSH setup is more usable than the old one -- and turns out it is (for whatever reason, it was impossible to do a commit before that involved more than one directory).
637f6642f2 Fixes for compilation problems on Tru64 reported by Mark Favas
5baaf66525 2 fixes plus one extension: - Actually count the linefeeds in a the CDATA content. - Don't call the endtag handler for an unmatched endtag (this makes   the base class simpler since it doesn't have to deal with unopened   endtags). - If the __init__ method is called with keyword argument   translate_attribute_references=0, don't attempt to translate   character and entity references in attribute values.
8bcfb8a5e0 Fixed symbol search for defining NSIG. It now also checks _NSIG which some C libs define (e.g. glibc).
1e7205a62a Bill Tutt: Make unicode_compare a true UTF-16 compare function (includes support for surrogates).
4b0200e322 libinstall:  For the first bytecode compilation pass, use -tt instead of              -t.  This ensures that each installation from source is              checked for compliance.  This is needed to make sure .py              files in the various Lib/plat-foo/ directories are tested              even if the core developers do not have access to the              corresponding platforms.
6c4753f925 Used original SAX handling form.
99b84bdaad Removed some tabs.
fe38d2998f PyMac_FindModuleExtension now uses a size_t as its size parameter for compatibility.
db6382941b Squash signed-vs-unsigned warning.  Also edits to bring into line with Python coding stds (max line length, C-style comments).
489d54ef66 Typo repair in docstring -- my fault.
41aa8e523d Include limits.h if we have it.
ee398fa058 Mac only: two epoch problem workarounds are no longer needed for GUSI >= 2.0.5. One still is:-(
72b82ba16d - fixed grouping error bug
6f01398236 - added lookbehind support (?<=pattern), (?<!pattern).   the pattern must have a fixed width.
40c48685a2 ANSI-fication, remove Py_PROTO, etc. Revise math_1(), math_2(), stub-generating macros, and function tables to use PyArg_ParseTuple() and properly provide the function name for error message generation. Fix pow() docstring for MPW 3.1; had said "power" instead of "pow".
22269b5976 Andrew Kuchling <akuchlin@mems-exchange.org>: Typo in string literal: execpt --> except
17647f5201 Compute the name of the test file so that it can be found both when this test is run as a script and when imported via the regression test framework.
25e7cee1c8 get_starttag_text():  Document this method.
0ea1fc8acf Fix bug #379, reported by Phillip Porch <root@theproch.com>: openpty():  Fallback code when os.openpty() does not exist attempted to             call _slave_open(), which should have been slave_open().
ae96aab1fe Marc-Andre Lemburg <mal@lemburg.com>: Update the API docs for the new macros Py_UNICODE_ISALPHA() and Py_UNICODE_ISALNUM().
a9c103bc09 Added new Py_UNICODE_ISALPHA() and Py_UNICODE_ISALNUM() macros which are true for alphabetic and alphanumeric characters resp.
891bc65486 If auto-conversion fails, the Unicode codecs will return NULL. This is now checked and the error passed on to the caller.
52dc76c81f Eric S. Raymond <esr@thyrsus.com>: This patch implements relative-path semantics for the "source" facility resembling those of cpp(1), documents the change, and improves the shlex test main to make it easier to test this feature.  Along the way, it fixes a name error in the existing docs.
353aaadd9b Moshe Zadka <moshez@math.huji.ac.il>: Substantial updates to reflect Moshe's Gordon's enhancements to the module.
2b0d98bc7f cmpfiles():  Added shallow and use_statcache parameters, with same meanings              and defaults as for filecmp.cmp().  Updated docstring              accordingly, and formatted it more like others in the standard              library.
046d27215f Martin von Löwis <martin@loewis.home.cs.tu-berlin.de>: This patch delegates more string functions to string object methods, uses the varargs delegation syntax, and stops using stringold.
fcc95a4d04 Tim-blessed documentation for math.frexp().
b4dccf0dcd Checked in a wrong version.
090c2161a1 The example_nt directory was old enough to vote.  Frank Stajano pointed out some of the problems he had following the instructions, and I stumbled into the others:  MSVC has changed in several respects, Python has changed the directories into which it builds its own Windows outputs, and we grew the unusual scheme of appending "_d" to the names of debug-mode output files.
019bcb598d - changed sre.Scanner to use lastindex instead of index.
c2301730b8 - experimental: added two new attributes to the match object:   "lastgroup" is the name of the last matched capturing group,   "lastindex" is the index of the same group.  if no group was   matched, both attributes are set to None.
c9c02c4cf3 Repair docs for math.frexp (they were wrong). Reported on c.l.py by Kirill Simonov.
7cafe4d7e4 - actually enabled charset anchors in the engine (still not   used by the code generator)
b19948b7fb Typo (mine):  Garsholm --> Garshol Noted by Rob Hooft <rob@hooft.net>.
3562f11764 -- use charset bitmaps where appropriate.  this gives a 5-10%    speedup for some tests, including the python tokenizer.
c13222cdff - fixed "{ in any other context" bug
0cebe439ce test():  Removed; regression test is in test.test_winreg2, not testreg.
f9a4a6eec1 Typo repair.
1e68827c8f Misc fixes and improvements.
bd8c2ae758 Removed unncessary dependency.
ebc0473c05 Fixed test output
22d2546520 today's SRE update:
c3a65982a3 others --> other's (possessive) Usage error noted by Grant Griffin <grant.griffin@iowegian.com>.
506a7a87ff Send a "ARTICLE" --> Send an "ARTICLE" Usage error noted by Grant Griffin <grant.griffin@iowegian.com>.
791b366f8f Added more changes from /F
7993bcc040 Added minidom tests.
edd9924474 a minimal test app to show how to build a standalone app with W
efecc7d05b changed repr and str to always convert unicode strings to 8-bit strings, using the default encoding.
5069498884 added clearkey = '\033'
ed2ed9483f fixed bug in comment matching
b58e6b10b6 Tightened xml.sax.__init__.py
fed4f1e9c5 Changes from Moshe: - distutils: Windows installers are already working
46d565111e getatime() returned the mtime instead of the atime. Similar to an old bug in ntpath.py.
9e94afd18d Fix bug #314, reported by Craig Allen <cba@mediaone.net>: splittype():  Always lower-case the URL scheme; these are supposed to be                normalized according to RFC 1738 anyway.
162bd855a6 Fix bug #345 reported by David Bolen <db3l@fitlinxx.com>: getatime() returned the mtime instead of the atime. Similar to an old bug in posixpath.py.
d95f4e1a0d Martin von Loewis <loewis@informatik.hu-berlin.de>: Correct typo that caused a well-formedness failure.
73678dac48 Reference cycle fixes
8fcaa92c5f init_exceptions(): Decref `doc' so it doesn't leak.
c08cb04c29 the usual
880066a9cb A bunch of project files were checked in as text files. They should all be binary (cvs admin -kv has now been applied).
74991fa4a3 Add ucnhash (new subproject).
20c8bc6ba3 The Python include paths were not specified.
728819af5d Restore strict checking of socket address values; addresses passed to the bind(), connect(), and connect_ex() methods must be a single parameter.
54610f31cc output for openpty test
3e4d2f6dcf Define a magical symbol and magic include path so it will compile without changes to the bsddb source.
2c62154e98 Add ucnhash to the workspace, as a dependency of python20.
5824f373d4 ucnhash now correctly builds for Windows.
9802255444 Update all projects so Debug builds use "/Zi" instead of "/ZI", which means everything should still build under MSVC5
610a827b13 Repaired two URLs.
b906d2ee66 Do not build the "longhtml" version for pre-release versions.
1cd3c14034 The new copyright / license.
a0f7e8574c Thomas Wouters: Test script for openpty()
db67739d4f Jack Jansen, Mac patch:
f12d7a02a0 Jack Jansen, Mac patch:
63e97ad4ea Jack Jansen, Mac patch:
4cc6ac7b87 Neil Schemenauer: small fixes for GC
ce8e1dc395 clean up warnings in Win32 build of mmapmodule.c
9f754e0e2d In b_setitem(), instead of the platform dependent CHAR_MIN and CHAR_MAX, use hardcoded -128 and 127.  This may seem strange, unless you realize that we're talking about signed bytes here!  Bytes are always 8 bits and 2's complement.  CHAR_MIN and CHAR_MAX are properties of the char data type, which is guaranteed to hold at least 8 bits anyway.
973e4dcaff Update a bunch of URLs.  No longer suggests to join PSA or Consortium.
a6161edf02 Refer to "Authors", plural
ef4bb5ffe1 Change copyright notice.
8357c4c9c6 Update the version number in an example
70ba382788 Updated the URL for Python 2.0
4b5fb0772e Update for 2.0b1.  Also add more text, to be more explicit about what the dozen+ subprojects are for, which are and aren't expected to build out of the box, and what else is needed to get them all to build.  Also explained that Alpha configurations don't refer to pre-beta, but to the Alpha processor!  That's baffled me for years <0.7 wink>.
ffcc3813d8 Change copyright notice - 2nd try.
fd71b9e9d4 Change copyright notice.
4c136eefab Thomas Wouters <thomas@xs4all.net>: Test case for the pty module.
276fa43faf Fix another error on AIX by using a proper cast.
9a15c211cf Fix an error on AIX by using a proper cast.
64529cd7ce Crude way to fix a problem on AIX: #undef STAT before defining it.
55a4f4a528 - fixed code generation error in multiline mode
361b583e88 Only include <basetsd.h> for VC 6.0 and higher.
ef7bae6b2f replaced <some suitable mail address> with something slightly more suitable.
ef34bd2c0d -- changed $ to match before a trailing newline, even    if the multiline flag isn't given.
47674029e1 As Neil Schemenauer points out, WITH_CYCLE_GC should be uncommented if we want to have GC enabled in the beta.
b6e54adb1a Ooops!  I didn't finish all the renaming needed here, so this was attempting a recursive import and causing a fatal error.
8173d99eec Add back a missing CRLF line ending.
8f8e2428f7 s/REGENTS/COPYRIGHT HOLDERS/ followed by paragraph reflow.
96fee02917 Output for test_winreg2.
1b5ec76190 Simplify the registry-module-finding code: _winreg or win32api/win32con. This'll work fine with 2.0 or 1.5.2, but is less than ideal for 1.6a1/a2.  But the code to accomodate 1.6a1/a2 was released with Distutils 0.9, so it can go away now.
2658d15d45 Paul Prescod <paul@prescod.net>: Regression test for the new winreg.py module.
0412e494b8 Line-wrap and properly indent a couple of docstrings.
f857ac97e9 Ignore the generated api.tex.
1d758b0108 The new copyright / license.
4ccea94152 - reverted to "\x is binary byte"
1739be50cb Small grammatical correction from Frank Stajano.  Added comment with suggestion from Frank for an example and further explanation.
46346ec14e Try to make sure \code always uses roman (non-italic) text. Change a 1.6 version number used in a an example in a comment to 2.0.
25e1726d31 [*** Not tested as I don't have Windows running right now! ***]
7efcafb994 add note about what happened to Python 1.6 also, fix type (not caught by Rob Hooft, but could have been :-)
a0f3c5c8d5 Document --with-thread as deprecated.  This gets rid of the annoying newline in configure --help.
ab1c7918f6 * added a randomize flag and corresponding -r command line argument that   allows the caller to execute the various tests in pseudo-random order -   default is still to execute tests in the order returned by findtests().
2850d18615 Switch to sre for regular expression matching (the new mini-re module is actually by Fredrik Lundh).  This will break the re tests -- Fredrik will fix this before the final release.
ef82cd7234 Enable the garbage collection module by default.  --without-cycle-gc disables it.  The gc test is moved to just after the thread test, as is the wctype-functions test.
615ae55eca Trent Mick <trentm@activestate.com>:
4c82b2366f Trent Mick <trentm@activestate.com>:
4358b2c928 the usual
257543c78d Setup.thread.in was misnamed so it has been replaced by Setup.config.in.  The latter contains all configure-time selectable modules; currently thread and gc.
5a06fae399 Add Setup.config
30f76ffd00 Update version numbering from 1.6 to 2.0.
61b49b3d6b Removed the comment about the thread module.
6de7213e7a Setup.thread => Setup.config
cf053b15b5 Added #undef of WITH_CYCLE_GC for autoconf's delight.
633a8d90d5 Update authors email address and corporate affiliation.
e06f0f9a13 Uncomment some additions from Vladimir pertinent to 2.0 but not 1.5.2.
306e2403fa Python's .lib is now named Python20.lib
4247ba63bd Martin von Löwis <loewis@informatik.hu-berlin.de>: Do not forget to install the xml packages!
aad1d4b8f2 Update the release number & date, Guido's employer.
f0e88980f3 Document randrange().
2e7cbc2cda Fix an icon width; a "32" became a "3" somehow, and that did not look as nice. ;)
094c9e587c remove all prints (since the prints where of memory locations)
a44d353e2b Trent Mick <trentm@activestate.com>:
d49e5b4667 Marc-Andre Lemburg <mal@lemburg.com>: A previous patch by Jack Jansen was accidently reverted.
ed2bf9c880 Oops.
cce79a1582 Poke and hope for Tcl version: now settable through _TCLMINOR_ variable...
fa01bf15b4 add gcmodule
b3c66be8a9 Change the include etc paths to Tcl 8.3.1.
a1956e2f26 Move Wise install dir consistently to C:\Wise.  Don't use %_WISE_% in include, it doesn't seem to work.
f00562a962 Poke and hope for Tim...
3afe36d63f More 2.0 stuff -- fix workspace, remove 1.6 files
0640e1161f the mad patcher strikes again:
ae1b5b2e98 Trivial commit to test Windows CVS capabilities.
62cdd96acb Credit /F in a few places Mention the GC module Add MH's explanation of the Windows crash Add atexit.py
43b3b49b5a - fixed lookahead assertions (#10, #11, #12)
a4657f736c Marc-Andre Lemburg <mal@lemburg.com>: Fixed a quote bug. Thanks to Fredrik Lundh.
f28dd83b86 Marc-Andre Lemburg <mal@lemburg.com>: New buffer overflow checks for formatting strings.
587794b386 Marc-Andre Lemburg <mal@lemburg.com>: Added test output.
d70141a2d9 Marc-Andre Lemburg <mal@lemburg.com>: New test for huge formatting strings (these could cause core dumps in previous versions).
e3f257e681 Marc-Andre Lemburg <mal@lemburg.com>: Include <> -> "". Removed some left over code at the end of the file. Patch by Bill Tutt.
90321ec314 Marc-Andre Lemburg <mal@lemburg.com>: Include <> -> "". Patch by Bill Tutt.
6cdec2efbb New test for the ucnhash module.
5f2e75e87c Marc-Andre Lemburg <mal@lemburg.com>: Updated test output (the ucn tests are now in test_ucn).
af69f15d21 Marc-Andre Lemburg <mal@lemburg.com>: Moved tests of new Unicode Char Name support to a separate test.
b71624e698 - added support for (?P=name)   (closes #3 and #7 from the status report)
c155f828fa Making a tiny change to figure out what I'm going to screw up by trying to use CVS under Windows at all ...
90a0791322 - pedantic: make sure "python -t" doesn't complain...
df02d0b3f0 - fixed default value handling in group/groupdict
47c60ec9a0 Describe a bit about writing test cases for Python...
c5007aa5c3 final patches from Neil Schemenauer for garbage collection
4e542a3d99 replace constant 1 with symbolic constant METH_VARARGS another typo caught by Rob Hooft
9262b8ab1f another typo caught by Rob Hooft
2a2c218525 penultimate phase of Neil Schemenauer's GC patches update configure files (turn --with-cycle-gc on for beta release?)
57a2f7f8ef Change description of altzone to not refer to the "0th meridian".
9a748aa832 Say "manual page", not "man page", when referring to the Unix manual.
947121fd9c Add a comment about needing to change a #include if using a version of Berkeley DB 2.0 or newer; most Linux distros will include a more recent version than 1.85.
abbc7344a4 Make sure to note that this module was added for Python 2.0!
6e71cdd9f1 Reflect the name change to _winreg; we still need documentation for the new winreg module.
01df453f16 Update Python version numbers from 1.6 to 2.0 where appropriate.
0e8c518a62 Bump version to 0.9.
b9a22a1a36 Bump version to 2.0.
a04eaad5c7 Trent Mick <trentm@activestate.com>: This patch fixes possible overflows in the socket module for 64-bit platforms (mainly Win64). The changes are:
5cdaf26be3 Somehow this had HAVE_SYS_SOCKET_H twice.  Once is enough.  Rerunning autoheader revealed this.
f385c5e544 Patch by Nadav Horesh to make acosh and asinh better.
730067effc Finished the GC section. Removed all but one XXX. Replaced 1.6 with 2.0. Various minor corrections and additions.
efc43d4478 Document recently-added mouse-related functions
01016fe972 - fixed split behaviour on empty matches
5d6ae76c09 Allow 2.0 on the list of target versions.  NB. this isn't enough: the GUI part, misc/install.c, still needs to be updated, and it looks like a non-trivial change.
29c08beab0 still trying to figure out how to fix the remaining group reset problem.  in the meantime, I added some optimizations:
22e1bf7da5 Don't try to guess the name of a .def file -- if one is supplied, use it, otherwise just generate an '/export:' option.
83c3870e2b On second thought, first try for _winreg, and then winreg.  Only if both fail do we try for win32api/win32con.  If *those* both fail, then we don't have registry access.  Phew!
cc7371c437 Removed --l2h-config option; it introduced unnecessary complexity and is not needed anywhere.
cd079c4c28 Changed to use _winreg module instead of winreg.
f34506a3d4 Cleaned up and reformatted by Rene Liebscher. More reformatting by me. Also added some editorial comments.
e4aa4ca698 Bump version to 2.0.
537a551e23 Bump version to 2.0b1.  Change copyright to BeOpen, CNRI, SMC.
632ea6e353 Bump version to 2.0b1.
901454e6cc Tentative 2.0 and BeOpen upgrade.
0e12395190 Trent Mick <trentm@activestate.com>: This patch fixes a possible overflow in the Sleep system call on Win32/64 in the time_sleep() function in the time module. For very large values of the give time to sleep the number of milliseconds can overflow and give unexpected sleep intervals. THis patch raises an OverflowError if the value overflows.
699f352fb2 Trent Mick <trentm@activestate.com>: This patch fixes the posix module for large file support mainly on Win64, although some general cleanup is done as well.
dfb4ebda24 Trent Mick <trentm@activestate.com>: Mark Hammond provided (a long time ago) a better Win32 specific time_clock implementation in timemodule.c. The library for this implementation does not exist on Win64 (yet, at least). This patch makes Win64 fall back on the system's clock() function for time_clock().
a3f6e91307 This patch extends PC/config.h and configure.in as appropriate for 64-bit readiness (the config values are needed for patches that I will be submitting later today. The changes are as follows:
d04038d9d2 Update comments relating to the removal of the -X option and of string exceptions in the interpreter and standard library.
c6e72e0b45 Typo.
252af9ca27 The low-level interface is now in _winreg; update the import here.
55c3819e6a Paul Prescod <paul@prescod.net>: W3C DOM implementation for Python.
3f6a7b5efb Package docstring.
3e06ab1d44 The usual :)
45cd9de2bb Paul Prescod <paul@prescod.net>: SAX interfaces for Python.
0d800e1481 Package docstring and initialization.
e85c350600 Package docstring.
13634cf7a4 This patch addresses two main issues: (1) There exist some non-fatal errors in some of the hash algorithms. For exmaple, in float_hash and complex_hash a certain part of the value is not included in the hash calculation. See Tim's, Guido's, and my discussion of this on python-dev in May under the title "fix float_hash and complex_hash for 64-bit *nix"
b46696c0ed [Old patch that hadn't been checked in.]
8094611eb8 - fixed another split problem   (those semantics are weird...)
34a96371c3 - workaround to make 1.6 build under MSVC 5.0.  hopefully,   trent (who broke it in the first place ;-) will come up   with a cleaner solution.
1bfdc78c84 Skip Montanaro: modify test_socket.py to listen/connect using loopback addr
be2211e940 - fixed split   (test_sre still complains about split, but that's caused by   the group reset bug, not split itself)
69218178ec Paul Prescod <paul@prescod.net>: OO wrapper for _winreg; blessed by Mark Hammond.
ee8c418408 Finish converting the winreg extension to _winreg.
5917ecb0a4 Nils Fischbeck: added doc strings to everything.  Martin von Loewis has reviewed this, too.
26e89d0185 Change string exceptions to class exceptions.
270e19b060 Update the module name to _winreg, pending checkin of Paul Prescod's OO wrapper for this module.
c0d24d8bbf Thread support is turned on my default now.  To disable building threads use --without-threads.  No extra tests of thread/compiler combinations have been added.
3937c8a738 Updated the comment in this file to reflect the new defaults.  Threads are enabled by default now unless --without-threads is given to configure.
338311378e Change the loop index in normalizestring() to size_t too, to avoid a warning on Windows.
a22a0b3e86 pyexpat notes: add the name of the archive to the ar command
63b08ac2f7 Whoops!  We just discovered that Gordon's revamp of this module was accidentally wiped out by Ping's patch (which shouldn't have affected this file at all, had Ping done a cvs update).
a2aa34f243 Marc-Andre Lemburg <mal@lemburg.com>: New test output
b389df3402 - renamed "tolower" hook (it happened to work with   my compiler, but not on guido's box...)
6fc9f8ed18 Typo fix.
4781b07201 - make sure group names are valid identifiers   (closes the "SRE: symbolic reference" bug)
75f2d675ed - last patch broke parse_template; fixed by changing some   tests in sre_patch back to previous version
e97ecf9705 demonstration importers
6c68dc7b1a - removed "alpha only" licensing restriction - removed some hacks that worked around 1.6 alpha bugs - removed bogus test code from sre_parse
436c3d58a2 towards 1.6b1
102f3ad676 towards 1.6b1
3de16f3db4 Improve explanation of how to build the pyexpat module.
ffdc48f45c Convert to use class-based exceptions. Correct exception information in one docstring.
8aa3bd9098 Make it clear that id() can return either a long integer or a plain integer.
0f353ed90d Add update of httplib docs to reflect Greg Stein's recent updates. Greg, this is yours!
df112a76a9 Fixed so 'get_source_files()' calls 'check_extension_list()' -- that way, we can run "sdist" on a distribution with old-style extension structures even if we haven't built it yet.  Bug spotted by Harry Gebel.
499822d959 Fixed 'findall()' so it only returns regular files -- no directories. Changed 'prune_file_list()' so it also prunes out RCS and CVS directories. Added 'is_regex' parameter to 'select_pattern()', 'exclude_pattern()',   and 'translate_pattern()', so that you don't have to be constrained   by the simple shell-glob-like pattern language, and can escape into   full-blown regexes when needed.  Currently this is only available   in code -- it's not exposed in the manifest template mini-language. Added 'prune' option (controlled by --prune and --no-prune) to determine   whether we call 'prune_file_list()' or not -- it's true by default. Fixed 'negative_opt' -- it was misnamed and not being seen by dist.py. Added --no-defaults to the option table, so it's seen by FancyGetopt.
4f4b799b33 Jack Jansen: Use include "" instead of <>; and staticforward declarations
e8d2d6b34c Some new names (some contributors of patches that haven't even been accepted yet!)
5e08cb8e50 Vladimir Marangozov:
d7823f2645 Vladimir Marangozov:
98626cd7ac Urmpf.  Quality control on this patch lapsed a bit. :-(
a04ff0fb53 Running the program through itself reveals that one end tag was mislabeled.
59811b189d Peter Schneider-Kamp:
cc6a438d7f Trent Mick:
534b7c5c96 Trent Mick:
1c44e28766 Trent Mick: familiar simple Win64 patches
ab43fcad5f Give Moshe some work to do.
5c529d3f3e Add a "See also:" link to the curses.ascii module.
589f44b9d0 Made the title of the Examples subsection plural!
be93a8332e Added note that the atexit module was added for Python 1.6.
582acece2e Trent Mick's Win64 changes: size_t vs. int or long; also some overflow tests.
6f2a5efec9 Added entry for the curses.ascii module.
5ccd4b2a54 Added entries for the curses.ascii module.
6da3434e03 Trent Mick: familiar simple Win64 patches
0ed1148b75 added ucnhash (optional on USE_UCNHASH) and the mysteriously disappeared math.
e641ba1e6a ucnhash and various other modules added.
2819146cc7 Added USE_UCNHASH (experimental, I hope it can go), USE_TOOLBOX and USE_QT.
ad89bbcd88 Trent Mick: change a few casts for Win64 compatibility.
2c9cb7aff3 Added USE_UCNHASH (experimental, I hope it can go)
4e716fa0ac Skip Montanaro <skip@mojam.com>: Added an example of using an HTTP POST request.
fa48116993 Trent Mick: use size_t instead of int where appropriate (time_strftime()).
e826895d48 Trent Mick: use size_t instead of int where appropriate (set_key()).
26418a90f0 Trent Mick: use size_t instead of int where appropriate (call_readline()).
2650a42f0b Trent Mick: use size_t instead of int where appropriate (mpz_format()).
b6f657c0cc Trent Mick: use size_t instead of int where appropriate (various spots).
7d0ae5e14e Trent Mick: use size_t instead of int where appropriate (in fromfile(), to hold fread() result.)
2f8a054418 Trent Mick: use size_t instead of int where appropriate (in strxfrm(), to hold strlen() outcome).
3262e16753 Trent Mick:
106f2dae86 Trent Mick:
7388f730a3 Support constant as a font name for the first column of a table using the tableii & friends markup family.
eceebb87d9 Jack Jansen: Moved includes to the top, removed think C support
40ced50cb0 Jack Jansen: Mac Carbon: don't include sys/types if we don't have it
9cb1cabb77 Jack Jansen: Removed support for long-dead Think C compiler
6b7a5d8959 Jack Jansen: Removed Macintosh tab-guessing code
b7c298f806 Jack Jansen: Support for conditional inclusion of methods and functions
35c09f2e51 Revise the description of when functions retrieved from class instances are and are not turned into bound methods; some confusion was noted by Andrew Dalke.
6da0b9148c Michael Hudson <mwh21@cam.ac.uk>: As I really do not have anything better to do at the moment, I have written a patch to Python/marshal.c that prevents Python dumping core when trying to marshal stack bustingly deep (or recursive) data structure.
7833447f8f Trent Mick <trentm@activestate.com>: Testing: test_array.py was also extended to check that one can set the full range of values for each of the integral signed and unsigned array types.
541dc3b7b2 Trent Mick <trentm@activestate.com>:
c82634c13c Thomas Wouters <thomas@xs4all.net>: Documentation updates related to the addition of openpty() and forkpty().
4e5302a27e Marc-Andre Lemburg <mal@lemburg.com>: Perfect hash table generator. Outputs a Python extension module which provides access to the hash table (which is stored in static C data) using custom code.
c5bb9c21fe Marc-Andre Lemburg <mal@lemburg.com>: Generator for the new ucnhash module (ucnhash.h|c). Uses perfect_hash.py to create the ucnhash module.
93c409a590 Marc-Andre Lemburg <mal@lemburg.com>: Utility extension module needed by perfect_hash.py
0f774e3987 Marc-Andre Lemburg <mal@lemburg.com>: Patch to the standard unicode-escape codec which dynamically loads the Unicode name to ordinal mapping from the module ucnhash.
2dabf69f5c Marc-Andre Lemburg <mal@lemburg.com>: Added new ucnhash module by Bill Tutt.
b0c0ecfa26 Marc-Andre Lemburg <mal@lemburg.com>: Added new ucnhash module.
4a9188c557 Marc-Andre Lemburg <mal@lemburg.com>: Updated test output.
a6f73d64c5 Marc-Andre Lemburg <mal@lemburg.com>: Added tests for the new Unicode character name support in the standard unicode-escape codec.
8cef4cf737 Thomas Wouters <thomas@xs4all.net>:
5782386268 Marc-Andre Lemburg <mal@lemburg.com>: MSVC project file for the new module ucnhash. This may have to be added to pcbuild.dsw with an dependancy on python16.
8fb8748a5f Marc-Andre Lemburg <mal@lemburg.com>: New ucnhash module by Bill Tutt. This module contains the hash table needed to map Unicode character names to Unicode ordinals and is loaded on-the-fly by the standard unicode-escape codec.
808d9b140e Marc-Andre Lemburg <mal@lemburg.com>: Exports the C API of the new ucnhash module.
ec105d0993 Enhanced memory-reference information in the description of Py_BuildValue(), based on response from Frank Stajano <fstajano@uk.research.att.com>.
cabbc3be5b Added documentation for PyOS_AfterFork().
2b9e180ec3 Added memory-reference information to the description of Py_BuildValue(), based on comments from Frank Stajano <fstajano@uk.research.att.com>.
c19425d520 Added the atexit module and documentation from Skip Montanaro <skip@mojam.com>.  Revisions to the markup to make it pass LaTeX, added an index entry and a reference from the sys.exitfunc documentation.
a05e293a21 typos fixed by Rob Hooft
7c014684c2 Marc-Andre Lemburg <mal@lemburg.com>: Better error message for "1 in unicodestring". Submitted by Andrew Kuchling.
e39607f27e Changed the #error to a #warning when checking gcc versions, and noted the minimum recommended version in the message.
69db0e4a0b Added section on cycle GC Various minor fixes
cc623a2574 Lyle Johnson: pass in temp directory as 'build_temp' argument when calling 'link_shared_object()'.
bfc79d644a Lyle Johnson: added 'build_temp' parameter to 'link_shared_{lib,object}()' methods (but not 'link_executable()', hmmm).  Currently only used by BCPPCompiler; it's a dummy parameter for UnixCCompiler and MSVCCompiler.
7d9c705b23 Typo fix.
fe9b818b7d Lyle Johnson's interface to Borland C++, with a few editorial comments by me. Two major points:   * lots of overlap with MSVCCompiler; the common code really should be     factored out into a base class, say WindowsCCompiler   * it doesn't work: weird problem spawning the linker (see comment for     details)
b0b98a5ee5 Fixed to use 'reinitialize_command()' to fetch "install" and "install_lib"   command objects. Various formatting tweaks, typo fixes in comments.
edc6a519dc Fixed to use 'reinitialize_command()' to fetch the "install" command object.
a1e4b05ac4 Fixes for compiling on Tru64. Define a STRICT_SYSV_CURSES macro on SGI, Sun, and Tru64, to mark systems that don't support some features.
b6e468796a Fix two typos (, instead of ;)
8628157026 Fix comment typo noticed by Rob Hooft
af5b76677f Changed obsolete e-mail alias
8e9d23b250 Added support for mouse functions: mousemask(), mouseinterval(), getmouse(), ungetmouse(), and window.enclose().  wmouse_trafo() seems of marginal importance at the moment.
b231e1ae18 Oops, only do that AIX hack on AIX.
4f880280c2 Fixed LDSHARED for AIX, based on a patch by Rene Liebscher. Ditched my old code that fixed relative paths in the Makefile -- didn't work,   doomed to failure, etc.
b593793fce A-ha!  Read Thomas' patch a little more carefully and figured it out: the 'implib_dir' attribute is back (only on NT, of course).
f3bd747c4e Thomas Heller: added --swig-cpp option and fixed silly typos in SWIG support. Also supposedly made some change to where .lib files wind up under MSVC++,   but I don't understand how to code is doing what Thomas says it's   doing.
27199e8029 Thomas Heller's "bdist_wininst" command (unreviewed, untested).
1f9b73b575 Infrastructure support for the "bdist_wininst" command.
855dab9987 Added 'include_dirs' parameters all over the place. Added 'check_lib()', which provides a subset of the functionality of   'check_func()' with a simpler interface and implementation.
e8d7dbfe42 Sync to ESR's current version
8f790fe459 Drop back to old version of wrapper(); ESR reports that it broke things, and I lack the time to track down the cause.
7fd7e36b08 Change pyexpat test suite to exercise the .returns_unicode attribute, parsing the sample data once with 8-bit strings and once with Unicode.
beba056cd7 Added support for passing Unicode strings to Expat handlers by default. This version still includes #ifdef hackery to compile with 1.5.2.
f57d7b9e30 Dcoumentation for ascii.py.  I've changed two references from ascii to curses.ascii.
2b9d0bcf83 Added two modules for ASCII characters and a simple editing form (ESR)
289d9d4227 Add wrapper for initscr() to copy the ACS_ and LINES,COLS bindings
99a5621f3f now that imputil is in the main Python repository, clean up the header
5e3c632a90 Fredrik Lundh: get rid of warning in pythonrun.c
5e0fa4065f initial commit of a new HTTP library, supporting HTTP/1.1 and persistent connections.
662d76ee7b Fix typos and errors noticed by Skip Montanaro
c380466762 update output file to reflect new test of exception object str-ness
1bbe32982d Minor wording tweaks. Kludged the extra-wide table that summarizes the manifest template language   (works with LaTeX, but is an *evil* kludge and could well break LaTeX2HTML   or similar...).
992c8f9dab Define the 'executables' class attribute so the CCompiler constructor doesn't blow up.  We don't currently use the 'set_executables()' bureaucracy, although it would be nice to do so for consistency with UnixCCompiler.
e401e15d18 Removed some debugging code that slipped into the last checkin. Ensure that 'extra_args' (whether compile or link args) is never None.
f46a688e84 Fixed the "pre-link hook" so it actually works, mainly by renaming it to 'msvc_prelink_hack()', adding the parameters that it actually needs, and only calling it for MSVC compiler objects.  Generally gave up on the idea of a general "hook" mechanism: deleted the empty 'precompile_hook()'.
68ff615c79 Added PreprocessError and UnknownFileError (both used by CCompiler).
eab969d700 Call 'customize_compiler()' after getting CCompiler object.
5ca84b83c7 Fixed a few silly bugs in my SWIG support code.  (Hey, I said it was   experimental and untested.) Call 'customize_compiler()' after getting CCompiler object.
bb7baa793d Added the 'customize_compiler()' function, which plugs in the essential information about building Python extensions that we discovered in Python's makefile.  Currently only needed on Unix, so does nothing on other systems.
e5c62bf6e8 Introduced some bureaucracy for setting and tracking the executables that a particular compiler system depends on.  This consists of the 'set_executables()' and 'set_executable()' methods, and a few lines in the constructor that expect implementation classes to provide an 'executables' attribute, which we use to initialize several instance attributes.  The default implementation is somewhat biased in favour of a Unix/DOS "command-line" view of the world, but it shouldn't be too hard to override this for operating systems with a more sophisticated way of representing programs-to-execute.
73076ff754 Got rid of direct dependence on the sysconfig module.  Mainly, this meant playing along with the new "dictionary of executables" scheme added to CCompiler by adding the 'executables' class attribute, and changing all the compile/link/etc. methods to use the new attributes (which encapsulate both the program to run and its standard arguments, so it was a *little* bit more than just changing some names).
6a2a3dbec5 Added 'split_quoted()' function to deal with strings that are quoted in Unix shell-like syntax (eg. in Python's Makefile, for one thing -- now that I have this function, I'll probably allow quoted strings in config files too.
c3a43b4f9b Docstring reformatting/tweaking binge. Fixed a few comments.
c3f364462f Print a warning if we install a data file right in install_dir. Tweaked help text.
fa2f4b6d8e Changed the default installation directory for data files (used by the "install_data" command to the installation base, which is usually just sys.prefix.  (Any setup scripts out there that specify data files will have to set the installation directory, relative to the base, explicitly.)
9aa668b03a Changed 'object_filenames()' to raise exception instead of silently carrying on if it sees a filename with unknown extension.
370248d705 Some clarifications to the 'A simple example' section.
19c67f83ad Fixed a grab-bag of typos spotted by Detlef Lannert.
3459381e2a Changed so all the help-generating functions are defined, at module-level, in the module of the command classes that have command-specific help options.  This lets us keep the principle of lazily importing the ccompiler module, and also gets away from defining non-methods at class level.
55fced3df9 More stylistic tweaks to the generic '--help-xxx' code.
2ff7887270 Stylistic/formatting changes to Rene Liebscher's '--help-xxx' patch.
ffcaf2dd72 Experimental, completely untested SWIG support.
cb18557de2 Revised docstring so 'sources' isn't necessarily all C/C++ files (to accomodate SWIG interface files, resource files, etc.).
99eadf4de9 (py-execute-region): Make sure the new temporary buffer is current for the insertion of the text.
d08b4c4524 part 2 of Neil Schemenauer's GC patches:
d22162bac7 traverse functions should return 0 on success
99a8f90874 raise TypeError when PyObject_Get/SetAttr called with non-string name
8caad49c30 Round 1 of Neil Schemenauer's GC patches:
a392dcb211 Bastian Kleineidam: 'copy_file()' now returns the output filename, rather than a boolean indicating whether it did the copy.
f419572708 Release the global interpreter lock around the most important functions that might block or pause
8d929aee49 All relevant toolbox modules have now been carbonized.
349a3d3a9a Marc-Andre Lemburg <mal@lemburg.com>: Made codecs.open() default to 'rb' as file mode.
d468bd3463 Sjoerd Mullender: These two fixes were approved by me.
7c6395a6a3 Implementation of the CCompiler class for Cygwin and Mingw32, ie. the two major ports of GCC to Windows.  Contributed by Rene Liebscher, and quite untested by me.  Apparently requires tweaking Python's installed config.h and adding a libpython.a to build extensions.
b2db0eb695 Fix inspired by Rene Liebscher: if setup script is newer than the manifest, regenerate the manifest.
f6451c46d7 Delete spurious comment.
afc224beec Build the 'outfiles' list so 'get_outputs()' has something to return. (Bug spotted and originally fixed by Rene Liebscher; fix redone by me.)
e2383a6c77 Rene Liebscher: when fixing up directories with an alternate root, include 'install_headers'.
59ac7091a7 Fleshed out and added a bunch of useful stuff, notably 'check_func()', 'try_cpp()', 'search_cpp()', and 'check_header()'.  This is enough that the base config is actually useful for implementing a real config command, specifically one for mxDateTime.
71257c73f8 Oops, import 'grok_environment_error()'.
3ff3b039ac Added 'preprocess()' method to CCompiler interface, and implemented it in UnixCCompiler.  Still needs to be implemented in MSVCCompiler (and whatever other compiler classes are lurking out there, waiting to be checked in).
a4ca07cc8c Minor grammatical fix
d24ff44f06 Document .timeout() method and .typeahead() function
97311bbb0e Added .timeout() method and .typeahead() function
8eff33b51f Added an optional debug handler that traps and prints all unknown appleevents.
d13c385462 Replaced OpenResFile calls with FSpOpenResFile calls (which are carbon-compatible).
3c0d013db4 verify that Python raises SyntaxError for long and deeply-nested expressions
94988067b9 Add new parser error code, E_OVERFLOW.  This error is returned when the number of children of a node exceeds the max possible value for the short that is used to count them.  The Python runtime converts this parser error into the SyntaxError "expression too long."
56c807d318 add minimal test of exception use.  verify that each exception can be raised, caught, and converted to a string.
2d15d9d869 mark SyntaxError__str__ as METH_VARARGS
bdd44a389b Pekka Pessi <Pekka.Pessi@nokia.com>: Patch to add support for sip: (Session Initiation Protocol, RFC2543) URLs.
396f6e0d6a Fredrik Lundh <effbot@telia.com>: Simplify find code; this is a performance improvement on at least some platforms.
440d898230 Added a new debug method sys.gettotalrefcount(), which returns the total number of references on all Python objects.  This is only enabled when Py_TRACE_REFS is defined (which includes default debug builds under Windows).
abf17032a4 Made to work under carbon.
fd78de3a74 Under carbon use the GetQDGlobalxxx methods to implement Qd.qd.member access.
ca23d910f8 Made argc/argv processing work again under carbon.
5550de3084 Christopher Fandrich <cfandrich@8cs.com>: Fix memory leak in initializing __debug__.
91c4e2bf12 Patch from Rene Liebscher <R.Liebscher@gmx.de>, slightly modified and commented by Fred Drake, to prevent usage of sufficiently broken GCC versions.
aef1000bff Fixed docstring typo, reported by Skip Montanaro <skip@mojam.com>.
288e97b7fe Patch from Michael Hudson to fix flatten recursive data structures: [mwh21@atrus build]$ ./python >>> import Tkinter >>> l = [] >>> l.append(l) >>> Tkinter._flatten(l) Segmentation fault (core dumped)
49ef6dc1f4 Marc-Andre Lemburg <mal@lemburg.com>: Fixed a bug in PyUnicode_Count() which would have caused a core dump in case of substring coercion failure.
2f4d0e9bb6 Marc-Andre Lemburg <mal@lemburg.com>: Added optimization proposed by Andrew Kuchling to the Unicode matching macro.
e8d52af54b Fix bug when the replacement template is a callable object
ea34a84e54 Patch from Lorenzo M. Catucci: I discovered the [MREMAP_MAYMOVE] symbol is only defined when _GNU_SOURCE is defined; therefore, here is the change: if we are compiling for linux, define _GNU_SOURCE before including mman.h, and all is done.
e475e70128 Patch from /F: this patch adds a fast _flatten function to the _tkinter module, and imports it from Tkinter.py (if available).
74042d6e5d Patch from /F: this patch introduces PySequence_Fast and PySequence_Fast_GET_ITEM, and modifies the list.extend method to accept any kind of sequence.
b75c485f0b 'get_platform()' now just returns 'sys.platform' on all platforms.
22c6934885 Regenerated autoconf files.  There's an extra change to config.h.in beyond the mremap() change I made; did someone modify configure.in previously without recreating these files?
898527b14d Check for existence of mremap()
6fef30e1fa Support resizing the mapping depending on whether HAVE_MREMAP is defined Remove two unused variables
1d15869534 Markup consistency nits.
cf70ea633f Additional tests for seek() method, written by Trent Mick
70d2742fce Patch from Trent Mick: 	The seek() method is broken for any 'whence' value (seek from 	start, current, orend) other than the default. I have a patch 	that fixes that as well as gets mmap'd files working on 	Linux64 and Win64.
9bc5f3339a Removed MS_INVALIDATE flags
0adfb45b9a Make changes and clarifications suggested by Mark Hammond
b081e180ac Pulled the MSVC++-specific hackery out to a new method, 'prelink_hook()', and added (empty) 'precompile_hook()' for symmetry.  One can envision a much more elaborate hook mechanism, but this looks like it'll do for now.
7b9fb92932 Fix the size() method to return the size of the file on Unix, not the size of the mapped area.  This seems to be what the Windows version does. This change requires keeping around the fd of the mapped file.
b8050697b8 Documentation for the mmap module: proofreaders welcomed
bea47e768d Vladimir MARANGOZOV <Vladimir.Marangozov@inrialpes.fr>: This patch fixes an optimisation mystery in _PyUnicodeNew causing segfaults on AIX when the interpreter is compiled with -O.
b248b7f848 Renamed PATH_CREATED to _path_created, on the grounds that it's private and mutable, rather than public and constant.
fcd4f87397 Changed 'remove_tree()' to use the new 'grok_environment_error()' function instead of muddling through IOError and OSError exception objects itself.
cf0e2dde6d Changed to use the new 'grok_environment_error()' function instead of muddling through IOError and OSError exception objects right here.
e905513be0 Added 'grok_environment_error()' function to deal with the various forms that IOError and OSError can take (taken from core.py).
039accfb2c Bastian Kleineidam: added 'remove_tree()' function.  Needed so that 'remove_tree()' can cooperate with 'mkpath()' in the maintenance of the PATH_CREATED cache: specifically, if a directory is created with 'mkpath()', later removed with 'remove_tree()', and 'mkpath()' is again requested to create it, then it would erroneously think the directory already existed, because it was in the PATH_CREATED cache.  The patch (slightly tweaked by me) fixes that.
c566232c4d Fixed install directory for header files on Unix.
992fe5a83e Updates from Marc-Andre Lemburg <mal@leburg.com> for the Unicode support.
1c2d06acaf Added reference count information for PySequence_List().
a8455abcf8 Documented PySequence_List() and PySequence_Tuple().
29dc381ce0 Michael Hudson <mwh21@cam.ac.uk>: The error message refers to "append", yet the operation in question is "concat".
c3fd45fe80 do_cmd_textasciitilde():  New function.
e57a11441e Fix markup error that hid a tilde character; reported long ago by Carl Feynman <carlf@abinitio.com>.
9e759dfc31 Michael Hudson <mwh21@cam.ac.uk>: This patch corrects a little glitch and two outright errors.
56780257c6 Thomas Wouters <thomas@xs4all.net>: The following patch adds "sq_contains" support to rangeobject, and enables the already-written support for sq_contains in listobject and tupleobject.
60bc809d9a Marc-Andre Lemburg <mal@lemburg.com>: Added code so that .isXXX() testing returns 0 for emtpy strings.
bddf502a1f Marc-Andre Lemburg <mal@lemburg.com>: Removed a test which can fail when the default locale setting uses a Latin-1 encoding. The test case is not applicable anymore.
868f0c7155 Oops, default type and creator were reversed.
fb79ffae4d Hook in the documentation for the unicodedata module.
28b294459d Marc-Andre Lemburg <mal@lemburg.com>: Documentation for the unicodedata module (massaged by Fred for minor consistency issues).
414ca6666c James C. Ahlstron <jim@interet.com>: Thanks to Hubert Hoegl <hubert.hoegl@dlr.de> for finding this bug.
f6b5374ecf Also add a one-line description of the "optional" directive.
8462573826 Marc-Andre Lemburg <mal@lemburg.com>: Fixed some tests to not cause the script to fail, but rather output a warning (which then is caught by regrtest.py as wrong output). This is needed to make test_unicode.py run through on JPython. Thanks to Finn Bock.
7ebb92ea66 Marc-Andre Lemburg <mal@lemburg.com>: Removed import of string module -- use string methods directly. Thanks to Finn Bock.
6b14eebae6 Documentation for the pyexpat module.
5185a084b7 Applied simplifications suggested by Greg Stein.
b7f198e01a Renamed the C extension for ncurses support from 'curses' to '_curses'. (The SourceForge admins have been asked to rename the ,v file.)
e53903c675 Install the contents of the Lib/curses directory
d0939fa592 Add contents of curses package
c0328f014b Mention setting the default encoding Add IDLE section from MZ
07ceb67d9c Marc-Andre Lemburg <mal@lemburg.com>: Fixed a typo and removed a debug printf(). Thanks to Finn Bock for finding these.
1f2d4640b8 Added test for linnuxaudiodev module; directly adapted from sunaudiodev test.  Someone with more Linux audio knowledge should at least take a brief look at it.
a5bbb0089a List more deleted modules. Add request for feedback.
6c3cd8dd6a Filled in the sections on new and deleted modules. Bumped version number.
7ad4792307 Comment out an apparent debug print
a251ea0680 the PyDict_SetItem does not borrow a reference, so we need to decref reported by Mark Hammon
815d5b934b Patch from /F: this patch brings the CVS version of SRE in sync with the latest public snapshot.""
cb95a1470a Patch from Michael Hudson: improve unclear error message
b422f95db0 Cleanup a few docstrings.
7f6270d97e Minor fixes, additions to notes
d4ab4a5905 Marc-Andre Lemburg <mal@lemburg.com>: Fixed %c formatting to check for one character arguments. Thanks to Finn Bock for finding this bug.
bfa36f5407 Marc-Andre Lemburg <mal@lemburg.com>: Updated to version 1.5. Includes typo fixes by Andrew Kuchling and a new section on the default encoding.
59a044b7d2 Marc-Andre Lemburg <mal@lemburg.com>: Updated to the fix in %c formatting: it now always checks for a one character argument.
2348114ba8 Marc-Andre Lemburg <mal@lemburg.com>: Added emulations of the C APIs in _locale to be used when the _locale module is not enabled. They return the correct values assuming the 'C' locale.
d2412a35b1 Harry Henry Gebel: fix '_format_changelog()' so it doesn't bomb if passed None.
14c8d05a7a Include setup.cfg in the list of default files to distribute.
ce15c6ce8d Moved the code that prunes the file list after reading the manifest   template into a new method 'prune_file_list()', called from   'get_file_list()' rather than 'read_manifest()' -- this keeps   'read_manifest()' more general. Deleted the redundant call to 'exclude_pattern()' in 'make_distribution()'   -- this had the same intention as 'prune_file_list()', but was incomplete   (only pruned the release tree, not the build tree) and in the wrong   place (the prune wouldn't be reflected in the manifest file).
4a7319ca28 Renamed 'find_defaults()' to 'add_defaults()'. Deleted old, commented-out 'exclude_pattern()' method.
c3c8c6edbb Docstring addition binge.
373dbfa723 Fixed so we print more than just the first line of help for options with a short form and text that wraps onto multiple lines.
e0c8c2fd16 Docstring reformatting binge.
f1fe10376e Cosmetic tweaks to imports, the 'show_formats()' function, and the 'help_options' list; also added an editorial comment.
f8b9e20d94 Made all debug output go through the 'debug_print()' method instead of directly printing to stdout.  This was a bit more work than it sounds like it should have been:   * turned 'select_pattern()' and 'exclude_pattern()' from functions into     methods, so they can refer to 'self' to access the method   * commented out the *other* 'exclude_pattern()' method, which appears     to be vestigial code that was never cleaned up when the     'exclude_pattern()' function was created   * changed the one use of the old 'exclude_pattern()' method to use the     new 'exclude_pattern()' (same behaviour, slightly different args)   * some code and docstring reformatting   * and, of course, changed all the debugging prints to 'debug_print()' calls Added/tweaked some regular ('self.announce()') output for better runtime   feedback.
ebec02a92c Added 'debug_print()' method (driven by DEBUG global from distutils.core).
5108db6232 Added _localemodule and exceptions.c
f23a2e9418 Added _localemodule.
dafe4712dd Nav removed (it has moved to the core toolbox modules).
ee68fc3c7f Nav and AE have been moved to core toolbox modules: fixup dependent modules, export symbol list, etc.
ebececc9d8 Moved AE module to the core toolbox set: it is needed by Nav and it isn't all _that_ huge. Modified for new builtin exceptions.c.
d1fb71121b Moved AE module to the core toolbox set: it is needed by Nav and it isn't all _that_ huge.
1c0fceeaa7 Minor bugfix: one uthread-dependent cleanup had "if not uthread" in stead of "if uthread".
fd771a6a85 Upped default memory size to 16MB
99964b86b2 Marc-Andre Lemburg <mal@lemburg.com>: Changed the API names for setting the default encoding. These are now in line with the other hooks API names (no underscores).
90e8147118 Marc-Andre Lemburg <mal@lemburg.com>: Change the default encoding to 'ascii' (it was previously defined as UTF-8).
753131c90a Marc-Andre Lemburg <mal@lemburg.com>: The locale module is turned on per default.
4fd73f0465 Marc-Andre Lemburg <mal@lemburg.com>: Added some more codec aliases. Some of them are needed by the new locale.py encoding support.
990bbe90d5 Marc-Andre Lemburg <mal@lemburg.com>: Added support to set the default encoding of strings at startup time to the values defined by the C locale.
5431bc3602 Marc-Andre Lemburg <mal@lemburg.com>: Added a new locale name aliasing engine which also supports locale encodings, a feature which is used by the new default encoding support in site.py.
54480d300a New codec which always raises an exception when used. This codec can be used to effectively switch off string coercion to Unicode.
d1a65ff40b Added preliminary documentation for the winreg module, by Mark Hammond <markh@activestate.com>.
9d17a7ad6d Patch from Rene Liebscher: this adds "--help-foo" options to list the values that "--foo" can take for various commands: eg. what formats for "sdist" and "bdist", what compilers for "build_ext" and "build_clib".
1169687692 Always look for the system config file in the Distutils module directory, and call it "distutils.cfg" instead of "pydistutils.cfg" (personal config files are still ".pydistutils.cfg" or "pydistutils.cfg", though).
acf3f6a700 Patch from Rene Liebscher: Look for personal config file in /home/greg on Windows, too: users will have to set /home/greg to use this, so it's not something that many people will use.  But if python-dev comes up with the "right way" to divine a home directory on Windows, we can use that to set /home/greg and poof! -- personal Distutils config files on Windows.
3f3ce04b1b correct case in python16.dsp to allow build with VS6
54c8dc2144 Patch from Trent Mick: 	Fix a small bug in posixmodule.c where a char* is being 	dereferenced where it should not be.
28a5f44cca First crack at the Distutils "config" command.  Unlike other commands, this one doesn't *do* anything by default; it's just there as a conduit for data (eg. include dirs, libraries) from the user to the "build" commands. However, it provides a couple of Autoconf-ish methods ('try_compile()', 'try_link()', 'try_run()') that derived, per-distribution "config" commands can use to poke around the target system and see what's available.
43955c9a02 Fix 'reinitialize_command()' so it resets the 'have_run' flag for the command being reinitialized to false.
e18dd8dd8f Support for multiple distribution formats in one run.
ec21cc60db 'get_outputs()' now returns an empty list instead of None.
dab0554d5d Added lib-tk to the standard sys.path initializer.
490121355e Removed assorted old ifdefs.
80dc66e428 Removed support for very old CodeWarrior runtimes.
fb1aafd06c Removed SYMANTEC_CFM68K support.
d4d24cd96b Removed USE_STDWIN support.
021da55579 Removed THINK_C support.
031ac7112f Define USE_GUSI2, not USE_GUSI1. PythonStandalone still doesn't compile due to tk issues, though, but it isn't important right now.
d9f6e92fbf Removed THINK_C support. Added a CARBON indicator to the version string.
7ce6d074aa Fixed syntax error. Half-fixed RPM 2 compatibility:added 'rpm_base' option, which must be set   (to eg. /usr/src/redhat on a stock Red Hat system) if rpm2_mode is on.   Still not quite working, though.
62d5a57b05 Use 'ensure_string_list()' for 'formats' option, so that it can be spelled sensibly in a config file.
a68c93ac89 Patch from Harry Henry Gebel: Fills in question marks in help
31413a7ba2 Added the 'ensure_*' methods from bdist_rpm; refactored 'ensure_filename()' and added 'ensure_dirname()'.
4227dc1b15 Removed the 'ensure_*' methods -- they're just too handy too keep in one command class, so they're now in the Command base class.
6f980b5936 Renamed 'modules' option to 'py_modules', for consistency with Distribution (and in order to generate a more sensible error message cleanly).
841b9fbebb Use PyArg_ParseTuple and specify the method names, following a suggestion    from Greg Stein
961fe17b4c Add missing PyArg_NoArgs() calls to methods that didn't take arguments    (Pointed out by Moshe Zadka)
b853ea0541 Latex formatting fixes
fa33a4e494 Patches from Moshe, w/ AMK's revisions Wrote Unicode section
c4c06af575 Patch from Harry Henry Gebel: fixes a bit of code that slipped by my overhaul last night.
3985151642 Catch DistutilSetupError from the Distribution constructor.
82d71cacb0 Added a bunch of new globals in '_init_mac()' -- these will be needed to   support the forthcoming Cygwin/Mingw32 GCC-on-Windows patch. Standardized CVS id line.
60f157d5e3 First version of the project that produces a working Carbon binary. The binary has only been tested on MacOS9, so far. This project needs CW IDE 4.1b4 or later.
2b44ba5203 Revived various of the compatability routines and made them Carbon-compliant. This is needed because the initial carbon-python does not use GUSI.
a04b24bf8d Removed hfsrunning() macro. This means MacPython won't run on MacOS 5 (oops, System 5) or earlier anymore:-)
e79dc76f53 Made the core toolbox modules carbon-compatible using the new greylist feature of bgen: non-carbon methods are still included in non-carbon MacPython. The issue of backward compatibility of Python code is still open. Macmodule and macosmodule have also been carbonified. Some functionality is still missing there.
33d1ad28cb Replaced GetFInfo and SetFInfo calls with FspGetFInfo and FspSetFInfo calls, which are carbon-compatible.
ee6eeb1876 Removed (within an #ifdef) Carbon-incompatabilities: - Don't call all the toolbox init routines. - No balloon help, so removed help code from the initial dialog.
bb6d83a8c4 Removed (within an #ifdef) Carbon-incompatabilities: - Use TickCount() in stead of LMGetTicks() - Don't use xxxGetFile event filter - Don't call SystemTask or HandleSysWindowEvent (is this also automatically handled under os9??) - Don't scan event queue for cmd-. (to be fixed at some point).
14cd750004 Fixed callback function arguments to be carbon-compatible. (Temporarily?) removed call to ProcessHighLevelEvent until we find out how to do this (Carbon only).
d564d5f2c6 Config file for PythonStandCarbon (small non-shared MacPython for Carbon).
8334dc1e6b Made compatible with MSL Carbon libraries.
8f14b7cd94 make sure the case is correct (damned case-sensitive languages :-)
0f216fdda9 Bumped version number to 0.9pre (there will be a couple of code snapshots before the real release, but I want to make it clear that a major new release is on the way).
efbd071016 Only print debugging output if DEBUG true.
2bd3f4250d Only print debugging output if DEBUG true (and deleted some of the more extraneous debug prints).
f7a5507485 Use Distribution method 'dump_option_dicts()' for debugging output, and only do so if DEBUG is true.
673925842e Ditched the obsolete '_get_package_data()' method and its '_check_*()' helpers.
1259392b38 Fairly massive overhaul to support getting RPM inputs (extra meta-data, prep/build/etc. scripts, doc files, dependency info) from a config file rather than the dedicated "package_info" file.  (The idea is that developers will provide RPM-specific info in the "[bdist_rpm]" section of setup.cfg, but of course it could also be supplied in the other config files, on the command line, or in the setup script -- or any mix of the above.)
8ff5a3fd92 Reformatted and updated many docstrings.
4c7fdfc35b Trent Mick <trentm@ActiveState.com>: This patch correct bounds checking in PyLong_FromLongLong. Currently, it does not check properly for negative values when checking to see if the incoming value fits in a long or unsigned long. This results in possible silent truncation of the value for very large negative values.
8eded195aa Trent Mick <trentm@activestate.com>: Fix test of the "math" module so it does not break on platforms that do not offer rint(); just skip that portion of the test in that case.
b1aa19515f Fredrik Lundh: here's the 96.6% version of SRE
0292d78e91 add new Python/exceptions.c to python16 project (courtesy Trent Mick)
914a2edb24 Improve TypeError exception message for list catenation.
b6a9ada757 Michael Hudson <mwh21@cam.ac.uk>: Removed PyErr_BadArgument() calls and replaced them with more useful error messages.
94c3452ade Fix bug reported by atkins@gweep.net; re.compile(r"[\100-\410]")    dumps core.  Solution: fix check_escape() to match its comment and    use only the low 8 bits of the octal number.
137507ea03 Michael Hudson <mwh21@cam.ac.uk>: Removed PyErr_BadArgument() calls and replaced them with more useful error messages.
b5fc749c8b patch from Charles Waldman-- define ThreadError (== thread.error); docs should be updated, too
d87eb73f32 Remember the list of archive files created in 'make_distribution()'. Added 'get_archive_files()' so outsiders can get their hands on that list.
282c7a0230 Oops, 'reinitialize_command()' forgot to return the command object if didn't need to be reinitialized -- fixed.
308acf0bfa Added 'reinitialize_command()' method -- delegated to Distribution instance. Ensure 'make_archive()' method returns archive filename.
879096137d Ensure that 'make_archive()' returns the name of the new archive file.
01a4694dce More tweaking to make this command act like other Distutils commands:   * added "--bdist-base" option to parameterize where we build     the RPM (comes from "bdist" by default: "build/bdist.<plat>")   * simplified/cleaned up some code in 'run()' in the process of     removing (most) hard-coded directory names   * if "--spec-only", drop spec file in "dist" rather than "redhat"     (directory name still hard-coded, though)   * use 'reinitialize_command()' to fetch the "sdist" object to     tweak before running "sdist" command   * use 'self.copy_file()' method rather than 'copy_file()' function   * cosmetic tweaks to comments, error messages
69413da749 Regularize options a bit:   * help strings start with lowercase   * added affirmative version of '--no-clean' and '--no-rpm-opt-flags',     which are the default (thus the attributes that correspond to     the options are now 'clean' and 'use_rpm_opt_flags')
46bd9a6191 Do not expose __builtins__ name as a completion; this is an implementation detail that confuses too many people.  Based on discussion in python-dev.
5b8311e3c1 Filled out the "Core Changes" section.
d8dfb4c4b8 Renamed 'native_path()' to 'convert_path()'. Also changed it so it doesn't barf if the path is already in native format   (ie. contains os.sep).
65bc20c23e Normalize paths before writing them to a zipfile.
4b46ef9a4f Fixed 'change_root() to work at all on Windows, and to work correctly on Unix.
a76bbd4566 Import the new Extension class, so setup scripts can "from distutils.core import" it.
5322f008c5 Overhauled to expect 'self.extensions' (taken from 'ext_modules' in the setup script) to be a list of Extension instances, rather than a list of of (ext_name, build_info) tuples.  This is mostly a simplification, but 'check_extension_list()' got a lot more complicated because of the need to convert the old-style tuples to Extension instances.
3ca54bc846 Provides the Extension class, a nicer way to describe C/C++ extensions than the old (ext_name, build_info) tuple.
6c16019136 Fixed typo noted by Guido Kollerie <gkoller@cs.vu.nl> in example code.
7f91cf9a68 Add 'r' to docstrings to avoid expanded backslash escapes.  (Ka-Ping Yee)
3e7b133c95 Added concrete example of when separate build and install might be useful (suggested by Moshe Zadka).
98150114e0 Cosmetic tweak.
66ac93e6f7 Catch CCompiler exceptions in 'setup()'.
3add77f611 Import exceptions from errors.py, not ccompiler.py.
39804cbc60 Removed exceptions -- now in errors.py to avoid expensive import of ccompiler.
c1cb0493f8 Moved the CCompiler exceptions here, to avoid having to import ccompiler.py   just to get a little exception class. No more string-based exceptions.
d151711e66 Changed to catch compile/link failures and raise CompileError, LibError, or LinkError (exception classes defined in ccompiler.py).
adda156a13 Added 'dump_options()' for debugging output.
c32d9a6952 Factored '_set_command_options()' out of 'get_command_obj()'. Added 'reinitialize_command()' -- lets us "push" option values in   a controlled, safe way; this is a small change to the code, but   a big change to the Distutils philosophy of passing option values   around.  The preferred mode is still definitely to "pull" options   from another command (eg. "install" fetches the base build directory   from "build"), but it is now feasible to "push" options onto another   command, when you know what's best for it.  One possible application   will be a "config" command, which pokes around the system and pushes   values (eg. include and library directories) onto the "build" command. Added 'dump_option_dicts()' method (for debugging output).
2129032bc6 Changed order so 'clean' is right after the 'build' commands.
fbb04c448c Only print debugging output if DEBUG (imported from distutils.core) is true.
0eeebfda98 Moved warnings out of 'finalize_options()' into 'run()'. Added a warning for 'bdist_base' directory.
9581144329 Typo fix in comment.
4fb29e55f8 Some far-reaching naming changes:   * Command method 'find_peer()' -> 'get_finalized_command()'   * Command method 'run_peer()' -> 'run_command()' Also deleted the 'get_command_option()' method from Command, and   fixed the one place where it was used (in "bdist_dumb").
25bfd0e8d0 Article about 1.6 new features
e5b267ccb6 Patch from Andrew Kuchling: prune out the build and source distribution directories after all is said and done, so we don't accidentally include those files in the source distribution.
51def7d667 Support for the "install_headers" command: distribution option 'headers' and method 'has_headers()'.
2d238c56a6 'mkpath()' now detects non-string 'name' arguments -- this is a fairly common bug when adding new code, so I thought I'd make it blow up earlier than deep in posix.py.
46380906d1 Tweaked description, help text.
cae5a1f444 Support for the "install_headers" command:   * 'headers' entry added to all the install schemes   * '--install-headers' option added   * 'install_headers' added to 'sub_commands'   * added 'dist_name' to configuration variables (along with a few     others that seem handy: 'dist_version', 'dist_fullname', and     'py_version'   * in 'finalize_unix()', make sure 'install_headers' defined if     user specified 'install_base' and/or 'install_platbase'   * added 'has_headers()'   * a few other small changes
aa0e77115f Added 'install_headers' command to install C/C++ header files.
847a9968e9 Patch from M.-A. Lemburg: Python on UNIX now trusts PYTHONHOME unconditionally
b80a777859 Added documentation for gettempprefix(). Deprecated direct access to template. Added note about past need to modify template so that legacy code has a better chance of being understood, noting that the requirement to reset template after os.fork() disappeared in 1.5.2.
262e83cb1a This module is obsolete now that the standard exceptions are built-in.
0233075fce Added documentation for TemporaryFile() and the siffix parameter to mktemp(). Removed obsolete comments about this module not creating or removing actual files. Removed obsolete comment about users needing to set template to None after calling os.fork().
675ac285ae The standard exception classes.  Moved here from ../Modules/_exceptions.c
f17861badc Added exceptions.o to the list of object to build in this subdir.
c8019add6c _exceptions.c is moved to ../Python/exceptions.c
b1387aa7af The _exceptions module is moved to the Python subdirectory.
57c9a663cb When building on Solaris and the compiler is GCC, use '$(CC) -G' to create shared extensions rather than 'ld -G'.  This ensures that shared extensions link against libgcc.a, in case there are any functions in the GCC runtime not already in the Python core.
99d707af47 Piers Lauder <piers@cs.su.oz.au>: I've added an extra comment about quoting arguments to IMAP4 commands. Also changed the command descriptions to show optional extra commands where appropriate.
6153fa19ce Guido's rewording of my definition of "root package", with an addition by me.
521340034e Rene Liebscher: check if the extension file (.so or .pyd) is up-to-date with respect to the source files; that way, we don't needlessly rebuild just because object files go away.
59d382e482 A grab-bag of wording tweakage.
0e48cfd2c5 Factored out code for extracting-or-creating one of the option   dictionaries in 'self.command_options' to 'get_option_dict()'. Simplified code in 'parse_config_files()' and 'parse_command_line()'   accordingly. Fixed code in constructor that processes the 'options' dictionary   from the setup script so it actually works: uses the new   'self.command_options' dictionary rather than creating command   objects and calling 'set_option()' on them.
37af1c3807 Added the DEBUG global (set from the DISTUTILS_DEBUG environment variable). Changed the exception-handling code in 'setup()' to re-raise exceptions   if DEBUG is true.
8bbba17d38 Fixed a couple of long-hidden bugs (amazing what you find when you attempt to verify the bold assertions in the documentation):   * entries for the "root package" in 'package_dir' didn't work --     fixed by improving the fall-through code in 'get_package_dir()'   * __init__.py files weren't installed when modules-in-packages     were listed individually (ie. in 'py_modules' in the setup script);     fixed by making 'check_package()' return the name of the __init__     file if it exists, and making 'find_modules()' add an entry to     the module list for __init__ if applicable
8415edb433 Built-in class-based standard exceptions.  Written by Fredrik Lundh. Modified, proofread, and integrated for Python 1.6 by Barry Warsaw.
992cb8ab53 Added a test to catch the base class.
9357854187 For backwards compatibility, simply import everything from the _exceptions module, including __doc__.
78e6c671db All the exception building related stuff has been moved out of this module and into _exceptions.c.  This includes all the PyExc_* globals, the bltin_exc table, init_class_exc(), fini_instances(), finierrors().
cfa2dba720 Added the _exceptions module, implementing the built-in class-based standard exceptions.
f242aa0d1e Py_Initialize(): Now that standard exceptions are builtin, we don't need two phase init or fini of the builtin module.  Change the call of _PyBuiltin_Init_1() to _PyBuiltin_Init().  Add a call to init_exceptions().
c094ac856f Now that standard exceptions are builtin, we don't need two phase init or fini of the builtin module.
fe55e86a0a Take the basename of the script before concatenating it with the build dir.
fd267d998d Piers Lauder <piers@cs.su.oz.au>: This patch adds a comment about quoting to the doc string, and also checks that the 'flags' argument to the STORE command is appropriately enclosed inside parentheses to avoid quoting.
1226588e57 bltin_exc: Removed the leaf_exc flag in the structure, which was only used to build the fallback string-based exception.
101de37907 Fix to use 'change_root()' rather than directly mangling path.
80fa55e71f Improvements to Bastian's build_scripts command:   * 'first_line_re' loosened up   * command description improved   * replaced '_copy_files()' and '_adjust_files()' with one method     that does everything, 'copy_scripts()' -- this should be more     efficient than Bastian's version, should behave better in     dry-run mode, and does timestamp dependency-checking
029e302786 Added comment to remind us of the (temporary?) obsolescense of the 'install_misc' class.
e3d17526b2 Use Distribution's 'has_scripts()' method instead of directly accessing its 'scripts' attribute.
a4efe65b43 Bastian Kleineidam: the "build_scripts" command.
8d5881a2ba Bastian Kleineidam: the "build_scripts" command and changes necessary to support it.
fcd974efbb Normalized all the end-of-class lines.
51060be2f8 Remove unused "import curses".
c580dae6da Fix a problem reported by Oleg Broytmann, who complains that very often, ftp URLs hang in the final close.  Further analysis suggests that this is because the close hook in addclosehook() calls the hook before acually closing the connection.  The hook, in this case, waits for the '226 Transfer complete' status from the server on the command socket.  However, more and more ftp servers only send this status when the data socket has actually been closed -- causing a deadlock.
a570c05997 Catch failure to open installed Makefile, and report it as a DistutilsPlatformError: "invalid Python installation".  (This will happen on Red Hat-ish systems where the python-devel package is not installed.)
f1dc5fa2c8 Updated docs to list all the new methods and functions.  The docs are now complete, but probably still not very helpful or friendly.
03e644b851 Changes by AMK: Use HAVE_NCURSES_H to include correct header file Lots of typo fixes (a bit too much cut-and-paste in this module) Aliases removed: attr_on, attr_off, attr_set Lowercased the names COLOR_PAIR and PAIR_NUMBER #ifdef's for compiling on Solaris added (need to understand SYSV curses     versions better and generalize this) Bumped version number bumped to 1.6
22b88ce6bf Oliver Andrich's ncurses-specific curses module, version 1.5b1
caee2fe35d (py-execute-region): Based on suggestions by Francois Pinard and Skip Montanaro, handle execution of indented regions by inserting an "if 1:" in front of the block.  This better preserves things like triple quoted strings and commented regions.  This patch resolves PR#264.
40313cfe6e Fix 'get_command_obj()' so it checks if a command object has an attribute before setting it -- this will catch bad options (eg. typos) in config files.
77751c0b49 Added some debuging output (actually moved here from dist.py) -- dump the Distribution's 'command_options' dict after parsing config files, and then after parsing the command line.
981f7368f6 Don't take advantage of OptionDummy's new "auto-initialization" feature after all -- turns out it doesn't buy us much after all...
474607777d Fixed so options from config files and command lines actually work:   * 'get_command_obj()' now sets command attributes based on     the 'command_options' dictionary   * some typos fixed   * kludged 'parse_config_files()' to re-initialize the ConfigParser     instance after each file, so we know for sure which config     file each option comes form   * added lots of handy debugging output
7cb42cd070 From Greg Ward <gward@python.net>: Typo:  "dictionairy" --> "dictionary" (twice).
d7ad5039cb Fixed command description.
5edcd90f8c Use 'get_command_obj()' instead of 'find_command_obj()'.
3c67b1dd08 OptionDummy now has a constructor that takes a list of options: each string in the option list is an attribute of the OptionDummy that will be initialized to None.
732745bb70 Tweaked usage message.
d5d8a9982b Marching towards full support of config files: thoroughly overhauled the command-line parsing code, splitting it up into several methods (new methods: '_parse_command_opts()', '_show_help()') and making it put options into the 'command_options' dictionary rather than instantiating command objects and putting them there.
32000e8464 Reduce opt level for BeOS - Donn Cave.
1d10f3eac2 Changed list_directory() somewhat.  It is now only called when there is no index.htm[l] file, and when it is called, it also spits out the headers.  When an index.htm[l] file is present, the regular (file access) path is followed.  Also, when the guessed content-type matches text/*, open the file in text mode; otherwise in binary mode.
4355093f94 Tweaked output of 'copy_file()': if copying to a new name, show the whole destination path, otherwise show just the directory.
a4adafd55b Changed the semantics of the 'sub_commands' list: instead of function   objects, it now has method names. Added three methods, 'has_lib()', 'has_scripts()', and 'has_data()'   to determine if we need to run each of the three possible sub-commands. Added 'get_sub_commands()' to take care of finding the methods named   in 'sub_commands', running them, and interpreting the results to   build a list of sub-commands that actually have to be run.
f355d473fa Check if the claimed build directory doesn't exist, and warn that we don't have any Python modules to install (rather than bomb when we try to copy a non-existent directory).
44a61bbb66 Added 'has_scripts()', 'has_data_files()' methods.
36c36fec7c Added missing import.
f7edea749d Lyle Johnson: added stubs for the four miscellaneous methods that must be implemented by subclasses, since they are needed by 'gen_lib_options()'.
5299b6afc5 Added support for the 'export_symbols' parameter to 'link_shared_object()' and 'link_shared_lib()'.  In MSVCCompiler, this is meaningful: it adds /EXPORT: options to the linker command line.  In UnixCCompiler, it is ignored.
974f70d97b Add call to putheader('Host', 'www.python.org') to the example.
95713eb9d6 Fix the test for socklen_t so that it searches through sys/socket.h.
8c5cedee69 New description for math.frexp() -- poor description noted by Francois Pinard.
8a6d4d9cca macfsn should always be included, like exceptions and site.
11b093641a Donn Cave <donn@oz.net>: BeOS (up to 5.0) lacks <netinet/tcp.h>.
d9c01a56a0 Manually added HRHTMLRenderingLibAvailable. Blacklist HRDisposeReference and call it in the dispose routine.
036194ceb4 Slowly becoming functional...
ebd0106c77 Interface to macOS 9 HTMLRenderingLib. Not yet functional.
8711a2e150 Changed default developer name. Added some guiding comments.
2c067ef904 Template for writing Distutils command modules.
86ee81e34b Contribution from Harry Henry Gebel: the 'bdist_rpm' command.
21b9e910a5 In 'install_misc': 'self.outfiles' defaults to the empty list, so we don't have to worry about "or []" in 'get_outputs()'.
6a901dd1bd List data files are listed in the Distribution attribute 'data_files', rather than 'data'.
c59d4e0777 Added the 'bdist_base' option, the base temp directory for all bdist commands.
e30b7a91c7 Added 'get_inputs()' methods, needed by the "install" command's 'get_inputs()'.
ba0506b349 Drastically simplified by taking advantage of the "install" command's new flexibility, specifically the 'root' option.  Now, we just use "install" to do a fake installation into a temporary directory (the 'bdist_dir' option, which derives from the 'bdist_base' option of "bdist"), and then tar/zip up that directory.  This means that dumb built distributions are now relative to the root directory, rather than the prefix or exec-prefix; this is probably a feature, but does make them slightly less flexible.
a04d807127 Rename 'build_bdist' to 'bdist_base', and get it by default from the "bdist" command rather than "build".
c008488981 Typo fix.
0ec8ef1601 Made the '--record' option take an argument, which is the name of the file to write the list of installed files to.
7e855ef6ad Ditch the explicit search for *.py[co] files -- they're now included in the list returned by 'get_outputs()', thanks to changes in the "install_lib" command.
11fb783fa4 Added '_bytecode_filenames()' method, and use it in 'get_outputs()' to ensure that compiled bytecode files are considered part of the output of the "install_lib" command.
f9ebf98725 Moved check for installation to non-sys.path location so it comes last (after writing list of installed files) -- that way, the warning is more visible.
8cb676195b Harry Henry Gebel: add the "--record" option to write the list of installed files to INSTALLED_FILES.
a190268bf6 Added the 'build_bdist' option and code to clean it up -- this is the top-level temporary directory for creating built distributions.  (Won't work yet, since the "build" command doesn't yet have a 'build_bdist' option, and none of the "bdist" commands support it yet.)
b5ebe5d640 Harry Henry Gebel: get extra compiler flags from the CFLAGS environment variable.
52e399c904 Harry Henry Gebel: add support for the 'bdist_rpm' command, specifically the 'no_format_option' class attribute.
d5b53df18c Harry Henry Gebel: add 'bdist_rpm' command.
de5c953a2b From Lyle Johnson: renamed 'implib_dir' to 'implib_file', and correctly ensure that it's 'dirname' exists.
8f7f91fa2a (Temporarily) revived after a long sleep, for building MacPython without GUSI
7bfc2ebb01 Fixed to work again without USE_GUSI and with USE_MSL_MALLOC
12e89e42d8 Fixed to work again without USE_GUSI
48b486b054 Added unicodedata and _codecs modules (which had apparently slipped through until now).
092580baa9 First tiny steps towards Carbon: this project currently builds a PythonStandSmall without GUSI and with standard MSL malloc. Socket and select are the main victims of this.
98b0404a0e Removing thread.h -- it has been obsolete for quite a while.
6fafca4e1d Added comment/docstring/revision header.
17f641c143 Fixed 'select_scheme()' so it doesn't override a directory attribute that's already been set (eg. by a command-line option).
74ead8ff5d Added --skip-build option, so lazy debuggers/testers (mainly me) don't have to wade through all the 'build' output when testing installation.
f8f2b98bdd Caught up with renaming in 'install_misc' base class.
ae988a57d2 Deleted some cruft. Caught up with renaming in 'install_misc' base class. Changed 'run()' to chmod installed scripts under Unix.
ce2b6b838f In 'install_misc' class:   - renamed '_copydata()' to 'copy_files()'   - changed it to record complete output filenames   - dropped '_outputdata()' in favour of much simpler 'get_outputs()'
147e5f3c65 Doc patch from Bastein Kleineidam: start to describe the 'install' command family, including the new 'install_scripts' and 'install_data' commands.
b2e3bb3d6a Patch from Bastien Kleineidam: adds the 'install_data' and 'install_scripts' commands; these two are trivial thanks to the 'install_misc' base class in cmd.py. (Minor tweaks and commentary by me; the code is untested so far.)
bb8c71d563 Call 'parse_config_files()' at the appropriate point. Tweaked error-generating code.
1426354cf6 Preliminary support for config files:   - added 'find_config_files()' and 'parse_config_files()' methods   - added 'command_options' attribute Comment/docstring updates.
e7e35ac1c2 Made 'check_environ()' "public" by stripping the leading underscore; added a global '_environ_checked' so we know if it's already been called.
6cd0c43366 Fix from Lyle Johnson: add the '--compiler' option. Also added creation of 'implib_dir', a temporary directory specific to   MSVC++ -- but I checked in two ways of fixing it (Lyle's and mine),   because I'm not sure which is right.
9668b78b9f Fix from Lyle Johnson: add the '--compiler' option.
c9a5f343bc The addition of rint() (by Peter Schneider-Kamp; I forgot to mention that before) in the previous patch has one problem; rint() is not in the C math library on all platforms (e.g. not for VC++).  Make it conditional on HAVE_RINT.
a28518a6a6 Add check for rint() in math library.
99f235d5e7 Remove stdwin references
6a1b1338de Removing junk
81b4e41cd9 removing more stdwin users
9ab06ee7b2 Added a few new names...
71260b846e Added math.rint() -- round according to current IEEE754 mode
dab6cb8f6d removing more stdwin users
ede8c6eea1 Bill Tutt:
65e69002a2 Oops, better also note that the module initialization function must be extern "C" for C++.
2d54523551 Section "The Module's Method Table and Initialization Function":         Explain that the name of the initialization function must be         init<module>().  Omission noted by Daniel Kozan         <crum@dev-group.com>.
cf3ba65749 At Bob Kahn's request, add CNRI to the copyright string (but not to the notice yet).
6cd948ebd8 Rename the "browser" module to "BrowserControl", since Guido did not like the short, ambiguous name.
8638ace511 EditorWindow.python_docs():         Instead of using Netscape through os.system(), use the new         browser.open() function to load the documentation on the         default browser.  On Windows, this will use the installed         documentation if it exists, instead of hitting python.org.
95a40001e6 Collection of classes and convenience functions to control external Web browsers.
9cfce18c4f GUSI 2.0.5 has a non-functional getsockname() if you use Open Transport. For now the workaround is to only enable MacTCP sockets.
da5cc82d59 Trent Mick:
230cae7474 Trent Mick <trentm@activestate.com>: Limit the 'b' formatter of PyArg_ParseTuple to valid values of an unsigned char, i.e. [0,UCHAR_MAX]. It is expected that this is the common usage of 'b'. An OverflowError is raised if the parsed value is outside this range.
a69ef82643 M.-A. Lemburg <mal@lemburg.com>: Added a useful link to Markus Kuhn's Unicode and UTF-8 FAQ.
774c931c12 M.-A. Lemburg <mal@lemburg.com>: Added another test for string formatting (the one that produced the core dump now fixed in unicodeobject.c).
8b4d01d9f9 M.-A. Lemburg <mal@lemburg.com>: Added APIs to allow setting and querying the system's current string encoding: sys.set_string_encoding() and sys.get_string_encoding().
766de83ab1 M.-A. Lemburg <mal@lemburg.com>: Moved some docs to the include file.
c640b18d96 M.-A. Lemburg <mal@lemburg.com>: Fixed docs according to the new behaviour (the Unicode encoding is no longer fixed to UTF-8).
785d14f965 Minimal change so I can add the rest of MAL's checkin message:
e4315f58d2 M.-A. Lemburg <mal@lemburg.com>: Added support for user settable default encodings. The current implementation uses a per-process global which defines the value of the encoding parameter in case it is set to NULL (meaning: use the default encoding).
aff601804d M.-A. Lemburg <mal@lemburg.com>: Fixed a bug due to a /* inside /*...*/. GCC doesn't like this and bombs.
cb093fe890 M.-A. Lemburg <mal@lemburg.com>: Added PyUnicode_GetDefaultEncoding() and PyUnicode_GetDefaultEncoding() APIs.
3ac3edcf95 M.-A. Lemburg <mal@lemburg.com>: Added documentation and the missing PyCodec_StreamWriter API.
ea2b7157ab New version from Jim Fulton to fix a problem that Eric Raymond ran into.  Jim writes:
625d70a7a6 Fix references to the built-in compile() that don't include the filename parameter.  Noted by Randall Hopper <aa8vb@yahoo.com>.
35784dff6a Skip Montanaro <skip@mojam.com>: The intent is that this diff adds a link to the rfc822 module doc and an index reference to this module under the rfc822 heading.
51313f164c Define \seeurl in the seealso environment.  Two parameters: url, why.
ef4d111b2a do_cmd_seeurl():  New function.
d85f05940e read() method:  clarify that strings are accepted and interpreted         reasonably.
57af072e5c Add a simple directory listing function.
18865de7bd Set HTTPServer class variable allow_reuse_address to 1, so restarting the server after it died doesn't require a wait period.
e3c7a5fbf5 Add class variable allow_reuse_address in TCPServer -- if nonzero, the server_bind() method calls setsockopt(SOL_SOCKET, SO_REUSEADDR, 1).
fd4114e7b8 ConfigParser.read():         Instead of wrapping 'filenames' value in a list if it's a         string, wrap it if it's a string or unicode string.
bd7b8b3310 Minor edit of leading comments: 'the the' --> 'the', quoted 'enable' option name for clarity.
c18a6f466a Replace PyErr_BadArgument() error in PyInt_AsLong() with "an integer is required" (we can't say more because we don't know in which context it is called).
b8872e61c6 Trent Mick:
2a91cd463a Caolan McNamara: properly undo the byte-stuffing of lines starting with a dot.  [GvR change: only unstuff when line starts with two dots.]
9cef99fbf9 USE_GUSI2 should be defined, not USE_GUSI1.
6f8a6d21a1 Selecting the macfsn option didn't work, fixed. Fixed the help strings. Swapped the macfsn and help button numbers.
317b2a6d59 Import this to replace open() by an extended version that uses Internet Config to set creator/type based on the extension. Donated by Oliver Steele.
1500374667 Added comment about the MSVC-specific kludge.
5879a533f1 Deleted some modules that are no longer supported.
aad6761cce The usual...
0b095bc092 Deleted the stdwin-based test() function.
813008e506 Deleting all stdwin library modules.
e298c3018c if the GzipFile constructor fails, the __del__ method is still called.  catch the resulting AttributeError and exit cleanly.
c554505ca1 Trent Mick:
23ef82ffe3 Trent Mick:
c66ae966ed Trent Mick:
c682140de7 Trent Mick:
20c6add7ff Trent Mick:
7c36ada115 Trent Mick:
80dc16baaa Trent Mick:
07bd90e92d Andy Dustman: add GNU pth user-space thread support.
8b41d5363a Updated for the 1.6a2 distribution: added a note about the special Tcl/Tk distribution, about Quicktime Exschange and a few minor updates.
e4d7b5e626 Changed for the new preference resource version.
31e2d7354f The applets need more memory nowadays, it seems (because of navservices, maybe?). Give them 4M, that should be okay for a while.
e3c843e981 Installer for 1.6a2. This is not the optimal location for the VCT file, it should be one level higher, but I can't be bothered fixing that this time around.
6c2d7f8a99 1.6a2 directive files.
0e17c58938 These were never used, removed.
09c79b8f7d Moved and renamed
4779cdfae8 Don't use 'set_option()' or 'get_option()' method -- direct attribute access, or getattr/setattr, is all that's needed.
c4537ac9b6 Got rid of several little-used and not-very-useful methods: 'get_option()', 'get_options()', 'get_command_option()', 'get_command_options()'.
f4f8e64957 Got rid of some little-used and not-very-useful methods: 'get_option()' and 'get_options()'.
ea79ba9341 Tentative MkDistr scripts for 1.6a2.
12a37b7c58 Updated for 1.6a2.
caaa982094 Put the install folders in (vise), not vise, so the include files aren't accidentally picked up by the normal build process.
7972a5a4f2 We should define both USE_GUSI and USE_GUSI2.
18856b80e2 Added the ability to sneak extra flags onto the C compiler command line via an 'extra_compile_args' option in the 'build_info' dictionary.
4b1235cdac Toby Dickenson:
dd8024eb96 Adding projects to the repository again, this time in MacBinary form. If you have added the MMPr filetype as "plain binary" in the MacCVS preferences you should revert this before doing this update.
0c6d037cc5 Removed string-exception preference, added tabcheck and NavService preference, upped version number.
1fdadcd42c Auto-install on import, if NavServices is available. Unless a "no navservices" flag is set Python automagically imports this module so code that uses macfs.xxxGetFile will get NavServices dialogs.
9d61d1bab1 Got rid of PyMem_XDEL.
850d118f74 Got rid of w/MSL in the version string.
68552ddece Automatically dump distribution folders where I want them, next to the vise scripts.
b8f820c5a9 The methods islower(), isupper(), isspace(), isdigit() and istitle() gave bogus results for chars in the range 128-255, because their implementation was using signed characters.  Fixed this by using unsigned character pointers (as opposed to using Py_CHARMASK()).
3a03d4c4c7 Add two scenarios by Vladimir Marangozov that show how to use your own allocator.
4cea605e75 Quick fix by Mark Hammond -- Yakov changed a dprintf call but it was referencing an undefined variable, so we better change it back.
5193114442 Alas, Vladimir's patch was too aggressive, and started causing really weird errors.  (E.g. see thread "weird bug in test_winreg" in python-dev.)
706262bde0 Fast NonRecursiveMutex support by Yakov Markovitch, markovitch@iso.ru, who wrote:
69529ad0cc When the UTF-8 conversion to Unicode fails, return an 8-bit string instead.  This seems more robust than returning an Unicode string with some unconverted charcters in it.
03e29f1ae9 Mark Hammond should get his act into gear (his words :-).  Zero length strings _are_ valid!
301f3f6baa Added accessor for kControlListBoxDoubleClickPart
990f5c6c98 Two changes to improve (I hope) Unicode support.
cc229ea76f Add useless 'return 1' to prtrace() to shut up VC++.
4951782178 Raise ImportError when os.fork does not exist.
42c29aaeb5 Fix warning detected by VC++ on assignment of Py_UNICODE to char.
b18618dab7 Vladimir Marangozov's long-awaited malloc restructuring. For more comments, read the patches@python.org archives. For documentation read the comments in mymalloc.h and objimpl.h.
2808b744e8 Remove all references to stdwin.
31c9a27c12 >>Boing!<<
98e189dab4 Vladimir Marangozov:
a7cfca23e1 A bit of cleanup:
3d69c0e440 Someone found the examples of poor practice on socket addresses! Spotted by Greg Kochanski <gpk@bell-labs.com>.
25871c001f Brian Hooper <brian_takashi@hotmail.com>:
ae08853fb0 Clarify status of connection of a new instance; it *is* connected if you pass server information to the constructor.  Error noted by Pedro Diaz Jimenez <diazjimenez@ctv.es>.
4e751c3d12 Mark Hammond withdraws his fix -- the size includes the trailing 0 so a size of 0 *is* illegal.
a6edfd9737 Mark Hammond:
69652f8abe Moved to the Compat folder (in case anyone still wants to try MPW building), it hasn't been used for years.
6a066805e0 Removed, the core-python getmtime works fine with GUSI2.
19dde103a8 Mark Hammond to the rescue:
be317e615e patches from Mark Hammond
0a4f1ff64e patches from Mark Hammond
7d64b48eaf Disable the ZEROTRAP code -- this turns a 0 byte into a 2 byte and I don't think that's what we want.  There was some brief discussion of this somewhere but I don't recall where.
75a6e67e69 Added an unused Unicode string for testing.
fa5c315afa PyErr_GivenExceptionMatches(): Check for err==NULL and exc==NULL and return 0 (exceptions don't match).  This means that if an ImportError is raised because exceptions.py can't be imported, the interpreter will exit "cleanly" with an error message instead of just core dumping.
48719d3d1f _PyBuiltin_Init_2(): Remove the misleading comment.
47eeb9bdad initerrors(): Remove this function.  String-based standard exceptions are no longer supported (i.e. -X option is removed).
57e11ae847 usage_mid: Remove the description of the -X flag; it's gone now.
3ce096459e Py_UseClassExceptionsFlag is deprecated.  We keep the C variable for C API consistency, but nothing sets it or checks it now.
e326b1efe2 At last, this backward compatibility file bites the dust. If you still haven't updated your extension since the Grand Renaming, you don't deserve Python 1.6. :-)
ee98e4e75d Ignore a bunch of generated files.
c26cc91c0c Added descriptions of \versionadded and \versionchanged.
52e7684af1 do_cmd_versionchanged():         Added support for optional parameter explaining the change         that was made in the specified version.
e06d025e00 Use \versionchanged to indicate when the second parameter to utime() was allowed to be None.
a6e8339e61 \versionchanged:  Added optional parameter for explanation of change.
1b6aecb08c I know this is only a temporary stop-gap measure, but the match() and search() functions didn't even work because _fixflags() isn't idempotent.  I'm adding another stop-gap measure so that you can at least use sre.search() and sre.match() with a zero flags arg.
823eb4ba81 Caolan McNamara:
ce33eb3ee8 Sjoerd Mullender:
26af93cf35 The debug settings for zlib contained a bogus reference to msvcrt in the /nodefaultlib: option.
0e4f657a50 Marc-Andre Lemburg:
96774c1347 Marc-Andre Lemburg:
d67ddbbec1 Eric Raymond:
4b83ecbbaa Eric Raymond:
eb4e11ae44 Eric Raymond:
b16d197d66 Marc-Andre Lemburg:
fdc8bdb67b Marc-Andre Lemburg:
c15a9a1f98 Marc-Andre Lemburg:
22b65a8edc Robin Becker: The following patch seems to fix a module case bug in 1.6a2 caused by wrong return values in routine allcaps83.  [GvR: I also changed the case for end-s>8 to return 0.]
93a8eacde5 Document the new additional signature for utime().  In addition to the previous functionality utime(path, (atime, mtime)), now allowed is utime(path, None) which sets the file's times to the current time.
d58c26fec6 Marc-Andre Lemburg:
3cef856dd9 posix_utime(): Allow the second argument to be None, which invokes the utime(path, NULL) call, setting the atime and mtime of the file to the current time.  The previous signature utime(path, (atime, mtime)) is of course still allowed.
6650320349 Get rid of memory leak caused by assingning sys.exc_info() to a local. Store sys.exc_info()[:2] instead.
1cb6cd0ec5 As Marc-Andre Lemburg points out, the magic number needs to change because we've added Unicode marshalling to the repertoire.
40ee7acb95 \file and \filenq should not be used in section titles; they are not sufficiently robust to survive the creation of bookmarks in the PDF format.
20bab56118 Don't worry about the output dirs for the distutils manuals.
8187cb9664 Added distutils manuals.
e78298a6bd Stripped leading 'sec:' from all section labels -- generates bad filenames, bad link URLs in HTML, etc.
e9792c4563 When building HTML releases, refer to */*.css and */*.html instead of ???/*.css and ???/*.html -- need to pick up the Distutils manuals!
3abb104356 Added the Distutils manuals.
0784c335f3 Added the Distutils manuals: inst and dist.
0862f800d0 Added 'inst' and 'dist' -- the two Distutils manuals.
a2ace6ae25 Charles G Waldman:
3c3507fd4f Documentation patch describing the 'u' and 'u#' format specifiers, from Brian Hooper <brian_takashi@hotmail.com>.
25d34473c3 Brian Hooper <brian_takashi@hotmail.com>: Here's a patch which changes modsupport to add 'u' and 'u#', to support building Unicode objects from a null-terminated Py_UNICODE *, and a Py_UNICODE * with length, respectively.
6664bb87dc Sjoerd Mullender: cmp.py is obsolete...
eca4784781 Mark Hammond: For Windows debug builds, we now only offer to dump remaining object references if the environment variable PYTHONDUMPREFS exists.  The default behaviour caused problems for background or otherwise invisible processes that use the debug build of Python.
7c4f96f442 Deviant1 didn't work as advertised
37b1a26c89 add list_contains and tuplecontains: efficient implementations of tp_contains
035a07e263 add some more contains tests on the builtin types
638ae9d0bb Support for the special macros used by the distutils documentation.
8823accd1f Marc-Andre Lemburg:
ec5b776998 Marc-Andre Lemburg:
3c1bb8043f Marc-Andre Lemburg:
700c6ff1fb Marc-Andre Lemburg:
38c28e379c Added a note to the section on 'exec' about the need for a trailing newline in certain circumstances.  (Apparently, this is a CPython problem.)
6a647bb910 Added the "--root" option as a sort of meta-install-base; if supplied,   it is forcibly prepended onto all installation directories, even if   they are already absolute. Added 'dump_dirs()' to clean up the debug output a bit.
67f75d4bcb Added 'change_root()' to forcibly slap a new root directory onto a pathname, even if it's already absolute.  Currently only implemented for Unix; I'm not entirely sure of the right thing to do for DOS/Windows, and have no clue what to do for Mac OS.
bad9c7675a Almost ready for 1.6a2.
c410e92974 Jack Jansen:
9e392e2412 potentially useless optimization
50422b403c Michael Hudson:
868b50af17 Michael Hudson fixes a case where execv() is called (for a test) with an empty argument list -- another patch he's checking in will make this illegal (the first argument should always be the program name).
ac308d0a6f Added a "See also:" section that exhibits the \seerfc markup.
64b72b6f4f Define \seerfc within the seealso environment.
37cc0c0e9f ref_module_index_helper():  Use "my" instead of "local".
ff2d9b7154 Hacked things up a bit so that configuration variables are expanded in command-line options, and in two phases at that: first, we expand 'install_base' and 'install_platbase', and then the other 'install_*' options.  This lets us do tricky stuff like     install --prefix='/tmp$sys_prefix' ...oooh, neat.
6ce94b72c6 Harry Henry Gebel: import exception classes.
e5a584e865 Harry Henry Gebel: add 'long_description' to DistributionMetadata.
839d532e50 Supply short form for --manifest-only (-o) and --force-manifest (-f) options.
1b8e1d4c0d Harry Henry Gebel: Fix 'sdist.write_manifest()' to respect the value of dry_run.
14f3f59d2b Fix typo in last patch -- the symbol's name is MSG_DONWAIT, not MSG_DONTWAIT.  Reported by Fredrik Lundh.
2c8bcb8794 Patch by Charles G Waldman:
f3335e193b Patch inspired by Just van Rossum: on the Mac, in savefilename(), make the path to save a relative path by prefixing it with os.sep (':'). Also fix an indent inconsistency in the same function.
c009d198db Removed some extraneous and confusing parenthesized expressions. Noted by Skip Montanaro <skip@mojam.com>.
c4428c58bb Charles G Waldman: Doing a PyObject_New then PyMem_DEL causes havoc if you are trying to use Py_TRACE_REFS.
7da3cc5dfb Michael Hudson:
e7ab64e070 validate_arglist():  Re-written to reflect extended call syntax.
c35a20ed1e Mark Hammond: Added dependency of winsound project on python16 project.  [However I didn't add the other changes in his patch, which were just taking away the source code control stuff -- this doesn't hurt and would come back as soon as I make another change. --GvR]
4a9e72266d Added section headers for "Extending the Distutils" section (just a reminder to myself).
a74ce01c98 Bumped version to 0.8.2.
f194878d6a Harry Henry Gebel: Adds bztar format to generate .tar.bz2 tarballs
464023fb64 Lyle Johnson: fixed broken logic in 'native_path()'.
e92e610a9e Christian Tismer -- total rewrite on trashcan code.
db575db0d6 Add definition of socklen_t so that socketmodule.c will compile on Windows.
ff3ab42c04 Jack Jansen: The GUSI 2.0 I/O library used on the Mac uses the socklen_t (unsigned int) for most size parameters.  Apparently this is part of the UNIX 98 standard.
ddc3b63bf6 Jack Jansen: The GUSI 2.0 I/O library (which is used on the Mac) doesn't use the special header file for select anymore.
59903fe2b5 Added tests for socklen_t
b33aa1a51e Jack Jansen: The new version of the GUSI i/o library on the Macintosh has a few slightly different calls from the old one.
095249fc8c Jack Jansen: Posix threads are now supported on the Macintosh too.
0f7bd3ce9f Added site-packages.  (Sorry, forgot who submitted this patch.)
e56b4cf804 Jack Jansen: A few new types needed by new API calls.
1d8fcdacea Oops -- Mark forgot to add "0x" to the /base: argument.
43c5af026f Fix to previous patch: send the request data when it's provided
c1488413e4 Added a provision to stop all threads before exiting from the test: the change to regrtest.py to unload all newly imported modules did something bad to the threads -- and I realized that they would never stop!
9d90a94faf Remove Windows line endings.
2512d6d83a Fix spelling error and remove Windows line endings.
841c2f6b09 Changes by Mark Hammond to ignore more by-products of the build.
00f09b3821 Security patch for Unix by Chris McDonough.
bfbf113827 Don't build the _tkinter project from Build, only the one from Extensions:Imaging, which now drops its resulting .slb into the PlugIns folder.
322e158140 Tk 8.3.0 resources.
3c6f0e6230 Fixed to work with Tcl/Tk 8.3.0, at least, my modified copy of it.
141e9894b7 Fixed bug reported by JP Calderone: https:// URL's didn't work. The fix also adds support for POSTing to an https URL
66bf446273 Patch from Harry Henry Gebel: fix two stupid bugs in help-printing stuff.
01ae9eb2ec Added a couple of contributors. Still needs work for the next distribution.
6a2fdabd3d Erik van Blokland's CaptureAE.
2ea47f9f70 Added a reference to the Open Directory page on macPython.
82add28b40 The .exp file hadn't been regenerated after adding the threading stuff. This means that building a nonthreaded PythonCore will now require massaging of the .exp.
2f2c5f6471 Added a note about Personal Webserver, and replaced "netpresenz" by a list of the current mac webservers.
968cde98fc Added Corran Webster's explanation of how to write extensions in MPW and a pointer to his W documentation.
3af07e9a78 Sporadic, untested Python 1.5.1 compatibility changes.
aa458bc465 Merged in Python 1.5.1 compatibility changes from the 0.1.3 branch: added 'abspath()' and 'extend()'.
d80506c238 Merged in code from the 0.1.5 release to handle IOError and OSError exceptions better.
6a9a545ab1 Check that 'self.formats' is good early on.
ddad73bca9 Catch DistutilsOptionError in 'setup()' -- it's thrown either because of errors in the setup script or on the command line, so shouldn't result in a traceback.
db80754abc Extracted the "what-do-I-do-for-this-format" logic from code in   'make_archive()' to a global static dictionary, ARCHIVE_FORMATS. Added 'check_archive_formats()', which obviously makes good use of   this dictionary.
4982f98bc9 Fix how we generate the meta-data query methods to include 'get_fullname()' and the other "composite meta-data" methods.
0ae7f76b40 Changed to call 'get_fullname()', not 'get_full_name()', on Distribution object.
ee0810403d Made the GUSI options work again with GUSI 2.
6dd9fc1a2c Added winsound project to workspace, and added -I options to winsound
5796d26794 Patch by Vladimir Marangozov to unload additionally imported modules after each test has been run.  This avoids excessive memory growth during the tests.
cdd092fe48 Added test_winsound by Mark Hammond.
a8ee4c31bf Mark Hammond:
7053b8a422 Mark Hammond:
25826c93c4 Charles Waldman writes:
5ce78f8e4e Patch by Charles G Waldman to avoid a sneaky memory leak in _PyTuple_Resize().  In addition, a change suggested by Jeremy Hylton to limit the size of the free lists is also merged into this patch.
84219682fb Charles Waldman writes:
83addc7a0f Charles Waldman writes:
2dd8dddef4 Use an explicit macro SOCKETCLOSE which expands to closesocket (on Windows), soclose (on OS2), or to close (everywhere else).
ace88aebbb Patch by Brian Hooper, somewhat augmented by GvR, to strip a trailing backslash from the pathname argument to stat() on Windows -- while on Unix, stat("/bin/") succeeds and does the same thing as stat("/bin"), on Windows, stat("\\windows\\") fails while stat("\\windows") succeeds. This modified version of the patch recognizes both / and \.
e0cd291b81 Doc strings for the spawn* functions, by Michael Hudson.
535f2d9ace Fix 'check_metadata()' so it grovels through the distribution's metadata object, rather than through the distribution itself (since I moved the meta- data out to a DistributionMetadata instance).
87da1ea127 Patch from Andrew Kuchling: document the new multiple pattern feature in the manifest template.
9d5afa9894 Patch from Andrew Kuchling: allow multiple include/exclude patterns for all commands except 'prune' and 'graft'.
58ec6ede20 Fixed the '--license' option so it's officially an alias for '--licence', and now actually works.
1e7b509526 Added the capability for alias options.
320df700dc Added 'has_option()', 'get_attr_name()' methods.
82715e1f11 Patch, originally from Bastian Kleineidam and savagely mutilated by me, to add the "display metadata" options: --name, --version, --author, and so forth.  Main changes:   * added 'display_options' class attribute to list all the "display only"     options (--help-commands plus the metadata options)   * added DistributionMetadata class as a place to put the actual     metadata information from the setup script (not to be confused with     the metadata display options); the logic dealing with metadata     (eg. return self.name or "UNKNOWN") is now  in this class   * changed 'parse_command_line()' to use the new OO interface provided     by fancy_getopt, mainly so we can get at the original order of     options on the command line, so we can print multiple lines of     distribution meta-data in the order specified by the user   * added 'handle_display_options()' to handle display-only options Also fixed some crufty old comments/docstrings.
283c745c57 Made 'generate_help()' and 'print_help()' methods of FancyGetopt. Added 'set_option_table()' method. Added missing 'self' to 'get_option_order()'. Cosmetic/comment/docstring tweaks.
ead5c291bb Continuing the refactoring: deleted the old 'fancy_getopt()' function, leaving in its place a tiny wrapper around the FancyGetopt class for backwards compatibility.
ffc10d9a2e Hefty refactoring: converted 'fancy_getopt()' function into FancyGetopt class.  (Mainly this was to support the ability to go back after the getopt operation is done and get extra information about the parse, in particular the original order of options seen on the command line. But it's a big improvement and should make it a lot easier to add functionality in the future.)
d5767a5e43 Reformatted wide paragraphs.
4eaa3bfed0 Reverted '\var' in the "standard installation location" table to '\filevar'. Reformatted wide paragraphs.
c402fa122f Dropped '\tilde' and '\bslash' definitions.
4756e5fb1c Changed '\tilde' and '\bslash' to the standard '\textasciitilde' and '\textbackslash'.
95da443447 Removed '\package' definition.
1ecc251538 Changed '\package' to \module'.
a021acacfb Changed '\option' to '\longprogramopt' wherever it referred to a command-line  option.
ff9ea480eb ANSI-fy & de-tabify the source. (4-space indents already used.)
3314c8efc9 Bumped version to 0.8.1.
b1e4a6e101 Added kludge to deal with the "./ld_so_aix" problem: force all strings in the Makefile that start with "./" to be absolute paths (with the implied root being the directory where the Makefile itself was found).
434ef8fe94 Don't load the config.h file, even under Unix, because we never use the information from config.h.  Code is still there in case someone in the future needs to parse an autoconf-generated config.h file.
f70c603149 Added 'link_executable()' method (Berthold Hoellmann). Two small fixes to 'link_shared_object()'.
316778860f Fix by Dan Green and Corran Webster to support LongDateTime values. Untested by me.
cebda6f5f0 Added documentation for WindowsError; omission noted by Michal Bozon <bozon@natur.cuni.cz>.
e99d1dbc74 Clarify the description of the else clause for try/except, and add an explanation of why you'd want to use it.
eacdea8572 Reformatted all exception documentation as docstrings.
02a1a2b077 Cleaned up/simplified error-handling:   - DistutilsOptionError is now documented as it's actually used, ie.     to indicate bogus option values (usually user options, eg. from     the command-line)   - added DistutilsSetupError to indicate errors that definitely arise     in the setup script   - got rid of DistutilsValueError, and changed all usage of it to     either DistutilsSetupError or ValueError as appropriate   - simplified a bunch of option get/set methods in Command and     Distribution classes -- just pass on AttributeError most of     the time, rather than turning it into something else
4a3dd2dcc2 Fix PR#7 comparisons of recursive objects
0556501a81 Anthony Baxter <anthony@interlink.com.au>: The following adds support for RTSP (RFC2326) URLs to the standard urlparse.py module.
8eef583025 Don't run "ranlib" if sysconfig's RANLIB (from Python's Makefile) starts with ":".
46b98e35fd Various wording/formattin tweaks. Started spewing "Creating Built Distributions" section.
1561ae13b6 Use 'get_python_inc()' to figure out the Python include directories rather than cobbling them togethere here.
2b9e43f8d0 Coerce all paths in the manifest template to the local path syntax with 'native_path()'.
1c79330e64 Cleaned up use of sysconfig module a bit: don't import more names   than we actually use, and do actually use AR and SO. Run ranlib on static libraries.  (Should probably have a platform-check   so we don't run ranlib when it's not necessary, ie. on most modern   Unices.)
b6f5adaa12 Don't bother reading config.h on NT or Mac OS.  (It's not really needed on Unix either, so should probably disappear entirely.)
6d27c1eb32 Simplify creation of the version_info value for clarity, per suggestion from Greg Stein.
9cf7587fdc Update change to version_info structure.
93a20bf87c Capitulate, changing version_info to a 5-tuple:
4d65d73686 Document hexversion (incompletely explained) and version_info (easily explained).
801c08d700 Define version_info to be a tuple (major, minor, micro, level); level is a string "a2", "b1", "c1", or '' for a final release.
3155db3b79 setup_confname_table(): Close memory leak caused by not decref'ing the inserted dictionary values.  Also, simplified the logic a bit.
8deecedc6d Thomas Heller <thomas.heller@ion-tof.com>:
10dfd4c1c3 M.-A. Lemburg <mal@lemburg.com>:
e0243e24be M.-A. Lemburg <mal@lemburg.com>:
49fd1077bc M.-A. Lemburg <mal@lemburg.com>:
4e998bc658 M.-A. Lemburg <mal@lemburg.com>:
afe73a4687 M.-A. Lemburg <mal@lemburg.com>:
078b24f000 When refering to Unicode characters in exception messages and docstrings, the documentation guidelines call for "Unicode", not "unicode".  Comply.
127b2ef2d5 raise TypeError when bad argument passed to cStringIO.StringIO
394b54d01a ord: provide better error messages
502d2b4615 Added note about usual default prefix under Linux (thanks to Peter Funk for the idea).
822a86a955 Trying to placate Fred: redefine \tilde and \bslash; document everything. Still some not-quite-standard definitions in here that I have to fix.
d5faa7ea08 Changed the table of per-platform default installation locations to be more consistent with the rest of the Python docs.
ee775a194c Make use of \longprogramopt where appropriate.
2b85341776 Elaborate descriptions of \e, \module.
ce44498ba8 Revise the description of \programopt, document \longprogramopt.
493624941a \longprogramopt:  New macro.
0cd6021339 do_cmd_longprogramopt():  New function.
080daa04f1 This commit was manufactured by cvs2svn to create tag 'r16a2'.
9144763aae Add weasel-words about versioning, so I don't have to check in a new README for each new alpha release.
1c89b0eeef Deleted trailing whitespace.  This is really a way to be able to add a missing part of the previous checkin message:
004d64f362 Marc-Andre Lemburg:
f0b7b04ae8 Marc-Andre Lemburg:
dc742b3184 Marc-Andre Lemburg:
86662914be Marc-Andre Lemburg:
3afba7644b Marc-Andre Lemburg:
a3277139f1 Marc-Andre Lemburg:
b28bc8cd05 Marc-Andre Lemburg:
7ee801d6af Marc-Andre Lemburg:
e39a88fd58 Two more items.
08c68fc82d LaTeX macros for the Distutils manuals. Perhaps these should be added to the standard Python style file?
c392caa390 Spewed a bunch more verbiage. Lots of scattered wording changes.
36d4f8b0ec Correct fix by Mark Favas for the cast problems.
e110dcfa86 I've had complaints about the comparison "where >= 0" before -- on IRIX, it doesn't even compile.  Added a cast: "where >= (char *)0".
2581764f21 Version 1.3 of the Python Unicode Integration proposal.
8520cc2328 Added reference count information for Py_FindMethod().
a901f8fd4d Install the docs (with fewer rules). Add descriptions for the system variables.
0b4400e86c Bunch of new names, mostly from patches and bugs mailing lists (everyone who said something remotely useful in the last 100 messages I archived has been added :-).
7357770153 Yet another markup nit:  functions that are part of the Python/C API are still C functions, and should be marked.
37f41565a8 PyErr_Format():         Remove statement that the return value is always NULL; this is         generated by the formatting.
98605b54b4 document PyErr_Format
0682be4524 letters:         Fix description; lowercase and uppercase are strings, not         functions!  Noted by Randall Hopper <aa8vb@yahoo.com>.
8394595f3b Add to the comment a description of the "null" value for returned PyObject* values.
c2578c5bb6 load_refcounts(), do_env_cfuncdesc():  Support the "null" value for the refcounts field         in refcounts.dat.
db2764d941 The reference count field for PyErr_NoMemory() and PyErr_SetFromErrno() should be "null".
5e872de6c7 If the refcount field is "null", that's ok; the value will be None.
729eca1b9d For functions which return a PyObject* but use "null" for the reference count field, state that the return value is always NULL.
0a863da1f8 cfuncdesc environment:         When processing the optional parameter, don't append any text;         let the pre-processor supply all of it.
4dfcd766c6 Added project dependencies -- Mark is right, these are needed.
6d2332d376 Strangely, we *do* need to define ZLIB_DLL. Do it in the project file rather than in the source, so it's easier for Mark to change.
adb272ceee do_cmd_datalineni():  New function, to implement the non-indexing form                       of \dataline.
6e277cf7de Christian Tismer: added test to ensure that multiplication commutes.
ba71a247ac Simple optimization by Christian Tismer, who gives credit to Lenny Kneler for reporting this issue: long_mult() is faster when the smaller argument is on the left.  Swap the arguments accordingly.
2516b39dd3 Implement suggestion from Lawrence Kesteloot in PR#280, to change the default list of files from () to None, and explicitly test for None before defaulting to sys.argv[1:].  This means that if you pass in an explicit empty list, it will read stdin instead of defaulting to sys.argv[1:].  This fixes a buglet in the test script (when called with options but without files, it chokes when it tries to interpret the options as files).
b81e70ebdb Fredrik Lundh: new snapshot.  Mostly reindented. This one should work with unicode expressions, and compile a bit more silently.
5de435a245 Removed CRLF line endings.
29530886af Remove CRLF line endings.
a25d7ddbf0 Some cleanup -- don't use splitfields/joinfields, standardize indentation (tabs only), rationalize some code in urljoin...
3bb1edb328 Match the error messages to say "(most recent call last)" like the built-in messages.
d6904ea5a0 Use a better approach to locating IDLE's default configuration, allowing it to be run from anywhere, including through a symlink to the actual idle.py script.
44679590e0 Patch by Vladimir Marangozov to include the function name when comparing code objects.  This give sless surprising results in -Optimized code.  It also sorts code objects by name, now.
1a4b593dd6 Use a constant to specify the number of child threads to create.
9706486b9f Marc-Andre Lemburg:
45ad3c4897 Marc-Andre Lemburg:
fd4b957b06 Marc-Andre Lemburg:
90daa87569 Marc-Andre Lemburg:
b244f6950b Marc-Andre Lemburg:
52c2359a59 Marc-Andre Lemburg: New exported API PyUnicode_Resize().
4b49101f20 Don't be so strict in checking AttributeError -- the error message recently changed.
547e952017 Output from test_zipfile.py.
368f04ac46 Test for zipfile.py, by Jim Ahlstrom.
d197a3a12c Define 'self.force' in the constructor and remove the hack in '__getattr__()' to account for it not being defined in the constructor.
5f8b12f27e Mark Hammond:
5db862dd0c Skip Montanaro: add string precisions to calls to PyErr_Format to prevent possible buffer overruns.
fa972c987c In dealloc(), only close the socket if fd != -1.
7aff6f34fe Delete some debugging print statements.
e9613ae05f Added a check for the 'force' attribute in '__getattr__()' -- better than   crashing when self.force not defined. Revise 'copy_file()' and 'copy_tree()' docstrings accordingly. Remove 'hasattr()' check for 'self.force' from 'make_file()'.
d38e6f7637 Added optional 'prefix' arguments to 'get_python_inc()' and 'get_python_lib()'.
cf6bea3dc7 Better variable names here and there.
c41d6b35a9 Added '--force' option -- very clear what it means for building (ignore timestamps), so every build_* command has 'self.force', which follows the 'build' command if not set by the user.
68a0757e23 Removed global '--force' option -- just too vague a concept to be applicable to all commands in the same way.  Several Command methods now either expect 'self.force' to be defined, or check if it is defined and assume it's false if not.
582a8701cb Added __version__ to store the Distutils version number.
c248baecb3 Moved definition of \XXX command out to distutils.sty.
6002ffc38c Wrote the introduction (including several subsections). Started writing the "Standard Build and Install" section.
ae787185df minor tweak (jvr)
73efed21e8 added experimental microthread support for use with stackless python -- bw compatible (jvr)
d949b5cdba added popup control (jvr)
7051e5263e added setbound() method, some cleanups (jvr)
6e5f2d1f8e oops, keyword list missed exec... doh! thanks to Maik Roeder (jvr)
7d7bb91926 Installer Vise vct file for 1.6a1. Not very pretty (and needs funny directory structure).
4aafaf92c7 Modified for 1.6a1.
ffd61a62cc Quick readme for 1.6a1.
facb8dbaeb Fixed so LaTeX can actually process it, and so it looks like the other Distutils manual.
16aafcd85b Got started for real on this manual.  Completely untested and unread -- just checking it in so I can move things around in the CVS repository.
7593eb3267 Extracted a bunch of Distutils-specific commands and macros to distutils.sty (also needed by inst.tex).
60908f1408 Ditched the unused 'list_only' option. Added code to include source files from 'build_clib' command to default file   list -- currently this won't work, since 'build_clib' doesn't have a   'get_source_files()' method!
b2e2c29295 Catch DistutilsFileError in addition to DistutilsExecError in 'setup()'.
b361233c76 Added (currently) pointless and trivial main body (for future tests).
d759f5f145 This little note is to clarify things for people who go poking around the Python library hoping to find out more about the Distutils.
6c38e5b46d Drag was missing from the modules built.
d96f04c8f9 This hadn't been checked in for a while.
9164f88657 Fix Skip's email address in his attribution!  (Thanks, Skip!)
e7a8c972d8 Added support for the "Long HTML" version to the build/packaging process.
c2c46c3751 New example from Skip Montanaro <skip@mojam.com>.
037649eaa6 Enable multithreading.
6d3632a209 Added a profiling target.
a974d2498e Fiddled linkorder and a few other things to make shared threaded python work.
46f14580cb Describe the purpose of the "long HTML" package.
5fa38862bb Fred Gansevles <gansevle@cs.utwente.nl>: The copytree function doesn't pass the symlinks parameter in recursicve calls
37d21e117f Started on GUSI2 and threading support.
d62966060f 1.6a1 modules added.
7f70c8ee89 Started on GUSI2 and threading support. cfm68k targets are still included in all projects, but for the time being all the "fat" targets exclude them, making them basically copy operations. This way we don't have to rename everything, and anyone interested can easily try to fix 68k support.
2d1306b7cf Started on GUSI2 and threading support.
5c21420772 Ready for 1.6a1. Reordered the defines to be in line with config.h.in again, so tracking the new defines will be easier in future.
e31d3d66aa Return a handle in stead of a resource.
a396a883af Vladimir Marangozov: This fixes the line number in the string representation of code objects when optimization is on (python -O). It was always reported as -1 instead of the real lineno.
fa9ef1864f Just in case someone wants to use this, let's fix the pathname.
cff5482d37 Mark RELEASE with the release level ("a2").
ba47704943 Conrad Huang points out that "if (0 < ch < 256)", while legal C, doesn't mean what the Python programmer thought...
69ca950d1f Make sure the \declaremodule uses the right name for the module!
343301aaa4 unichr(), unicode():  Added \versionadded{} annotations.
0b72116812 Marc-Andre Lemburg <mal@lemburg.com>: Added UnicodeType.
56ced2a7e4 Marc-Andre Lemburg <mal@lemburg.com>: Added note that Unicode strings are picklable.
5828ad6963 Revised / removed comments about string exceptions (relating to the standard exceptions), added documentation of UnboundLocalError.
08df3ac066 Bump version to 1.6a2 -- to be released one of these days.
3cb793e8e8 Marc-Andre Lemburg <mal@lemburg.com>: Added UnicodeError description.
61098f201e Marc-Andre Lemburg <mal@lemburg.com>: Add Unicode strings to the list of marshalable types.
b1b3096a54 Moved socket, select, unicodedata to their own PYD.  This should reduce the size of python16.dll to almost its 1.5.2 size, and remove dependencies on winsock unless sockets are actually used.
665dd704a3 Note the exception raised when parameter to chr() is out of range.
33d51841a3 Marc-Andre Lemburg <mal@lemburg.com>: Documentation for unichr(), unicode(), update for ord().
f4a3bd4991 Remove _socket, select, soundex, and unicodedata.  These have been moved to their own DLLs, or are obsolete (soundex).
2097ef126b Added entry for codecs module.
98f8a3d8da Added codecs entry here as part of String Services.
b7979c756c Marc-Andre Lemburg <mal@lemburg.com>: codecs module documentation, with some preliminary markup adjustments from FLD.
9dc30bb956 Marc-Andre Lemburg <mal@lemburg.com>: Tutorial information about Unicode strings in Python, with some markup adjustments from FLD.
a4cd2611f4 Marc-Andre Lemburg <mal@lemburg.com>: API documentation for Unicode support from C.
8b3ce9e099 But don't do the funny \UNICODE macro; we're trying to get away from those markups!  <with-mixed-feelings>
f0aff8e759 Patch from Marc-Andre Lemburg <mal@lemburg.com>: Added Unicode type to the language reference.
54b1c0b408 Windows: Since we're not using ZLIB.DLL any more, don't define ZLIB_DLL. (Mark Hammond.)
4cb8c0b1b4 Add msvcrt to list of libraries to ignore in Debug mode.
7d508fe568 Add missing import of 'usage' string.
6d5c6bdb25 Removed bogus connect() call in SMTP example; reported by Travis B. Hartwell <slt5v@cc.usu.edu>.
71b04dab58 Added reference to the multifile module from the "See also" section in the mimetools documentation. Suggested by Skip Montanaro <skip@mojam.com>.
1b6e8214ab Added a few cast to make it 68k-compatible.
34888ed689 Fredrik Lundh: eliminate a MSVC compiler warning.
9e896b37c7 Marc-Andre's third try at this bulk patch seems to work (except that his copy of test_contains.py seems to be broken -- the lines he deleted were already absent).  Checkin messages:
457855a5f0 Forgot to save the project file -- this also reflects the use of Tcl/Tk 8.2 instead of 8.3, because 8.3.0 often crashes on closing a window.
a5b09373d8 Lots of cleanup things.
d1a56f4235 Noted by Guido:
898915d7e2 Noted by Guido:
43b89b637f Noted by Guido:
605843f0c0 Mark Hammond: This patch fixes the mmap module on Windows 9x.
1ef4e2d54e Mark Hammond <mhammond@skippinet.com.au>: This patch fixes the mmap module on Windows 9x.
aaa8bb4211 Work the Tcl version number in the path we search for.
4f3cc35cc1 Get rid of Win32s check.
bf4041a0a6 Merged in changes from 1.5.2p2 release.
02ba62141e Merged in changes from 1.5.2p2 release as appropriate.
13c8c0272a Skip Montanaro submits a simple patch that makes encode() and decode() recognize the '7bit' and '8bit' encodings, to simplify use.
12ed36525a Added "See also" section; from Peter Funk <pf@artcom-gmbh.de> (re-written).
005f494a7f Added "See also" section; from Peter Funk <pf@artcom-gmbh.de>.
69fbf33680 Fixed typo in example code; spotted by Everett Lipman <lipman@sphere.niddk.nih.gov>.
965fdae40e Patch by Fred Gansevles.
56a87a0905 Patch from Hrvoje Niksic <hniksic@iskon.hr>:
7d68690d8d Added notes about the eventual disappearance of two-parameter bind(), connect(), and connect_ex().
b49dc75f51 Add warning that multi-arg connect() etc. are deprecated.
527c9bd32a Put back multi-arg capability on connect/connect_ex/bind, for backwards compatibility, and to avoid a revolution.
1571a1e34b Since Thomas Wouters kept complaining that he wants access to the the Unix From lines, change the UnixMailbox class so that _search_start() positions the file *before* the Unix From line instead of after it; change _search_end() to skip one line before looking for the next From line.  The rfc822.Message class automatically recognizes these Unix From lines and squirrels them away in the 'unixfrom' instance variable.
aebf706b4e Reorganization: ripped util.py to shreds, creating in the process:   - file_util.py: operations on single files   - dir_util.py: operations on whole directories or directory trees   - dep_util.py: simple timestamp-based dependency analysis   - archive_util.py: creation of archive (tar, zip, ...) files The functions left in util.py are miscellany that don't fit in any of the new files.
fe6462c1f3 Reorganization: moved the Distribution class from core.py to dist.py, and the Command class from core.py to cmd.py.  No other code needs changing though; distutils.core still provides the Command and Distribution classes, although indirectly now.
6c981ad25e Only write message about changed Tab size with -v.
38e5d27cae Merged changes from the 1.5.2p2 release. (Very rough.)
659ebfa79e Merge in changes from the 1.5.2p2 release.
eb725cd045 Merged changes from the 1.5.2p2 release.
6a0d844e76 UserString section:
42934689ea Note that "Unicode" is always capitalized.
54fd8452a1 Merge in changes from the 1.5.2p2 release.
e15956b465 Merged changes from the 1.5.2p2 release.
20082d92f2 Merge in changes from the 1.5.2p2 release.
ba82878a3b Merged changes from the 1.5.2p2 release.
a22b576d05 UserString class from Peter Funk <pf@artcom-gmbh.de>.
e3ba931aa4 This patch looks large, but it just deletes the ^M characters and    untabifies the files.  No actual code changes were made.
e188d52a7e Untabified file to fix problems reported by tabnanny
d9b0f26515 Mark Hammond:  Uncomment call to delete test data when done.
9a257b4fd4 Added --numeric option, similar to mkhtml.sh.
9c26f5dbed Added rule to copy in the icons/ directory.
3bb719f744 List of subdirs that are generated during the build.
e018beea94 Build rules for the "long HTML" version.
c0605ad952 This commit was manufactured by cvs2svn to create tag 'r16a1'.
d0a42e2d31 Quick update to the README file.  For intros and books we now point to the website.
431ae486c1 Add a README file so that cvs update -P doesn't obliterate this directory, and so that people have a clue as to why it exists.
494ef17472 Two more names.  I just realize that there may be more contributors to distutils lurking in CVS logs that I probably haven't read.  Oh well.
5964f8d60b I believe I've now got all the names mentioned in the CVS logs since 1.5.2 was released, except those who contributed only to Doc files -- Fred has his own way of doing this.
19ce16665d Fixed my simplification to Thomas' patch: winreg and win32api export the same functions, but with different names.
ddc6c276b7 Improve explanation of reference counts for PyString_Concat().
38d062d022 Reflect the two new sections in the dependencies.
3c9f936eee Two new sections.  Preliminary.
32abe6f7d0 Zip file handling module, by Jim Ahlstrom.
8a16054240 Marc-Andre Lemburg: The large unicode database table is broken in pages of 4k entries each. This should fix compiler problems on some platforms.
b95de4f847 Marc-Andre Lemburg: Error reporting in the codec registry and lookup mechanism is enhanced to be more informative.
52a644cbda Add '#include <netinet/tcp.h>' "man tcp" on Solaris says that TCP_NODELAY is defined in netinet/tcp.h, and the Open Groups Unix98 spec agrees (http://www.opengroup.org/onlinepubs/009619199/ninettcp.htm).
2ea3e143f0 Some blank lines.
68895ed70c Marc-Andre Lemburg: use all lowercase names.
8de16932d0 This module's name should be linuxaudio*dev*.c
1027e3fde9 Simplified Thomas Heller's registry patch: just assign all those HKEY_* and Reg* names once, rather than having near-duplicate code in the two import attempts.
7642f5cf38 Patch from Thomas Heller: use the new winreg module if available.
d1bda0ce88 Added some clarifications to pyexpat.
5961f5a06d Make it compile on Windows.
7025599f3d Adding pyexpat project.
e042dc4583 Buncha last-minute fixes
d553e99a74 Added test case output for pyexpat module
b17664ddf0 Added test case for pyexpat module that tries to exercise all the handlers
b7f105371f Added Python interface to Expat XML parser.     The Setup.in entry is sort of a lie; it links with -lexpat, but     Expat's Makefile doesn't actually build a libexpat.a.  I'll send     Expat's author a patch to do that; if he doesn't accept it, this     rule will have to list Expat's object files (ick!), or have a     comment explaining how to build a .a file.
6a6a77c6af Add Python version bump to configure script.  (AMK)
5d35bf9853 Added distutils and distutils/command to LIBSUBDIRS.  Noted by Andrew Kuchling.
5fc4e20fee Added _sre project to workspace.
325942adb4 Removed three unused variables from the Windows code.
e56793557c Added the _sre module.  It is always on.
b700df9824 Adding Fredrik Lundh's _sre.c module and its header files.
7627c0de69 Added Fredrik Lundh's sre module and its supporting cast.
7a5b796322 Thomas Heller fixes a typo in an error message.
0380c2638c More names.
b4c850c928 Added code to blow away the pseudo-installation tree and a 'keep_tree' option to disable this (by default, it's false and we clean up).
e5796fecc6 Oops, got a little too enthusiastic deleting code in that last revision: we still have to *run* the sub-command that creates a built distribution.
1889de8889 Fixed 'make_archive()' to explicitly turn of compression when format is "tar".
02296cea39 Rename 'formats' option to 'format', and remove the ability to generate multiple built distributions in one run -- it seemed a bit dodgy and I'd rather remove it than try to beat it into submission right now.
6b213766d8 Import from 'types' module. Added 'ztar', 'tar' to 'format_command' dictionary.
6ce00b4440 Tweaked 'get_platform()' to include the first character of the OS release: eg. sunos5, linux2, irix5.
7d51034eef Removed some old test code: don't set 'plat' when calling 'new_compiler()'.
95c0b269de Don't perpetrate the "_d" hack for naming debugging extensions -- that's now done in the 'build_ext' command.
842296480e Patch (mostly) from Thomas Heller for building on Windows:   * build to "Debug" or "Release" temp directory   * put linker turds (.lib and .exp files) in the build temp directory   * tack on "_d" to extensions built with debugging   * added 'get_ext_libname()' help in putting linker turds to temp dir Also, moved the code that simplifies None to empty list for a bunch   of options to 'finalize_options()' instead of 'run()'.
6e8ee5d8e9 Don't put Python's library directory into the library search path -- that's specific to building Python extensions.
64231e5c39 Add back an obscure "feature" to the Obj version of Tkapp_Call(): a None in an argument list *terminates* the argument list: further arguments are *ignored*.  This isn't kosher, but too much code relies on it, implicitly.  For example, IDLE was pretty broken.
6148c2cfa6 Added 'bdist' and 'bdist_dumb'.
42405a5d7d A version of FixTk.py that works with the way the installer now installs Tcl/Tk.
1b64a7e4a5 Added 'get_name()' and 'get_full_name()' methods to Distribution. Simplified 'Command.get_peer_option()' a tad -- just call 'find_peer()'   to get the peer command object. Updated 'Command.copy_file()' to take a 'link' parameter, just like   'util.copy_file()' does now. Added 'Command.make_archive()' to wrap 'util.make_archive()'.
32ce329ce4 Added 'create_tree()'. Changes to 'copy_file()':   * added support for making hard links and symlinks   * noted that it silently clobbers existing files when copying, but     blows up if destination exists when linking -- hmmm...   * error message tweak Added 'base_name' parameter to 'make_tarball()' and 'make_zipfile()'. Added 'make_archive()' -- wrapper around 'make_tarball()' or   'make_zipfile()' to take care of the archive "root directory".
318a9d7aa2 Added DistutilsInternalError.
e1664bdc59 The 'bdist_dumb' command, the first worker bee for use by 'bdist'.  This is the command that actually creates "dumb" binary distributions, ie. tarballs and zip files that you just unpack under <prefix> or <exec-prefix>. Very limited, but it's a start.
0f77f9569c The 'bdist' command, for creating "built" (binary) distributions. Initial revision is pretty limited; it only knows how to generate "dumb" binary distributions, i.e. a tarball on Unix and a zip file on Windows. Also, due to limitations in the installation code, it only knows how to distribute Python library code.  But hey, it's a start.
1aab6e9645 Added 'get_inputs()'.
ba38d12063 Fixed 'get_outputs()' so it actually works. Added 'get_inputs()' (which is strikingly similar to 'get_outputs()' - sigh). Cosmetic tweaks.
578c10d9a5 Changed to use the new 'has_pure_modules()' and 'has_ext_modules()' methods   provided by Distribution. Cosmetic and error message tweaks. Simplified 'make_release_tree()':   * extracted 'distutils.util.create_tree()'   * don't have to do hard-linking ourselves -- it's now handled by     'distutils.util.copy_file()' (although the detection of     whether hard linking is available still needs to be factored out) Removed 'make_tarball()' and 'make_zipfile()' entirely -- their role   is now amply filled by 'distutils.util.make_archive()'. Simplified 'make_distribution()':   * use Distribution's new 'get_full_name()' method   * use 'make_archive()' instead of if/elif/.../else on the archive format
43da798b42 Bit of cleanup on the projects. Some refinements on the Wise file, also adding mmap.pyd.
ef40e77ac5 Sigh.  On Windows, (mode_t)i fails.  Assume that there's a prototype in scope on systems where mode_t isn't the same size as int...
387b1011a1 rename args variable in CALL_FUNCTION to callargs (avoids name override)
706dbd03bd Mark Hammond: Ooops - even though Win32 handles the same args, there was a superfluous check for the platform.
a7937e57f3 Added mmap project.  (Mark Hammond.)
09fdf07315 Hacked for Win32 by Mark Hammond. Reformatted for 8-space tabs and fitted into 80-char lines by GvR.
767e775a98 Improved test, by Mark Hammond, for Win32.
2b6004a07f New version 1.0.4.  I'm sure someone mailed me these patches but I can't remember who. :-)  Changes:
8daef3791e New version 1.0.4.  I'm sure someone mailed me these patches but I can't remember who. :-)  Changes:
ab5ca15f94 Fix by Eric Raymond: make the code that looks for various bits of tab-setting magic much smarter, more correct, and more easily extensible.
a1f0a8f4a4 Don't use the object call interface in Tk 8.0 -- the EvalObj* API changed from 8.0 to 8.1 and I see no big reason to use objects in 8.0. At least now it works again with all versions from 8.0 - 8.3.
49679b40b9 Oops, the previous patch contained a bug in chmod.  Fixed now.
ffd15f5255 Two robustness patches:
fb2789f387 Couple more names.  We need to add way more names -- I'll have to dig them out of the changelogs :-(
6d10887cdc Change traceback error message to "most recent call last" from "innermost last".  The latter was mysterious to newbies.
ffc0f4fb36 Use modern PyArg_ParseTuple style, with function names. (Mostly.)
2efa369861 Use modern PyArg_ParseTuple style, with function names.
6a973c7118 robustify UserList constructor -- will now accept any sequence add test cases for non-UserList class, tuple, & string
074c3e62d1 Two fixes for extended call syntax: If a non-tuple sequence is passed as the *arg, convert it to a tuple before checking its length. If named keyword arguments are used in combination with **kwargs, make a copy of kwargs before inserting the new keys.
aaf0ab26ed Add linuxaudio module.
b130dc7419 Audio module for Linux, contributed by Peter Bosch.
2ab9082a07 Show Tcl/Tk version number in _test() and show Unicode test if possible.
a14253d4f8 Make it version 1.6a1.
5cf648b654 Seems there was a version string here that still looked like 1.5.2.
8c4cba8ef2 Mark Hammond: ensure the new standard module winreg is installed.
a12c7a7620 Add PyDict_Copy() function to C API for dicts.  It returns a new dictionary that contains the same key/value pairs as p.
c06653f567 Internal changes.
fb515f892f Added Tcl 8.3. Building on Windows NT. Removed Tcl installation. Commented out Doc installation.
426e39f2c2 Deleting Python 1.5 project and Wise file.
a35be2f412 Output for simple test case for mmap on Unix; someone needs to write a     Win32 test case.
e81b9cfcfe Added simple test case for mmap on Unix; someone needs to write a     Win32 test case
1ed7d2d2b8 Added mmap module -- map a view of a file into memory on Win32 and Unix. (Needs testing on Win32.)
e0dd3010ce Removed two files that were added temporarily.
b8f512bfa4 Bump version to 0.6 for the event of the Python 1.6 alpha 1 release.
71d55835b3 Oops: 'build_extensions()' no longer takes an 'extensions' list.
88716bba55 Revamped path access again, by Mark Hammond, to be more robust in the light of three different situations: (1) running from build; (2) running from installed; (3) running without being able to find an installation (e.g. as a COM object).  The system paths in the repository are only used for (3); the path deduced from the installation location are used otherwise.  PYTHONHOME overrides in all cases.
d30dedca27 Michael Hudson: With the (cool!) new call syntax, the longest opcode name is much longer, which fouls up dis's formatting slightly; this is a "fix" for that.
bf45322b3d Lawrence Kesteloot noted: Lib/user.py has a comment that says that the script pointed to by PYTHONPATH will be executed on startup.  That should say PYTHONSTARTUP.
bdcc96c9e3 Changes from 1.5.2p2, plus fix a couple of errors noted by Hernan Martinez Foffani <hfoffani@sofrecom.com.ar>.
bc9476ebe5 __pushtodev(): Ignore transient sunaudiodev.errors when setting the device info.  I don't know why these occur, but they seem to be shortlived and harmless.
b2ba9d8963 eval_code2(): Oops, in the last checkin, we shouldn't check for PyErr_Occurred(), just set x=NULL and break.  Oh, and make Jeremy stop nagging me about the "special" indentation for this block.
4961ef7086 eval_code2(): In the extended calling syntax opcodes, you must check the return value of PySequence_Length().  If an exception occurred, the returned length will be -1.  Make sure this doesn't get obscurred, and that the bogus length isn't used.
918429b3b2 Moved robotparser.py to the Lib directory. If you do a "cvs update" in the Lib directory, it will pop up there.
1d16a9f040 Put the Python "system" include dir last, rather than first.
41b4dd66c8 Call 'find_exe()', not '_find_exe()'.
ed8a0e0f21 Patch inspired by Bastian Kleineidam <calvin@cs.uni-sb.de>: use global __debug__ flag to determine if compiled files will be ".pyc" or ".pyo".  Tweaked compilation output messages too.
044b7c15c9 Changed 'copy_tree()' so it returns the list of all files that were copied or might have been copied, regardless of the 'update' flag.
739d06689d Documented Bastian's patch. Made handling OSError in 'mkpath()' more standard.
da4d1aef4e Patch from Bastian Kleineidam <calvin@cs.uni-sb.de>: make 'mkdir()' return list of directories created.
7c1a6d4777 Added 'make_tarball()' and 'make_zipfile()' functions in preparation for the 'bdist_dumb' command.  Adapted, with tweakage, from the 'sdist' command.
03d1ae1f01 Moved the guts of 'make_tarball()' and 'make_zipfile()' to distutils.util in preparation for the 'bdist_dumb' command; these methods remain as trivial wrappers around the versions in distutils.util.
f00c34da1d Added the "distribution query" methods: 'has_pure_modules()', 'has_ext_modules()', 'has_c_libraries()', 'has_modules()', and 'is_pure()'.
ab9d08ce65 Added 'build_clib'; replaced 'install_py' and 'install_ext' with 'install_lib'.
e5dfba5e0f Be sure to run both 'build_py' and 'build_ext', now that this command   is responsible for installing all Python modules (pure and extensions). Added 'get_outputs()' in preparation for the 'bdist' command, and   '_mutate_outputs()' to support 'get_outputs()'.
ee94c57fe9 Changed so the sub-commands we rely on to do the real work is specified   in a class attribute 'sub_commands', rather than hard-coded in 'run()'.   This should make it easier to subclass 'install', and also makes it   easier to keep 'run()' and the new 'get_outputs()' consistent. Added 'get_outputs()' in preparation for the 'bdist' command.
ae45b16157 Use the new 'has_pure_modules()', 'has_ext_modules()', 'has_c_libraries()' methods of Distribution instead of grovelling directly in self.distribution.
4d16e0ac20 Added 'get_outputs()' in prepartion for the 'bdist' command. Changed signature of 'build_extensions()': no longer takes the extension   list, but uses 'self.extensions' (just like 'get_outputs()' has to) Moved call to 'check_extensions_list()' from 'run()' to 'build_extensions()',   again for consistency with 'get_outputs()'.
8b2e95edd6 Deleted some crufty comments and code. A host of improvements in preparation for the 'bdist' command:   - added 'get_outputs()' method (all the other improvements were to support     this addition)   - made 'find_package_modules()' and 'find_modules()' return similar     values (list of (package, module, module_filename) tuples)   - factored 'find_all_modules()' out of 'get_source_files()' (needed     by 'get_outputs()')   - factored 'get_module_outfile()' out of 'build_module()' (also needed     by 'get_outputs()')   - various little tweaks, improvements, comment/doc updates
15a57a7cad Update for creating and linking with python16.dll. Also, _tkinter is linked with Tcl 8.3.
a29b3607d4 Updated for Python 1.6 and VC++ 6.0.
9c94a8882c Version -> 1.6.
e02e48be6f Changes to completely ignore the registry when it detects that you are running out of the build directory.  This means that it will no longer try to use an older version of the library when an older version has been installed.
436364c8a0 Change the pragmas to use python16.lib instead of python15.lib.  (Took me half an hour to find why it was still linking with python15.dll!)
21a50bd078 Version updated to 1.6; API version to 1009.
632de27021 The Tcl_Obj patch discussed on the patches list.
e4fb958fc2 remove reference (vestigal) to CALL_FUNCTION_STAR
a403d7d390 remove reference to CALL_FUNCTION_STAR in comment
003663d783 fix previous checkin
aed0d8deb0 add test cases for Greg Ewing's extended call syntax patch
7690151c7e slightly modified version of Greg Ewing's extended call syntax patch
93a7c0fe6b Fredrik Lundh:
1916b35f58 Fredrik Lundh:
8f11d8e52e Updated NetPresenz URL. Still needs update in the light of the new :Mac:Tools:CGI: stuff. Later. (jvr)
f84fdfeefb added PythonCGISlave and BuildCGIApplet to the list of applets to build (jvr)
09fca8dbbb Mark Hammond: add winreg module as new subproject.
9f3712c6f1 Mark Hammond: new winreg module; updated dllbase file.
de59855da6 Mark Hammond: test suite for new winreg module.
24bdb0474f Marc-Andre Lemburg:
66d4513975 Piers Lauder:
84306246f1 Fix suggested by Magnus Kessler: in class Page, it is possible for self.parser to be None; in that case don't dereference it in getnames().
a80649b357 Patch by Neil Schemenauer to remove support for Tcl/Tk versions before 8.0.  There really is no excuse, and for who really still wants those, they can go back to Python 1.5.2.
c88093a90f small fix: don't depend on the exact location of PythonCGISlave within the Python tree. (jvr)
f51872733c Added getaboutmenutext() method. (jvr)
4011723d0d - new version of PythonCGISlave - new script/applet BuildCGIApplet This largely supercedes :Mac:Demos:cgi, except for the html doc file. Should it move here? Merged with CGI_README.txt? Todo: fullbuild support. (jvr)
b7a40ba8d3 MBCS codecs.  (Win32 only.)  By Mark Hammond.
efec1158c1 Prototypes added for MBCS codecs.  (Win32 only.)
50fbb15b16 Typo fixed by Mark Hammond.
1abd82c07d MBCS codecs for Windows.  Contributed by Mark Hammond.
e187b0eb20 Add a call to Tcl_FindExecutable().  This was inspired by a patch by Martin von Loewis (whose more elaborate patch to use objects is still under review).
dc8b7980e0 Skip Montanaro:
0c3baaf19c my previous patch didn't give enough events to SIOUX, this one fixes that (jvr)
7ec7c8ad66 fixed several event handling buglets, added command Q support, added a new module doc string, some formatting nits. (jvr)
89489fa15d Beefed up error-handling in 'setup()' a smidge: handle OSError and DistutilsExecError now.
a3c8bf382e Duh, it helps if '_nt_quote_args()' actually returns the mutated list, rather than None.
cdb20ba56d Fixed a bunch of screwed-up logic and inconsistent terminology. Fixed 'build_extensions()' to pay attention to the 'rpath' element of the   'build_info' dictionary.
2f557a2ec4 Added 'runtime_library_dirs' parameter to 'link_*()' methods, and warn that   we don't know what to do with it when we see it. Call '_fix_object_args()' and/or '_fix_lib_args()' as appropriate, rather   than just '_fix_link_args()'.
e21dabe2e0 Added 'runtime_library_dirs' parameter to 'link_*()' methods, and changed to   use it when linking. Call '_fix_object_args()' and/or '_fix_lib_args()' as appropriate, rather   than just '_fix_link_args()'.
f10f95d6bb Added 'runtime_library_dirs' parameter to 'link_*()' methods. Split '_fix_link_args()' up into '_fix_object_args()' (for use of   'create_static_lib() and link methods) and '_fix_lib_args()' (for the   link methods only).
158ce4247e realcgitest.py: added import MacOS, it now works again. Removed NetPresenz reference. cgitest.cgi.rsrc: disable argv emulation; this is essential for the first time the cgi applet starts up
13ff8eb493 Christian Tismer:
d8855fde88 Marc-Andre Lemburg:
27fc3c05e1 Fix all routines to use PyArg_ParseTuple(), and add ":name" to the argument format strings.
7e57bc4a5b Fix the test so that connect() and bind() are called with a single argument: a (host, port) tuple.
5ba3c843db Marc-Andre Lemburg:
d8fbcc95d9 Regenerated with test for 'contains'.
c24ca4b192 Fix probable bug; if errno == EINTR, floatsleep() doesn't break out of    a Py_BEGIN_ALLOW_THREADS/Py_END_ALLOW_THREADS block, but it    calls Py_BLOCK_THREADS anyway. The change moves Py_BLOCK_THREADS    to inside the if, so it's only executed when the function    actually returns unexpectedly.
70b5d47f71 From Sjoerd Mullender <sjoerd@oratrix.nl>:
a7540bd043 Import fix.
e2a33079e9 Fixed '_nt_quote_args()': backwards logic reversed, and now it actually returns a value.
297dd9fed5 Fixed the class name.
deb6373fff Data of type Point is passed by value, not by reference.
8e14f05ae6 Fix small errors in description of Mac, Windows installation schemes. Added comment about "--help" (no value) not working.
790c110c48 Revised tons of comments to reflect the current state of affairs better. Deleted some crufty code.
048ca7dcaf Run 'install_lib' instead of 'install_py', and ditch 'install_ext' completely (was already commented-out).
55753d4a75 Renamed install_py.py to install_lib.py, since it now handles installing all Python modules, pure and extensions.
5b001f1569 Obsolete command -- no longer relevant since we now build all modules, pure Python and extensions, into the same directory.
1497b61cb0 Dropped the evil and misguided 'set_peer_option()' method -- it's no longer needed, and can't possibly work anyways.
066af1074d Dropped any notion of allowing the user to specify the build directories: these must come from the 'build' command.  This means we no longer need the misconceived 'set_peer_option()' method in Command and, more importantly, sweeps away a bunch of potential future complexity to handle this tricky case.
1b4ede5f24 Improved an error message in 'mkpath()'. Tightened up some logic in 'native_path()'. Added 'subst_vars()' and '_check_environ()'.
7f6ef6ca26 Renamed 'install_path' to 'extra_path'. Fix 'Command.set_undefined_option()' to call 'ensure_ready()' rather   than 'finalize_options()' (which is only supposed to be called once,   which is the whole point of 'ensure_ready()'). Added comment to 'set_peer_option()' to remind myself that this method   cannot work and is fundamentally wrong-headed.
a233d86638 Yet another complete rewrite.  Hopefully the *last* complete rewrite of this command for a while; this implements roughly the plan cooked up by Guido, Fred, and me.  Seems to strike a nice balance between usability in the common cases (just set one option), expandability for more types of files to install in future, and customizability of installation directories.
531349f28e Fix how we set 'build_dir' and 'install_dir' options from 'install' options -- irrelevant because this file is about to go away, but oh well.
4620f306a4 Took out what looks like old debugging code that probably should never have been checked in: was passing the PLAT environment variable as the 'plat' argument to 'new_compiler()'.
a27e9fb19f Added UserPane callbacks for HitTest and Tracking. Doesn't fully work yet.
1a7d5b12c0 Added a GetControlRect() method to controls which returns the bounding rectangle. To my surprise this call is missing from the C API...
0e12bcd243 Updated comment: in PyTypeObject:
51ac58039f On 17-Mar-2000, Marc-Andre Lemburg said:
abc411bac8 Started on support for callbacks for UserPane controls. Unfinished and untested.
fb4ece7fea Simplified doc string. Added 'clean' to list of commands.
89ccb984f0 Oops!  Don't call 'ensure_ready()' in 'Distribution.find_command_obj()' -- that broke parsing command-line options.  Instead call it in 'Command.find_peer()', which is why I added it to 'find_command_obj()' in the first place.
11fc7e447c Tweaked all over:   * improve help strings   * warn if user supplies non-existing directories   * don't try to 'remove_tree()' non-existing directories   * try to remove the build_base after cleanup (but don't do or say     anything if it fails -- this is just in case we made it empty)
2dc139cc91 Patch from Bastian Kleineidam <calvin@cs.uni-sb.de>: use 'util.remove_tree()' instead of 'nuke_release_tree()'.
b98fe36c46 Patch from Bastian Kleineidam <calvin@cs.uni-sb.de>: added 'remove_tree()'.
06537a5e89 Contribution from Bastian Kleineidam <calvin@cs.uni-sb.de>: the Distutils 'clean' command.
dedd5b5ed2 In 'finalize_options()': if 'self.libs' is a string, make it a singleton list.
d03f88a38f Changed to pay attention to the 'runtime_library_dirs' list (= 'rpath' option in the 'build_ext' command):   * in ccompiler.py: 'gen_lib_options()' now takes 'runtime_library_dirs'     parameter   * in unixccompiler.py and msvccompiler.py: now pass     'self.runtime_library_dirs' to 'gen_lib_options()', and define     'runtime_library_dir_option()' (although in msvccompiler.py it     blows up with a DistutilsPlatformError right now!)
295765630a Third attempt at documenting an installation scheme; this one feels like it could work--reasonably short and straightforward to document, but flexible enough that it will be able to handle more than just modules and extensions in the future.
bae57a88a6 Of course, I forget how to type long ago...
c59996e6b1 Added a method GetMediaNextInterestingTimeOnly, which is like GetMediaNextInterestingTime without asking for the duration (which is, according to qt docs, expensive).
1966004986 "write marshalled" --> "writes marshalled" (in docstring); noted by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
908670cdaa Oops, another in the same file; I should read the mail fully before checking in; sorry!
3e74c0d021 "intput" --> "input" (in docstring); noted by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
36cc6a2197 complete rewrite
f635abee3a simplify visitor walker class - remove postorder - remove protocol for automatically walking children based on visitor   method return value; now only walks if there is no method
b631b8ede5 fix list.append problems
e4d6293383 change name of Set method: items -> elements (avoids confusion with dict)
dee86c644e Script to annotate api.tex with reference count information.
def77e5346 AETransactionID was mistakenly defined as a short (it is a long). Fixed.
7ceab65468 Fix bogus error reporting on strptime: let PyArg_ParseTuple set exception. Also, wrap long line.
d0d366b5e6 Marc-Andre Lemburg: add declaration for PyUnicode_Contains().
d4d2684240 Marc-Andre Lemburg: Add tests for mixed use of char in string.
ee70ad1e52 Checking in the new, improve file.writelines() code.
d724b23420 Christian Tismer's "trashcan" patch:
96a45adf80 Fix typo in replace() detected by Mark Hammond and fixed by Marc-Andre.
403d68b484 Add sq_contains implementation.
ef93b87f1c Added Christian Tismer's patch to allow list.append(a,b,c) back -- with a twist: you have to define NO_STRICT_LIST_APPEND manually to enable multi-arg append().
570575b1ee Added encodings to the LIBSUBDIRS variable, so that they get installed. Noted by Michael Hudson.
7f1cd296c6 Tim Peters writes:
76bd689a8d VC++ project changes to add new Unicode files and modules. (I did this under VC++ 5.0 -- hope this doesn't break anything.)
a831cac7a8 Marc-Andre Lemburg: test script for Unicode implementation.
8f0c5a7742 Marc-Andre Lemburg: the maxsplit argument for split() and replace() now defaults to -1, not to 0.  Passing an explicit zero doesn't split or replace at all.
0612d84155 Module codecs -- Python Codec Registry, API and helpers.  Written by Marc-Andre Lemburg.
b5f2f1bb6f Marc-Andre Lemburg: support pickling Unicode objects, both in text mode ('V') and in binary mode ('X').
85eacecaa0 Marc-Andre Lemburg: add UnicodeType.
0229bf6001 Marc-Andre Lemburg: Unicode encodings.
21288edad0 Marc-Andre Lemburg: Add UnicodeError, derived from ValueError.
9ed0d1ef18 Marc-Andre Lemburg: Python Unicode integration proposal, version 1.2.
e141fd84e9 Marc-Andre Lemburg: add new Unicode-related files.
c7de91bf9c Marc-Andre Lemburg: Add _codecs and unicodedata modules.
5fccb7c58e Marc-Andre Lemburg: support pickling Unicode objects, both in text mode ('V') and in binary mode ('X').
2a70a3a8fc Module unicodedata -- Provides access to the Unicode 3.0 data base. Written by Marc-Andre Lemburg.
e2d67f98d1 Internal module _codecs -- Provides access to the codec registry and the builtin codecs.  Written by Marc-Andre Lemburg.
5bfc2eb697 Marc-Andre-Lemburg: The Unicode Database.
2d0f5f932a Marc-Andre Lemburg: add new unicode files
c94044c11d Marc-Andre Lemburg: add calls to initialize and finalize Unicode and Codec registry.
c279b53b4f Marc-Andre Lemburg: support marshalling Unicode objects (code 'u').
e826ef0a89 Marc-Andre Lemburg: support for Unicode strings; 'U' expects a Unicode object.
5aa88f097f Marc-Andre Lemburg: support for Unicode string literals (u"...", ur"...").
09095f3f61 Marc-Andre Lemburg: added new builtin functions unicode() and unichr(); changed ord() to support Unicode strings; added new exception UnicodeError; fixed a typo in doc string for buffer().
feee4b994f Python Codec Registry and support functions, written by Marc-Andre Lemburg.
86016cb482 Marc-Andre Lemburg: add new string token types u"..." and ur"..." (Unicode and raw Unicode).
4aa1e63e4c Marc-AAndre Lemburg: add new unicode files
4c08d554b9 Many changes for Unicode, by Marc-Andre Lemburg.
d57fd91488 Unicode implementation by Marc-Andre Lemburg based on original code by Fredrik Lundh.
603484d759 Unicode character type helpers, written by Marc-Andre Lemburg.
34a79115c5 Marc-Andre Lemburg: added gencodec.py - Create Python codecs from Unicode mapping files
fd9eed33aa Marc-Andre Lemburg: added declarations for PyObject_AsCharBuffer, PyObject_AsReadBuffer, PyObject_AsWriteBuffer.
bd7dfbc146 Marc-Andre Lemburg: include unicodeobject.h and codecs.h
99cc97109e Marc-Andre Lemburg: add PyExc_UnicodeError
d822518fa8 Unicode implementation by Marc-Andre Lemburg based on original code by Fredrik Lundh.
3094484106 Python Codec Registry and support functions, by Marc-Andre Lemburg.
ef2255b1dd Part of the Unicode checkin for Marc-Andre Lemburg. Some new configuration tests and a new option, --with-wctype-functions.
92f3377078 Catch up with change to CCompiler API: call 'create_static_lib()', not 'link_static_lib()'.
169f91b808 [from 2000-02-25] Second attempt at describing an installation scheme; this is the simplified scheme that Guido proposed.  Also already-obsolete, and saved only for posterity.
7c1e5f65e3 [from 2000-02-23] Description of the baroque and already-obsolete installation scheme that Fred Drake and I cooked up.  Only saved for posterity.
09fc542b27 Renamed 'link_static_lib() to 'create_static_lib()', and rewrote it create a static library (using lib.exe as found by '__init__()', hopefully through registry entries pointing to DevStudio).
036c805958 Renamed 'link_static_lib() to 'create_static_lib()'.
329e4be05a a simple client-server framework for executing code in a different process
c1ee39a99e There are a few places which can raise DistutilsPlatformError; make sure it's imported!  ;)
7d73b9eb18 Added Joe Van Andel's 'get_python_inc()', adapted by me to supply   the platform-neutral include dir by default and with Mac support. Added 'get_python_lib()', inspired by 'get_python_inc()'. Rewrote 'get_config_h_filename()' and 'get_makefile_filename()'   in terms of 'get_python_inc()' and 'get_python_lib()'. Changed '_init_nt()' and '_init_mac()' to use 'get_python_inc()' and   'get_python_lib()' for directory names.
add03b62fd Handles were never disposed. Added an AutoDispose(onoff) method to control this. Also added a Handle() function which is like Resource() but has auto-dispose on by default.
a17e0f1b61 A bunch of changes, primarily to command line argument parsing (inspired by Detlef Lannert).  Specifically,
34d11f0670 Fixed multi-arg appends.
9de988315a Override the Undo delegator to forbid any changes before the I/O mark. It beeps if you try to insert or delete before the "iomark" mark. This makes the shell less confusing for newbies.
6fbd1f85d9 replace : with =
ae1f3bd7bd rename the global IdleConfParser object from IdleConf to idleconf standard usage is now from IdleConf import idleconf
6b3edf0510 rename the global IdleConfParser object from IdleConf to idleconf standard usage is now from IdleConf import idleconf
ba23bed340 Tweak the goto file/line command (in the right button menu in PyShell and output windows) so that it if it doesn't succeed with the line at the cursor, it tries the line before that.  This is handy with tracebacks, where my natural tendency is to click in the displayed source line rather than in the file/line indicator just above it. Now I can indulge this tendency.
9611e0b462 Patch by Moshe Zadka: remove the string special case in PySequence_Contains() now that string objects have this code in their tp_contains.
9284a572bc Patch by Moshe Zadka: move the string special case from abstract.c here.
da2361ac1d Add tests for char in string -- including required exceptions for non-char in string.
2663c13c5b Sjoerd Mullender:
801296c3b9 Added a bunch of TODO items that recently came up in the idle-dev list. Also removed a bunch of items
fd6315ec7f If we're in the current input and there's only whitespace beyond the cursor, erase that whitespace first.  This avoids a particularly confusing case where hitting Return at the end of the command didn't do what it was expected to do -- because it wasn't considered to be at the end of the command.  Now it is.
e066134f48 Fixed inet_ntoa() docstring.
911d86693b Patch from Corran Webster <cwebster@nevada.edu> (tweaked for style by me): changed 'copy_file()' to use the native Mac file copy routine.
0eff87a570 Patch from Corran Webster <cwebster@nevada.edu>: add '_init_mac()'.
5091929c2c Added 'native_path()' for use on pathnames from the setup script: split on slashes, and put back together again using the local directory separator.
e2b4452d0c Added '_nt_quote_args()' to deal with whitespace in command-line arguments in a rather half-assed, but probably effective, way.
7344741117 test_contains output
24512e6a35 Test cases for __contains__ code, by Moshe Zadka.
e85c93f521 Sjoerd Mullender:
0c3208aa62 compiler command-line interface moved here from compiler.pycodegen
f728f9a13e import compile function form pycodegen
7fab23e9cb rename compile.py to pycodegen.py
8c78341f45 add a doc string import some useful functions from contained modules
9812e7bc6a fix import to refer to compiler package
abd7ebf70b revise arguments for addCode method on lnotab.  take several numbers that are internally converted to chars, rather than taking a string.
fa974a9d06 change node Classdef to Class
ed9586174d factor out the tree walking/visitor code that was in compile.py
9cb083b957 Defer all the work to idle.py, which has recently become too complicated to copy in-line here.
6f3fceb8d8 Allow None as TimeBase value in TimeValue records (becomes NULL in C structure, used for delta-t values by quicktime).
bf32583084 string_join(): Fix memory leaks discovered by Charles Waldman (and a few other paths through the function that leaked).
7f3cfd50fa In getdef(), don't die when the section doesn't exist.
074d6e1f56 Don't use 1.6-isms (s.startswith()) -- we want to distribute this before 1.6 is out so it has to be compatible with 1.5.2.
9552665436 Rewrote 'newer_pairwise(): more natural (and incompatible) interface, simpler implementation.
32c4a8a0ee Serious overhaul of the C compiler interface and the two classes that implement it (so far):   * moved filename generation methods into CCompiler base class,     driven by data supplied by implementation classes   * moved a bunch of common code from UnixCCompiler to convenience     methods in CCompiler   * overhauled MSVCCompiler's compile/link methods to look and act     as much as possible like UnixCCompiler's, in order to regularize     both interface and behaviour (especially by using those new     convenience methods)
eb3f75e636 Don't pass 'keep_dir' to 'compile()' method of CCompiler -- no longer used.
4ba5da418c Don't pass 'keep_dir' to 'compile()' method of CCompiler -- no longer used. Don't assume that the 'libraries' and 'library_dirs' elements of the   build info dict are always lists.
272cbb4974 superceded by IdleConf/config.txt
e81f28b630 migrate to use of IdleConf and config files to set options
583abb8027 default to cwd if os.environ['HOME'] does not exist
daca630e40 a ConfigParser for idle and three configuration files
820314ea95 allow comments beginning with ; in key: value as well as key = value
1b7a70fa52 Fixed parameters to a few time and timebase calls: InOut parameters were inadvertantly seen as out-only.
6dc8ce9108 Added PutPixMapBytes() and GetPixMapBytes() functions that allow getting at pixmap data. Added an as_GrafPort() method to be able to use a GWorld as argument to routines that expect a GrafPort.
484be6152f Added methods getdata() and putdata() to obtain the data in a bitmap.
9428fa607b Patch by Tim Peters:
56359f591b Typo fix.
96182d7b68 Fixed 'mkpath()' to accept empty string silently (it's just the current dir). Fixed all DistutilsFileError messages to wrap file/dir names in quotes.
63c2b250ef paren matching extension.  warning: in current version of IDLE, can not run this extension and CallTips extension at the same time.
98b286c217 A module to parse/generate MediaDescription handles as used by QuickTime. Only generic, video and audio implemented for now.
0b55670968 Mark discovered a bug in his patch: he didn't *use* PyExc_WindowsError in PyErr_SetFromWindowsErrWithFilename() like he intended to... :-)
76ec0d6d76 Renamed 'build_lib' command to 'build_clib':   * replaced build_lib.py with build_clib.py   * renamed the class in build_clib.py   * changed all references to 'build_lib' command in other command classes
3ce77fd05e Changed '__rcsid__' to '__revision__'.
60f64330d1 If the "build_lib" command built any C libraries, link with them all   when building extensions (uses build_lib's 'get_library_names()' method). Ensure that the relative structure of source filenames is preserved in   the temporary build tree, eg. foo/bar.c compiles to   build/temp.<plat>/foo/bar.o.
833dfd52e5 Added command description. Added 'build_clib' and 'build_temp' options (where to put C libraries   and where to put temporary compiler by-products, ie. object files). Moved the call to 'check_library_list()' from 'run()' to 'finalize_options()'   -- that way, if we're going to crash we do so earlier, and we guarantee   that the library list is valid before we do anything (not just run). Disallow directory separators in library names -- the compiled library   always goes right in 'build_clib'. Added 'get_library_names()', so the "build_ext" command knows what   libraries to link every extension with.
49ffce173e In the 'compile()' method: preserve the directory portion of source filenames when constructing object filenames, even if output_dir given -- eg. "foo/bar.c" will compile to "foo/bar.o" without an output_dir, and to "temp/foo/bar.o" if output_dir is "temp".
b48bc17d10 Second attempt to fix the ctermid_r/tmpnam_r warnings: define USE_CTERMID_R and USE_TMPNAM_R at the top of the file and refer to them later; this catches a second reference to 'tmpnam_r' that I didn't spot first time around.
9217fcbb38 Fix compiler warning: only use "_r" form of 'ctermid()' and 'tmpnam()' when building a threaded Python.
c6e87a2925 Got rid of silly "123456789-..." lines in comments.
f1146572dd In compile/link methods: ensure that the directory we expect to be writing to exists before calling the compiler/linker.
013f0c8636 Added 'mkpath()' method: convenience wrapper around 'util.mkpath()' that adds the compiler objects 'verbose' and 'dry_run' flags.
611850bbb3 Added call to 'ensure_ready()' on the command object in 'Distribution.find_command_obj()'.
585df89f60 Added 'get_platform()' to construct a string that identifies the current platform, using 'os.uname()' or 'sys.platform'.
e51d69efb0 Build reorg:   * 'build_dir' -> 'build_lib', which by default takes its value     straight from 'build_lib' in the 'build' command   * added 'build_temp' and 'inplace' options   * change 'build_extensions()' to put object files (compiler turds) in     'build_temp' dir   * complicated the name-of-extension-file shenanigans in     'build_extensions()' to support "in-place" extension building, i.e.     put the extension right into the source tree (handy for developers)   * added 'get_ext_fullname()', renamed 'extension_filename()' to     'get_ext_filename()', and tweaked the latter a bit -- all to support     the new filename shenanigans
42a3bf564a Build reorg:   * 'build_lib' -> 'build_purelib'   * new 'build_lib' and 'build_temp' options   * use 'get_platform()' to initialize 'build_platlib' and 'build_temp'
e691651682 Build reorg: change 'build_dir' option to 'build_lib'.
61b705a570 Patch by Fred Gansevles (the module's original author).
43713e5a28 Massive patch by Skip Montanaro to add ":name" to as many PyArg_ParseTuple() format string arguments as possible.
a9b2b4be26 Remove some redundant logic from walk() -- there's no need to check for "." and "..", since listdir() no longer returns those.
1b6d21bb3e Correct type error in getopt.error handling code.
aacf5ce1ad Script by Tim Peters to discover illegal append() calls.
67dd17f730 Fix multi-arg append().
15861b2a41 Update portability information for the spawn*() functions and related constants.  Someone will need to fill in information on the spawn*() functions that aren't listed.
39d3bfc4c2 Fix a typo in a comment
1ab41fc680 Fix comments relating to the specific regexs used to parse section and option names; errors noted by Greg Stein <gstein@lyra.org>.
619c33787b Patch by Piers Lauder, who writes:
c517b9b406 (Finally!)  Changes related to the ConfigParser/INI-file topics discussed on c.l.py last January.  Specifically:   - more characters allowed in section & option names   - if '=' is used to separate the option & value, the value can be     followed by a comment of the form '\s;'
048e6103f2 Drop the support level for stdwin a notch -- the contents of lib-stdwin is no longer installed.
01b3aa4d08 Fix use of list.append() with multiple arguments
98d9fd3e68 Simple changes by Gerrit Holl - move author acknowledgements out of docstrings into comments.
ee28c3a5ea Patch by Mozhe Zadka, for __contains__ (overloading 'in').  This adds an instance method instance_contains as sq_contains.  It looks for __contains__ and if not found falls back to previous behaviour. Done.
46c6b20392 Patch by Mozhe Zadka, for __contains__ (overloading 'in').  This patches PySequence_Contains() to check for a valid sq_contains field. More to follow.
cecb27a49c Patch by Mozhe Zadka, for __contains__ (overloading 'in').  This adds a new proc type (objobjproc), a new slot sq_contains to PySequenceMethods, and a new flag Py_TPFLAGS_HAVE_SEQUENCE_IN to Py_TPFLAGS_DEFAULT.  More to follow.
84a74595f7 Patch by Gerrit Holl to avoid doing two stat() calls in a row in walk().
0ba33002e1 Fix a typo in Barry's checkin. Reported both by Gerrit Holl and Mark Favas.
d28de23bda Fixed a multi-arg append() call, discovered by Mark Favas. Also removed some unnecessary backslases (inside parens).
7733e12c9c Two buglet fixes.  Peter Funk caught the bug in make_escapes:
c8f0892d12 Changes submitted by Peter Funk (some fixes/additions by B.Warsaw) to make pygettext more compatible with GNU xgettext, specifically:
abc52169b7 The "Distributing Python Modules" manual; currently empty (I'll get to it Real Soon Now(TM).
7a0620c3a5 Try to deal with pre-1.5.2 IOError exception objects.
4f08e4facb Unfinished, untested implementation of the lovely baroque installation scheme cooked up by Fred Drake and me.  Only saved for posterity (whoever posterity is), as it is about to be ditched in favour of GvR's much simpler design.
b6f6e95ed2 Better fix for mpzmodule problem reported by Peter Funk: just use     mp_bits_per_limb with GMP 2.0
7d3f27c090 Changes inspired by Randall Hooper to allow callbacks when an OptionMenu is modified.  Somewhat rewritten and elaborated by myself.
02a1c40051 Pat Knight:
f7221c3a7d Test case for fork1() behavior. Only the main thread should survive in the child after a fork().
4985e40939 Delete references to _SC_AIO_LIST_MAX; it appears that that symbol was just a typo in some Linux header; the real symbol is _SC_AIO_LISTIO_MAX.
e6674e6fc6 Gerrit forgot to remove the "import string".
a395ced424 Gerrit Holl's patch to move attribution from the docstring to a comment.  <gerrit@nl.linux.org>
2341794667 Fix a couple broken append() calls, spotted by Tim.
b4624b94a8 Fix a couple dozen broken ci.append(x, y, z) calls, spotted by Tim.
3af7b050a3 Fix a broken r.append(name, value) call, spotted by Tim.
c00a938be8 OKOK, Greg's right, I should've used the :name option in the argument format strings.
e7ef74dbf8 Peter Funk:
4aa24f9979 Made all list methods use PyArg_ParseTuple(), for more accurate diagnostics.
d5062babed Moshe Zadka: Added docstrings to tkSimpleDialog.py
4840112121 Fix from est@hyperreal.org: missing initialize in 'find_defaults()'.
9811861e3c Mark Favas discovered this: getatime() accidentally returned the MTIME! This fixes PR#211.
19ce91be92 Piers Lauder:
5ebfa2ae9f Add tests to exercise sequence operations (multiplication, indexing,     slicing) using long integers
0f223d2418 Allow using long integers as arguments to PyObject_GetItem(), _SetItem(),     and _DelItem(). In sequence multiplication by a long, only call PyErr_Occurred() when the     value returned is -1.
2194b165db Allow using long integers as slice indexes
52fccfda5b dict_has_key():  Accept only one parameter.  PR#210 reported by                  Andreas Jung <ajung@sz-sb.de>.
0baf773c44 Added entry for libtabnanny.tex.
3c227eef91 Added dependency on libtabnanny.tex.
155348be33 Initial version from Peter Funk <pf@artcom-gmbh.de>, with minor consistency changes and a note that the API may change in the future.
6e0a28f6cf Deleting tabpolice.py; it was superceded by tabnanny.py long ago.
a02c898e69 Moved tabnanny.py to standard library status.
dc6883365b Added tabnanny.py, by Tim Peters, formerly from Tools/scripts, to the standard library.  Added some comments:
89af0776cd This branch is for 1.6 & forward.
8c95c27c4c Added a new command: Check module (Alt-F5) It does a full syntax check of the current module.  It also runs the tabnanny to catch any inconsistent tabs.
772dd417f7 satisfy the tabnanny (thanks to MH for noticing the problem)
0dd7507e51 What used to be tp_xxx4 is now tp_flags; set it to Py_TPFLAGS_DEFAULT.
145c26e3d3 Remove comment that Guido agree's doesn't make sense: PyEval_EvalCode() is *not* a "backward compatible interface", it's the one to use!
c29e41df44 Script to help locate markup that LaTeX2HTML has a problem with.
584b16a1f3 Mark pointed out a buglet in his patch: i < _sys_nerr isn't strong enough, it could be negative.  Add i > 0 test.  (Not i >= 0; zero isn't a valid error number.)
957d07a159 Added FreeMem, MaxBlock and CompactMem calls. The values returned by these are lower bounds in the Python case (as malloc doesn't return memory to the heap) but they can be used to decide when to give low-memory warnings.
42b9bc7a7d add TODO section
fc9d2252af Patch from Vladimir Marangozov <marangoz@python.inrialpes.fr> 	The same problem (mixed mallocs) exists for the pcre stack. 	The buffers md->... are allocated via PyMem_RESIZE in grow_stack(), 	while in free_stack() they are released with free() instead of 	PyMem_DEL().
0c7822e832 Patch from Vladimir Marangozov <marangoz@python.inrialpes.fr>: 	The buffers self->regex and self->regex_extra are allocated in 	pcre_compile() and pcre_study() via pcre_malloc, but are released 	via free() instead of pcre_free.
3bb578c128 reduce fsimp coupling: provide fs_imp param to ImportManager constructor,   add clsFilesystemImporter class attribute, alter handling of suffix list convert suffix importers to funcs rather than instances remove backwards compat code: Importer.install and 2-tuple get_code()   result values
d4f1d2074e shift demo importers to importers.py (destined for Demo/ ?) switch to isinstance() rather than direct type comparisons removing chaining concept update ImportManager.install() to take an optional namespace to install   itself in. this will be useful for setting up rexec environments. minor comment nits
18c05f240e Changed all references to command methods 'set_default_options()' and 'set_final_options()' to 'initialize_options()' and 'finalize_options()'.
e01149cbe8 Renamed 'set_default_options()' to 'initialize_options()', and 'set_final_options()' to 'finalize_options()'.
4c96db1a65 Changed references to the command class 'options' attribute to 'user_options'. Related docstring changes. Unrelated comment changes.
bbeceeaf9a Renamed all 'options' class attributes to 'user_options'.
592f28272e Command classes are now named identically to their commands, so reflect this in 'find_command_class()' method.
1993f9ad0e Renamed all command classes so they're exactly the same as the name of the command itself: no more of this "FooBar class for foo_bar command" silliness.
e1b1c94a0c Changed 'dist' to 'sdist'.
a82122b887 The 'sdist' command to create a source distribution.  This is derived from the old 'dist' command, but the code for dealing with manifests is completely redone -- and renaming the command to 'sdist' is more symmetric with the soon-to-exist 'bdist' command.
3d6b023f5c The 'dist' command is dead -- long live the 'sdist' command!
efd0694a2d changes to _lookupName - removed now (happily) unused second arg - need to verify results of [].index are correct; for building consts,   need to have same value and same type, e.g. 2 not the same as 2L
3ec7e2c4be the previous quick hack to fix def foo((x,y)) failed on some cases (big surprise).  new solution is a little less hackish.
7708d697ee add varargs and kwargs flags to Lambda nodes
873bdc18e4 satisfy the tabnanny fix broken references to filename var in generateXXX methods
1e862e8a37 Update the description of int() to include the radix parameter; omission noted on c.l.py by Aahz Maruch.
ef0b5dd080 Typo in a comment:  "wheter" --> "whether"
f36b1823c4 Patches by Piers Lauder.
99aabe30ce Add primitive customization of window size and font. A few alternative selections can be made by changing "if 0" to "if 1".
795e189d28 Patch by Mark Hammond:
65a75b0d52 Changes by Mark Hammond related to the new WindowsError exception.
db0c9f7f5b Declarations related to new WindowsError exception.
1efac33755 Added WindowsError, for Mark Hammond's extensions.
8006d316bc Added docs for new crc32() function.  By Jim Ahlstrom.
cba04366a4 Added test for new crc32() function.
7d47c9e38a Patch by Jim Ahlstrom to add crc32, a useful checksum function (e.g. used for ZIP files).
44cf8ef521 The 0.5 release happened on 2/15, not on 2/14. :-)
ad9a86fb1c support for arglists with implicit tuple unpacks - added a number of support methods to generate code just before the   body - hack protocol for communicating number of args to PyAssembler
3d9f5e4de2 more robust assignment of lineno for keyword args get the lineno from the name of the keyword arg
2ce27b223b fix argcount generation for arg lists containing tuple unpacks this is sort of a hack
65d4ea05d2 add flatten helper function
4f6bcd80fc finish first impl of code generator
1ebba96871 fix creation of Ellipsis node
410e840c85 add a little debugging support when new.code raises SystemError
ae3d79208f no real change -- testing syncmail
d603dee4a3 add line numbers to nodes in the except clause (when possible)
ca1ad182f2 tidy up tryexcept and tryfinally nodes
6e83cacb18 A bit restructured.
dec0b68d68 Oops, somehow the initial checkin was botched. :-(
83d4657a06 Added some clarifications.
90ad8589b1 Temporarily add a copy here for easy distribution.
17ae233edc More changes.
1d841fec12 Notice status back and stack viewer.
ec73dc6700 Support for Moshe's status bar.
17752f7c4b Status bar code -- by Moshe Zadka.
2bb8e72046 Adding the old stack viewer implementation back, for the debugger.
b658469873 New stack viewer, uses a tree widget. (XXX: the debugger doesn't yet use this.)
553fa4432a Correct a typo and remove an unqualified except that was hiding the error.
f801f3b05c Add an XXX comment about the ClassBrowser AIP.
0b5b2c89d7 Updated change log.
46ffbecf94 News update.  Probably incomplete; what else is new?
6d3be50653 Updated for pending IDLE 0.5 release (still very rough -- just getting it out in a more convenient format than CVS).
b4b8381f4f Tiny addition.
fb4574e320 In response to one particular complaint on edu-sig, change some error messages from "OverflowError: integer pow()" to "OverflowError: integer exponentiation".  (Not that this takes care of the complaint in general that the error messages could be greatly improved. :-)
9e1cd688b5 edit a doc string (real intent is to test out rsync install)
1991ddc3e1 Make multiplying a sequence by a long integer (5L * 'b') legal
a46fb3841b get rid of spurious print
967e509a81 Patch by Gerrit Holl:
d962878309 Patch by Gerrit Holl:
126960b744 looks like everything is working except for try/except (pystone compiles correctly)
17988d2a17 LeftShift & RightShift: fix reprs, change attr names to left and right (so they are common with other binary ops)
b217687a6c Fix the question marks next to the expansions of some of the colorspace name abbreviations, based on email from Gerrit Holl <gerrit.holl@pobox.com>.
bf6267e6f8 rename several of the generic attribute names for nodes. new node attrs are: Exec: expr, locals, globals Dict: items Assert: test, fail
42907790b6 (), [], and {} should not be represented as constant expressions, they should be calls to BUILD_ ops for these types with no arguments
e817acd957 Patch by Jack Jansen:
a50581228e split compile.py into two files add StackDepthFinder (and remove push/pop from CodeGen) add several nodes, including Ellipsis, Bit&|^, Exec
3050d51571 change MODULE_NAMESPACE/FUNCTION_NAMESPACE stuff to have a single flag named OPTIMIZED, which matches compile.c and makes more sense for classes
dae108c6d8 And added a note about needing two "cvs update"s.
90cf4917de Explained that you have to checkout the Mac portion of Python in a separate folder and then move it to the Python hierarchy.
76d01b820c add support for Lambda nodes
5de8cee73f Ditched '_find_SET()', since it was a no-value-added wrapper around   'get_msvc_paths()'. Renamed '_do_SET()' to 'set_path_env_var()', tweaked docstring, and   cosmetically tweaked code. Stylistic changes to MSVCCompiler constructor (variable renaming   and type consistency).
699880931e Latest patch from Thomas Heller/Robin Becker:   * tweak my docstrings   * fix None returns to empty list   * reshuffle responsibilities between '_find_exe()', '_find_SET()', and     the MSVCCompiler constructor -- now the constructor worries about     fetching the version list and determining the most recent one   * added "/W3" compile option Also, I added/tweaked some docstrings.
4eb504c2af add loop handling via
95b8614353 add an __len__ to Set and Stack
41d84631ba Document the API changes to the nntplib module (exceptions become classes, NNTP.__init__() grows a new optional argument to set reader mode on the server).
9dd7872945 Added new exception classes:
9abc25e4b5 Enable -t when compiling Python library modules in libinstall (.pyc version only).
3e0910c10c add namespace attr to CodeGenerator, can be either MODULE_NAMESPACE or FUNCTION_NAMESPACE.  initialize in __init__ and reset in generateFunctionCode.
13a2c279c5 Untabify to pass the -tt test.
857c4c36b9 Detabify.
8574378ad4 In AskYesNoCancel() treat the "yes" and "no" buttons the same way as the cancel button (i.e. an empty label hides the button).
ad892dc80d Make this pass the -tt test.
62e3393e4d Stylistic changes to the registry-grovelling code: code formatting, changed function names, dbetter (hopefully) ocstrings, and comments.
10ca82b57c Typecheck 'output_dir' argument to compile/link methods.
968d883be5 Path from Thomas Heller: resurrect the .def file kludge while preserving the /export option mini-kludge.
4ba9b2e3b6 Patch from Thomas heller:   * don't need to mention python<ver>.lib -- it's done by a pragma   * add debug flags for compile and link, and use them   * fix 'link_shared_library()' to pass everything to 'link_shared_object()'   * change filename when shared object with debug info (ugh)
5e0ce53e0e add ExampleASTVisitor: * prints out examples of nodes that are handled by visitor.  simply a   development convenience
69926eaee0 add remove method to set
e8c6ce4684 Added 'debug' option, and changed compile/link calls to use it.
324620015d Added 'debug' option (just there for 'build_ext' and 'build_lib' commands to fallback to if the user doesn't set it for those commands.
386b84439f Added 'debug' flags to compile and link methods, and added dummy code for   someone who knows Windows/MSVC++ to come along and add the right flags. Comment noting that 'link_static_lib()' signature is inconsistent with   the other compiler classes (uh-oh!)
ba233fbe92 Added 'debug' flags to compile and link methods, and modified code to add '-g' flag to compiler/linker command lines when it's true.
3c045a5766 Added 'debug' flag to compile and link method signatures. Doc fix: several paragraphs under 'link_static_lib()' moved to   'link_shared_lib()', where they belong.
402456020b add optional verbose arg to walk function.  it overrides the global VERBOSE setting for the ASTVisitor
156a975476 make all unary operators have a single child node called expr
1851901a05 add spaces to comparison names is not and not in to match dis
53187f32eb now produces valid pyc files for a least a trivial subset of the language.
aa9d2d6123 constants from transformer
9605c11c4c move constants out of transformer so that they can be shared with ast add varargs and kwargs attributes to Function nodes
69e2c6efbb get_config_h_filename():  Support NT as well as Posix systems.
1b9c6f7788 Revised version (thank to Thomas Heller and Robin Becker) that tries a lot harder to find the MSVC compiler (mainly by using the registry).
f0219ba290 Ditch .def file kludge for (much smaller) /export option kludge.
da8d216eb2 Protect against core dumps in gdbm: don't allow access by key once the database is closed.  Raise gdbm.error instead.
a710d6e20c Added test case for accessing gsbm database by key after it's closed; it should raise gdbm.error.
ef6ceb62bd Same patch (also by Mark Hammond) for this straggler project file as for the other projects, to move the x86 project names back to what they were.
1bea7ab7bd Added 'libraries' option for use by the 'build_lib' command. Typo fix.
5f7c18e816 Run the 'build_lib' command before building extensions, if necessary.
aaf27ee07b New command to build C (and C++, hopefully) libraries needed by extensions in the current distribution: motivated by PIL's libImaging.
c1854673e2 Tweaked various comments, docstrings, and error messages.
0d40ba4cdf Patch from Paul Sokolovsky <Paul.Sokolovsky@technologist.com>:
0fdffcf916 rapid evolution towards producing real .pyc files (even though I don't handle most of the language syntax yet)
1fdae12c93 Added a simple test program to disassemble a file, invoked as __main__.
4b8c6eaf8b Actually, the previous batch's comment should have been different; *this* set of patches is Ka-Ping's final sweep:
e7b146fb3b The third and final doc-string sweep by Ka-Ping Yee.
54f22ed30b More trivial comment -> docstring transformations by Ka-Ping Yee, who writes:
8b6323d3ef checking in initial weekend's work
106a02da94 make p2c a package
f968e8545d three files from the p2c cvs tree.  the message here indicates the revision number the p2c cvs tree.
7f0fb0b01e Improved an error message. Announce when we start building each extension (better feedback).
ef6f515d49 Changed 'compile()' method to compile files one-at-a-time -- gives better feedback and, theoretically, the opportunity to set compiler flags on a per-file basis.
4310debbd8 Mark Hammond renames the x86 projects back to what they were named before the patch by Trent Mick.  Since he now also works for ActiveState, I suppose he overrides Trent. :-)
2bb43a20ce The dircmp module is now obsolete.
d89ffebd85 These modules are now declared obsolete.
ff484183de According to Harri Pasanen, the Solaris+gcc test for LINKFORSHARED needed an adaptation for the latest gcc -- we need to grep stderr as well as stdout for the magic string BFD.  (Does anybody know what BFD means?)
9c6ba9b598 According to Harri Pasanen, the Solaris+gcc test for LINKFORSHARED needed an adaptation for the latest gcc -- we need to grep stderr as well as stdout for the magic string BFD.  (Does anybody know what BFD means?)
43265beff9 # module filecmp # combo of old cmp, cmpcache and dircmp with redundancies removed # # bugs fixed: #   dircmp.dircmp was not ignoring IGNORES #   old stuff could falsely report files as "identical" when contents actually differed # # enhancements: #   dircmp has a more straightforward interface #cmp enhanced by Moshe Zadca #dircmp enhanced byGordon McMillan
75a7959335 In _fileobject, optimize read() a bit (it could be really slow), and remove "import string" -- use string methods instead!
823e91c767 Optimize abspath() slightly for the case that win32api can't be imported; in that case, abspath is replaced by a fallback version.
5606801b64 Make read() and readlines() conform more to the file object interface: the default arg for read() is -1, not None, and readlines() has an optional argument (which for now is ignored).
4acc25bd39 Mass patch by Ka-Ping Yee:
113e70efa2 Patch from Joe Van Andel: fix arg to % operator in warning.
a0ca3f24f9 Comment fix. Always use normalized (with os.path.normpath()) versions of prefix and   exec_prefix.
3c8baedaf8 Sjoerd Mullender writes:
a664dbbff8 Added docstring to crypt.crypt() based on the documentation.
b3d3956e01 The initialization of posix_putenv_garbage should only be done when it is defined...
d1466b968f Allow either README or README.txt as a "standard file".
a002edc85b Fixed broken list extend in 'copy_tree()'.
37bc815053 Added 'description' class attribute to every command class (to help the   '--help-commands' option). Shuffled imports around in a few command modules to avoid expensive   up-front import of sysconfig (and resulting delays in generating list   of all commands).
4c67936e4e Added 'dist' command.
f0fd6175b3 Improvements to the help system:   * "--help" can now come either before or after particular commands     to get help on and can give help on multiple commands, eg.     "--help install dist" gives help on those two commands   * added "--help-commands" option, implemented by the 'print_commands()'     and 'print_command_list()' methods
7478a4832a Added missing run of corresponding 'build' command.
4377a1a2c5 Big oops: macfs has always been using a private exception but calling it mac.error. It now uses MacOS.Error (the OSErr valued error) and advertises that too. This fix shouldn't break anything, I guess.
0475104787 Hmm, the project wasn't a 5.3 file, despite the log msg. Now it is.
6448c35248 Build the Nav module too.
3d7575406f If there's an error in an fsspec argument raise MacOS.Error, not ValueError.
a4596a4ba5 Trent Mick: Setup PC configuration so that MSDEV chooses the x86 release project config as the default.
ecb84f8e75 Don't insert extra indentation before <title> elements.
bffd683f73 The rest of the changes by Trent Mick and Dale Nagata for warning-free compilation on NT Alpha.  Mostly added casts etc.
e0a928dc1e Fix some broken links.
72ca1b3536 Changes by Trent Mick (of ActiveState) and Dale Nagata to support building for NT Alpha as well as NT x86.
f158887505 Two patches from Jack Jansen:
6d7e47b8ea EXPERIMENTAL
331f19e894 Change two occurrences of type(x) <> types.CodeType into isinstance(x, types.CodeType).
fca049d952 Made all textfields in message and question boxes minimal height and invisible, and use AutoSizeDialog() and ShowWindow() before doing interaction.
9f200cbaa6 Fix indentation bug.
3b49c9babd Catch OSError from 'spawnv()' in '_spawn_nt()'. Tweaked error messages in '_spawn_posix()'.
01f5215828 Removed /GD switch -- currently ignored by MSVC.
8dbf681a97 Added compiler flags suggested by Thomas Heller: optimize, use multi-threaded RT library.
1b3a9af5cf Added missing import. Fixed 'make_release_tree()' to copy files if 'os.link()' doesn't exist.
cbeca7b408 Added code to use Jim Ahlstrom's zipfile.py module if the external zip command wasn't found or failed.  (Code supplied by Thomas Heller <thomas.heller@ion-tof.com>.)
c8a95c8d5e Fix library filename methods -- there is no 'lib' prefix under DOS/Windows.
c27d800251 Always run sys.prefix and sys.exec_prefix through 'os.path.normpath()' before storing or using.
7c463ef362 Ditch unneeded imports.
1d2b23ef22 Fix by Nick Russo in processing of timezone in test program; the ParsedDate didn't have the correct day of week.
947a0fa4f9 According to Ron Bickers, and with apparent approval of Chris Herborth, the code in list2set() that sets max unconditionally to 0 should not be used on BeOS.  So be it.  Anybody using BeOS, please test!
5c6634c807 - Actually _implemented_ SetFolder() - Fixed StandardPutFile: prompt, default - Check explicitly for userCanceledErr, pass other Nav.error exceptions through.
2c6cf97255 Handling of defaultLocation argument was wrong, causing a crash when used. Fixed.
3d6163ad2d List objects obtained through as_List(resource) are not auto-disposed upon Python object freeing.
8242c9e4c4 Get/set sys.path initializer in new appearance way.
a400d8a96d Fix a bug in exec_statement() noted incidentally by Tim Peters in PR#175 -- when exec is passed a code object, it didn't sync the locals from the dictionary back into their fast representation.
b2b42ddcb1 The functions asctime() and mktime() are documented to take a 9-tuple only.  Through some mysterious interaction, they would take 9 separate arguments as well.  This misfeature is now disabled (to end a difference with JPython).
687ef6e70b On Linux, one sometimes sees spurious errors after interrupting previous output.  Call clearerr() to prevent past errors affecting our ferror() test later, in PyObject_Print().  Suggested by Marc Lemburg.
7b7679eb79 'newer_group()' can now deal with missing files, in a way specified by the 'missing' parameter.
c9f3187be2 Abstracted '_fix_link_args()' out of 'link_shared_object()'. Added 'link_static_lib()' method, and 'archiver' and 'archiver_options'   class attributes to support it. Added 'link_executable()' method, and 'ld_exec' instance attribute   to support it. 'newer_group()' is now able to handle missing files, so we don't have   to kludge it by catching OSError when calling it. 'object_filenames()' and 'shared_object_filename()' now take 'keep_dir'   flag parameters. 'library_filename()' and 'shared_library_filename()' now respect   a directory component in the library name. Various comment updates/deletions.
5baf1c2111 Removed a bunch of irrelevant parameters from 'link_static_lib()' signature. Added 'link_executable()' signature.
e9436da686 Typo fix: 'file.warn' should have been 'manifest.warn' in a couple of places.
d08833ff1d Two constants were missing.
205b435c50 Added initializer routine optionally to be used as PEF fragment initialization routine, which allows us to get at our own resource fork even if some shared library init routine opens other resource files.
d2783da63e The correct RFC to reference is RFC-1521 (MIME part one), not 1421 (PEM).
f23aa1ee9f redesign/rebuild around the ImportManager concept.
bb05b2520d CW Pro 5.3 projects.
e1a79b9b42 setup_confname_table():  Use size_t instead of int for an index when         building the dicts used to inform the user about the defined         constants when using the *conf*() APIs.
f7ac1d32f0 Nasty error: handle parameters are passed by _address_ to SetControlData.
1c252bfe39 Renamed USE_MAC_DYNAMIC_LOADING to HAVE_DYNAMIC_LOADING
e721f3ddd7 Modified for new dll import source organisation by Greg.
c9b1e90cc8 Modified for appearance.
b9247d37ba Oops, forgot & in ParseTuple argument in ControlGetDataHandle.
6dc2b57c73 skip CVS folders when building the Scripts menu -- jvr
71017e5b6a updated copyright string
57072eb79f Implement the other easy thing: repr() of a float now uses %.17g, while str() uses %.12g as before.
9093834acb Added item about specific missing entries in the C API manual.
24073eaf2b changed the "method find" algorithm so the function/class/method popup menu also works with space-indented source files -- jvr
121ee2722e long_format():  Now takes a third parameter, addL; iff true, a                 trailing 'L' is appended to the representation,                 otherwise not.
db1bd5c230 Revise tests to support str(<long int object>) not appending "L".
b06007a3ba Added a reference to oldPICTbrowse.py.
3b23ed9ba6 Converted to Appearance and using a List control in stead of manually creating the List and putting it in a useritem. The old version is in oldPICTbrowse, for documentary purposes.
6a6db0724c Partially converted to Appearance, the dialog still has the old ugly layout and interaction.
d2bf68fdb9 Converted to Appearance.
a1a0fef2ea Unified handle-conversion scheme to   handle = Ctl.as_Resource(ctl)   ctl = Ctl.as_Control(handle) and similarly for List, Menu, TE. The old handle.as_Control() methods are still there for backward compatability.
7b912120ca Adjusted apply() docstring based on comments from Gerrit Holl <gerrit.holl@pobox.com>.
fbff97a73b Don't call len() if the value is already cached!  Caught by Gerrit Holl <gerrit.holl@pobox.com>.
8972dfd58e For ZlibError and ZLIB_VERSION, only attempt to add entry to the module dict if the inserted object isn't NULL (basic defensive programming!).
96a8fb7e99 Cleanup patches from Greg Stein:
6a90b5e4d0 Removed a couple of items that got done(!).
76e6da38c0 Document GetoptError and label error an alias.
80c33e562d Contribution from Gerrit Holl:
b9bdfc6a23 Document 1.5.2+ aspects of the NotANumber exception.  (Note that this is in the development branch, not the maintenance branch!)
89ab163479 Document that the |mode| parameter to open() is optional and explain how the default value is determined.
96b5ee88ee Vladimir Marangozov:
5731575449 Added setargv.obj to the link link. This causes * etc. on the command line to be expanded, link on Unix.
90e0f57cea Add dynload_win.c to project.
9f9fa6d0c9 Add HAVE_DYNAMIC_LOADING. Define Py_DEBUG when compiling in debug mode.  (Is that a good idea?)
95288862bb For Windows, need to add #include <windows.h>.
313a3e36e7 Fix typo in docstring: wbites -> wbits
e97ee18115 Changes to auto-detect the correct dynload_<platform>.c file. NOTE: Windows, Mac and OS/2 build procedures must be adapted manually!
6f13e9abc9 Add line for HAVE_DYNAMIC_LOADING (result of editing acconfig.h).
85d8be5df0 Define HAVE_DYNAMIC_LOADING.
db3ec1b21e Support for selecting the correct dynload_<platform>.c file.
ed1170e49f In _PyImport_Init(), dynamically construct the table of legal suffixes from two static tables (one standard, one provided by the platform's dynload_*.c variant).
9f65081d90 Some rearrangements for the importdl.c restructuring.
6ea9092625 Moved most of the platform-specific code to dynload_<platform>.c files. (A few nite remain, these will probably disappear soon.)
22a1d3671b The old platform-specific contents of importdl.c, broken down into one file per platform (really: per style of Dl API; e.g. all platforms using dlopen() are grouped together in dynload_shlib.c.).
72badf5404 The cleanup code in com-init() at label fail_0000 should remove c_varnames, not c_lnotab.
e9c69bc53e Support keys that have a Handle as parameter, by using the new GetControlDataHandle and SetControlDataHandle methods.
1f9249cea9 Added {Get,Set}ControlDataHandle methods. These are {Get,Set}ControlData for keys that expect a Handle, and have a ResObj as parameter.
54b9ce1c4f StandardFile compatability routines. For the time being calling macfsn._install() will install these in macfs (if Navigation is available).
97e0ae25aa Increase applet minimal memory size by a megabyte.
77abc43486 Added a line about passing None as eventProc to the docstring to get movable dialogs.
cd3d7ccd4f PyMac_BuildOptStr255 and PyMac_BuildFSSpec added to exports.
b734adef4b Added PyMac_BuildOptStr255, which returns None on a null pointer.
a07431f0ce Finished (I think), but only very lightly tested. Should now have full interface: all calls, callbacks, arguments, etc. Also added docstrings.
8542b2e0af Project for Nav module.
da261e6dc6 Added Nav
e1a45b3f3d Allow keyword arguments, and the dialog is now actually shown. No way to get at the result yet, though:-)
286538719e Added Nav module
4e08379891 Patch and new file by Geoff Furnish for C++ compilation.
9501219303 Patch by Geoff Furnish to make compiling with C++ more gentle. (The configure script is regenerated, not from his patch.)
ec3caccb17 Regenerated after new acconfig.h.
c6f6df3118 Correct stupid typo (HAVE_GETHOSTBTNAME).
e91a29d2f3 Navigation Services module. Started from scratch, as Joe's module exported too little for my needs.
9d46b9ce97 When emitting a command-line error message, *say* it's an error.
ad83f04086 Catch errors from 'rmtree' and emit a warning.
88f6ca2ce9 Document getgroups(), getlogin(), fpathconf(), pathconf(), pathconf_names, confstr(), confstr_names, sysconf(), sysconf_names.
bec628d4bc Rip out the code to check the ordering of the tables used to map strings to integers for the *conf*() functions.
c15e43a2da Fixed menu glyph stuff. Use MenuEvent in stead of MenuKey.
8a9fdff6d7 Added kind resources (in US-english and dutch, sigh).
d86ed29f44 Added table entries for Irix 6.5 names for confstr()/sysconf()/ pathconf() names, from Sjoerd.
1a5eb04d47 Fixed buglet in Application.do_suspendresume(), it took the wrong flag to determine suspend/resume -- jvr
153a27ceb2 do_strip(): Fixed cut-and-paste error; this function should check for zero arguments (found by Marc Lemburg).
cd97576184 Only set msg.fp to None when there are no extra arguments; if there are, we must keep the file around so we can print the body.
12c6e2d497 Added support for getlogin(); does *not* use getlogin_r() where available since the interface is poorly defined on at least one major platform (Solaris).
f581db15a3 Remove test for getlogin_r(); the interface is not clearly defined, at least on Solaris (sometimes it's Unix98, sometimes it conforms to an early draft).
3bb3e5773b Added detection of getlogin() and getlogin_r().
b1b78d85d3 Bgen now understands more constant definitions, but that means that a few which are not parseable in Python have to be blacklisted.
13681b73b5 If a menu shortcut is a tuple in stead of a char it is a tuple (modifierkeys, char [, glyph]).
1836dbe22d Regenerated now that bgen can handle a few more constructs in constant definitions.
d16b5abc07 Markup consistency nits that Guido didn't check.  ;-)
5f7a28cdf8 Doc update from Piers Lauder see changes for imaplib.py version 2.16.
8c0622114b V 2.16 from Piers:
97798b1d47 Use 'search', not 'match', on filename pattern regexes.
71f00fb6df Removed debugging prints.
c968092d5c Added bindings for getgroups(), fpathconf(), pathconf(), confstr(), and sysconf().
35a092fece Added detection for getgroups(), fpathconf(), pathconf(), confstr(), and sysconf().
60429e055e Fixed the password dialog to use a password control.
a4deef82d5 C-style comments removed (again). AE stuff got some extra definitions (don't know why these weren't checked in).
30f2080475 Methods {Get,Set}ControlData that know about data types passed for the various 4-char codes. The table which maps codes to datatypes is still pretty empty, I'll fill it as I need entries (or maybe someone wants to spend a nice day filling it?).
871a8897f2 Fixed the password dialog to use a password control. Aligned all sizes and such the HIG standards (I think).
cc38688889 Updated Message, question, YNC and progress dialogs for Appearance. Password remains to be done, and maybe we should convert everything to movablemodal too and make things like question look nicer.
2d76c25f59 In places where a ResObj is expected for PyArg_Parse and the object passed in isn't but it does have an as_Resource method use that. This makes life a lot easier for appearance portability (and was needed anyway).
c5d0959a22 Regenerated toolbox modules with CW Pro 5.2, which has MacOS 8.6 and Appearance 1.1 support, and added workaround for non-existing calls for 68K. Static 68K Python still has a tk problem.
a05ac607d7 Regenerated with CW Pro 5.2, which has MacOS 8.6 and Appearance 1.1 support.
608b3fa801 Dummy functions which return unimpErr for lots of toolbox calls that are unavailable for 68K. This way we don't have to disable thm in bgen, so we can still use them on PPC.
8bb573e2ab Oops, PLstring funcs should be "pascal". Funny this never caused problems before...
0bdd90a7e7 Catch up with terminology change in UnixCCompiler: 'includes' -> 'include_dirs'.
1d0495e05c Catch missing MANIFEST file and warn rather than blowing up. Added 'nuke_release_tree()' method to blow away the directory from   which the archive file(s) are created, and call it (conditionally)   from 'make_distribution()'. Added 'keep_tree' option (false by default) to disable the call to   'nuke_release_tree()'.
9b45443c1b Fixed 'find_package_modules()' to ensure that we never build (and thus   install) the setup script itself. Fixed 'build_module()' so we do *not* preserve file mode (which means   we can install read-only files, which makes the next installation   of this distribution fail -- at least under Unix); added a comment   explaining this.
48697d931b Changed 'build_extensions()' so 'sources' can be a list or tuple; and   call CCompiler method 'compile()' with 'include_dirs' not 'includes'. Fixed stupid typo in 'get_source_files()'.
04d78328f3 In 'compile()' method, renamed 'includes' parameter to 'include_dirs' for   consistency with 'build_ext' command option. Changed 'compile()' and 'link_shared_object()' so 'include_dirs',   'libraries', and 'library_dirs' can be lists or tuples.
44f8e4ea08 Added support for printing out help text from option table: 'print_help()',   'generate_help()', 'wrap_text()' functions, and a little tiny test   of 'wrap_text()'. Changed how caller states that one option is the boolean opposite of   another: added 'negative_opt' parameter to 'fancy_getopt()', and changed   to use it instead of parsing long option name.
c9c37b1c6e Made "verbose" mode the default; now you have to supply --quiet if you   want no output.  Still no option for a happy medium though. Added "--help" global option. Changed 'parse_command_line()' to recognize help options (both for the   whole distribution and per-command), and to distinguish "regular run"   and "user asked for help" by returning false in the latter case. Also in 'parse_command_line()', detect invalid command name on command   line by catching DistutilsModuleError.   a 'negative_opt' class attribute right after 'global_options'; changed   how we call 'fancy_getopt()' accordingly. Initialize 'maintainer' and 'maintainer_email' attributes to Distribution   to avoid AttributeError when 'author' and 'author_email' not defined. Initialize 'help' attribute in Command constructor (to avoid   AttributeError when user *doesn't* ask for help). In 'setup()':   * show usage message before dying when we catch DistutilsArgError   * only run commands if 'parse_command_line()' returned true (that     way, we exit immediately when a help option is found)   * catch KeyboardInterrupt and IOError from running commands Bulked up usage message to show --help options. Comment, docstring, and error message tweaks.
d6bc4e7fc0 New appearance mgr support. This appears (no pun intended) to have some problems that I'll fix tonight, so don't check it out.
09ac088152 The call to PyArg_ParseTuple in al_Connect had one too few arguments. This fixes PR#157.
d6ecfea8de Changed appearance-dialogs to new WDEF values. Also undid silly change of button types in those dialogs.
a6107f75c1 Regenerated, and manually massaged (sigh): there can now be comments after enum defs, and bgen doesn't understand this yet.
24c353144a Fixed a linebreak I forgot, added docstrings, (temporarily) blacklisted a few routines that seem to be missing in my CW Pro 5.1.
d60069cf2e Added USE_APPEARANCE flag.
18f7a45324 Document the new stuff in the os module.
89143df520 Added support for ctermid, tempnam, tmpfile, tmpnam, and tmpnam_r.
5ab8eaf0bb Added support for abort(), ctermid(), tmpfile(), tempnam(), tmpnam(), and TMP_MAX.
229c0868fe Changes by Corran Webster to support {Get,Set}ControlData and HandleControlClick. Untested.
4d56ecf690 Minimal test of Dlg.SetControlData by Corran Webster: draw a default ring around a button. Mainly here so I can transfer it home:-)
8f5725af60 First bits and pieces of appearance support: an init routine, a global flag PyMac_AppearanceCompliant (exported thru MacOS). If USE_APPEARANCE is off the code is disabled (but the variables are still there, set to 0).
cbdff766d2 OpenSSL support.  This is based on patches for a version of SSLeay by Brian E Gallew, which were improved and adapted to OpenSSL 0.9.4 by Laszlo Kovacs of HP.  Both have kindly given permission to include the patches in the Python distribution.  Final formatting by GvR.
09c8b6c3e4 OpenSSL support.  This is based on patches for a version of SSLeay by Brian E Gallew, which were improved and adapted to OpenSSL 0.9.4 by Laszlo Kovacs of HP.  Both have kindly given permission to include the patches in the Python distribution.  Final formatting by GvR.
5274c336f5 According to Craig H Rowland, openbsd2 is yet another BSD variant that uses the BSD version of the lock structure.  Sigh, @!%$.
8f35681843 Added \" to escapes so embedded escaped double quotes are handled correctly.  Patch suggested by Mads Kiilerich <mk@solit.dk>.
b70699bcc5 Set the finder "is shared" bit, by request of Joe Strout. It seems this allows multiple simultaneous copies to be run from a server, and Applets shouldn't write their datafork so it appears safe.
75e62f2201 Allow for 12 arguments max, in stead of 8. Untested.
bf27298364 Correct the docstring for byteswap(); error noted by Bernhard Reiter <bernhard@uwm.edu>.
631e6a0c07 [from 1999-11-04] Bunch of little bug fixes that appeared in building non-packagized distributions.  Mainly:   - brain-slip typo in 'get_package_dir()'   - don't try to os.path.join() an empty path tuple -- it doesn't like it   - more type-safety in 'build_module()'
0c3e4b6ca1 Default schedparams set to (0,0): no event-intervention by Python mainloop. This was always meant to be the default, and the new example-2 was pretty critical of this.
dd206899db Standalone.html is long obsolete. Added description of BuildApplication process to freezing.html.
2450a25fcd New examples by Tony Ingraldi, using dns-lookup in stead of the funny interslip module.
43fd1f75db Give a warning if system-wide sys.argv processing is off (because then we may have missed an applet being dropped on us). This may fix the obscure bug Tony Ingraldi was experiencing.
c6f8fd925e Last try, think I got it now.
490b15d30b Once more
a20a1e7d4b Once more
6b96ec3625 Urg!
6c3e3a90df more trivial stuff to test CVS -- should be the last?
0afe026108 testing CVS once more
fcd490b290 testing CVS
71d9f0dba1 testing CVS
34790539a9 testing CVS
a8a57a7e03 testing CVS
8896a2bd27 Minor change to test new CVS reporting
de4636c232 Minor change to test new CVS reporting
61c0461c24 Minor change to test new CVS reporting
086bc367ee Minor change to test new CVS reporting
bda81c86af Minor change to test new CVS reporting
0319b370d0 Minor change to test new CVS reporting
554cd94096 Minor change to test new CVS reporting
d4d4ba3fd2 Update link to PythonWare library page.
6dfc792fea In abspath(), always use normpath(), even when win32api is available (and even when it fails).  This avoids the problem where a trailing separator is not removed when win32api.GetFullPathName() is used.
d25c1b73d2 A bunch of docstring fixes.
32efef33ae look for builtins before stuff on the path.
2b23413ce2 add loading of dynamic library modules.
645af9fedd rewrite_descriptor():  Fixup conversion of arguments (simpler).
8a3b4495df Don't rename \var to <varname>; DocBook is too verbose here.
7ec28d298d turn SysPathImporter into PathImporter.
72ee43527d remove the __version__ global.
6d3165a5a1 only put __path__ into package modules.
63faa01538 shift code from DirectoryImporter out to a common area. remove use of "os" module (bootstrap issues) and go to the underlying   platform-specific modules fix problem in _compile() (trapped wrong error on permission issues) add SysPathImporter and BuiltinImporter put __file__ into modules imported from the filesystem. [backwards compat] put __path__ into modules [backwards compat]   oops: it is doing this for all modules, not just packages. comment and tweak to the PackageArchiveImporter
995285e392 Moved all the imports to the top.
d81b1b0ffa Set the date and version to reflect the actual status, not the last released status.  Has to be changed just before publishing anyway.
0d6bf0e544 When generating the top-level index to the documents, make sure some oddball things from the LaTeX get translated to rational values.  This is mostly to keep things from looking broken in a development tree when they're not.
b960e7a797 Patches by Kannan Vijayan:
7424242c1c Removed last XXX comment; no further action needed on this one.
4755ee567d Complete the integration of Sam Bayer's fixes.
497a19879d Changed fron importing wcnew back to webchecker.
e284b21457 Integrated Sam Bayer's wcnew.py code.  It seems silly to keep two files.  Removed Sam's "SLB" change comments; otherwise this is the same as wcnew.py.
61b95db389 # *NOT* by Sam Bayer: reindented to use 4 spaces like the rest here, # and removed trailing whitespace.
64acb5ce93 Samuel L. Bayer:
a8946406df Samuel L. Bayer:
f97eecccb7 Samuel L. Bayer:
dbd5c3e63b Samuel L. Bayer:
d7b147b040 Moshe Zadka writes: When deploying SimpleHTTPServer, I noticed a problem: it does not encode/decode the urls, which is wrong.
ed7f9e2425 Hint for C++ users on AIX by Gary Duzan added.
bcb393f2b2 The 'test' target ought to depend on 'all', not just on python$(EXE) -- otherwise shared libraries might not be rebuilt.
0eefa3fbbf Patch by Vladimir Marangozov, inspired by a bug report from Gary Duzan, for AIX, to support C++ objects with static initializers, when using the genuine IBM C++ compiler (namely xlC/xlC_r).
569ef619c7 Changes resulting from patch to acconfig.h.
e74c4291b2 Patch by Vladimir Marangozov, inspired by a bug report from Gary Duzan, for AIX, to support C++ objects with static initializers, when using the genuine IBM C++ compiler (namely xlC/xlC_r).
001b9bebca Patch by Vladimir Marangozov, inspired by a bug report from Gary Duzan, for AIX, to support C++ objects with static initializers, when using the genuine IBM C++ compiler (namely xlC/xlC_r).
ba98a42a0f Change the last PyErr_Format %s format to %.400s.
55e93964e6 Preliminary documentation for turtle module (Tk), by Moshe Zadka.
77980a731c Correct typo in module doc string doscovered by Jonathan Giddy.
2530d4e32b Added request to please not send HTML email to the newsgroup/mailing list or to python-docs.
29a710f2ef Document \citetitle and \programopt.
37f1574f2e Use \citetitle and \programopt as appropriate.
e15eb35fd0 Use \citetitle as appropriate.
9fa76f1090 Use \citetitle in several places, and \programopt where appropriate.
698d5206aa Use \citetitle in several places.
ebe0341109 Use \citetitle instead of \emph.
356d0ceb7e Use \citetitle in one place.
268df27c9a Use the new markup as apporpriate.
6e9ea59a43 Use \programopt in one place.
91f31eab1c Added citetitle and programopt.
d290c10890 Use \programopt in one place.
310ee61f20 Missed a couple of program options that had been marked by \code.
a24f7b759a Use \programopt in one place.
be48646cfa Use \citetitle and \programopt as appropriate.
7b8195a209 \programopt:  New macro, used to mark command-line parameters in the               text.  Looks like \program.
c9f5fe0d1c do_cmd_programopt():  New function, similar to do_cmd_program().
768d2271a8 Oops.  Remove some garbage from the doc string that was accidentally checked in due to a patching mishap.  Reported by Detlef Lannert; thanks!
09cbb01989 Jack Jansen: Mac has no EINTR.
d4c64ba0f9 Add some header comments to all the files.
281b8d82f7 initial checkin for my Python stuff.
e168c65603 Patch by Dieter Maurer to make things work for Tcl/Tk 8.1.  This simply moves the call to Tk_MainWindow() after the Tcl/Tk initialization calls.  The patch is unconditional, it works with earlier and later versions as well.
6b26a06037 Patch by Dieter Maurer to make things work for Tcl/Tk 8.1 (tested with 8.1.1).  His approach doesn't work with Tcl/Tk 8.2, so I've placed it inside #if TKMAJORMINOR == 8001 and #endif.  See also his patch for tkappinit.c.
f941acda60 Added HAVE_LIMITS_H, MAVE_MEMMOVE, HAVE_STRERROR, HAVE_LOCALE_H since we have these in the current CW release (and probably already had them quite some time, but never added the defines).
58fa818c08 Changes to ProgressBar: - Don't crash if max=0 - set() now has an optional max parameter, to set the maximum value.
fd6aabbb35 Checking in text versions of release forms and explanation.
e4f13660f8 split() docstring:  Made signature and description for the first                     parameter match.  Error pointed out by François                     Pinard <pinard@iro.umontreal.ca> on c.l.py.
1b6e463bd5 Bugfix by Jack Jansen for Macintosh (for the inet_ntoa/aton changes):
29e5184491 Typo fixed in docstring; removed unneccesary import. (jvr)
2e5b0f2166 Adapted to new macmudulefinder.process() API. (jvr)
8ff52764ef - changed the API of process() so it will return a list of missing modules instead of raising an exception. - minor cleanups (jvr)
5dbf526e8e Several improvements, some of where were contributed by Bernhard Herzog <herzog@online.de>.  Specifically,
a507c32991 Python equivalent of xgettext(1).  This was originally released separately but now is included in the standard Python distribution.
19878f58fe Sjoerd Mullender writes:
dd7cbbf4d3 Oops.  spawnl() and spawnle() should be implemented on Windows too.
8b4b46e4f3 Fix a bug reported by Toby Dickenson (on 18 May 1999). Sometimes there's no parent, so don't try to get its __name__.
cfd76a202b Sjoerd Mullender:
f618a48d11 Correct typo in walk.__doc__ reported by Francois Pinard.
5a2ca9328d Checking in a bunch of spawn functions.  These are only defined if we have fork and execv (and friends) but not spawnv.  They operate exactly like the spawn functions on Windows.  A limited set of needed constants is also defined (P_WAIT, P_NOWAIT etc.).
66e53854d6 - windowbounds() now works with multiple screens (window position prefs!) - Minor tab behavior tweak -- jvr
7171df3e7e Very minor little things... -- jvr
afca4153a5 New __version__ number (1.0!) -- jvr
5f740070b1 Minor indentation cleanup -- jvr
460ff20cd6 String values will now always be shown with quotes, so one can see the difference between the value 2 and the value '2'. -- jvr
5bd608d46e Change the suggestions pointer at the bottom of generated HTML pages.
c6d45afb1b Straighten out dependencies so changes in the texinputs/* get reflected.
6cf186b867 pathes --> paths; typo reported by Gerry Wiener <gerry@ucar.edu>.
5a3194688d Added dependency on filecmp section, removed dependencies on cmp and cmpcache sections.
47a27b6640 Make references to new filecmp module hyperlinks now that there's documentation.
adf2dbfced Added section for filecmp.
c7b5b3c998 filecmp documentation from Moshe Zadka <moshez@math.huji.ac.il>.
7eaf6828cb Added deprecation notes, in case anyone decides to read these anyway.
143db4b041 cmp and cmpcache are now obsolete, so don't include their documentation sections.
a8052a3113 Added cmp and cmpcache to the "Obsolete" section.
2d72687006 New module by Moshe Zadka (submitted on Sept. 25).  This unifies the functionality of cmp.py and cmpcache.py, which are hereby declared obsolescent.
4e20de59dd Patch by Michael Hudson: when the object of attribute expansion is a class instance, include the class attributes in the list of possible expansions.
d65b53923e Fix by Moshe Zadka (cleaned up and documented by GvR) to break out the request handling into separate parse_request() and handle_request() methods.
32a15adeab MrC also needs BAD_STATIC_FORWARD define.
25da5bebd8 Fix PR117.  The error message is "keywords must be strings".  Perhaps not as descriptive as what Barry suggests, but this also catches the (in my opinion important) case where some other C code besides apply() constructs a kwdict that doesn't have the right format.  All the other possibilities of getting it wrong (non-dict, wrong keywords etc) are already caught so this makes sense to check here.
e1ada50559 Don't assume GNU tar -- generate tar file and compress in separate steps. Now supports the full range of intended formats (tar, ztar, gztar, zip). "-f" no longer a short option for "--formats" -- conflicts with new   global option "--force"!
d6c30f66c7 Removed massive comment speculating about needlessly complex variations on the manifest file syntax.
346e320c6e Qualified use of 'newer_group' function.
6bad86462b Fix how we run 'zip' -- give explicit .zip extension.
714fd26a2f Documented Beep() function.
bda10c81d0 In helo() and ehlo(), Don't fail when gethostbyaddr() fails -- just keep whatever gethostname() returns.  After a suggestion by Doug Wyatt.
d6512808f0 Module/script to parse the reference count data file and make the information accessible to Python.
805bf1b330 Added note that Skip created the initial version of this file.
7b7dc6b49d Initial version as provided by Skip Montanaro <skip@mojam.com>.
8fa42af978 Fix PR#107: wm_colormapwindows() did the wrong thing when presented more than one window argument.
910d9a0634 Test output. (XXX perhaps a bit too verbose; in particular it is sensitive to all the doc strings.)
fdecda0123 Rewritten -- this now tests the binascii *except* for the binhex module, which is tested by test_binhex.py.
a0e85b241d Test output for test_binhex.py.
2db4f47fdd Patch by Jason Trowbridge.  (Followup to his PR#110.)  (Slightly reformatted.)
7b8f1abfca This test really only tests the binhex module. Renamed it and adapted a comment and an error message.
d5753e15e2 John DuBois tells us that SCO OpenServer 5.0 and later requires _SVID3 before it reveals the needed definitions in sys/statvfs.h.
eba24bb920 Fix PR#110 -- bad input ("====") for a2b_base64() caused it to call _PyString_Resize() with a negative size.
88d23309e9 print a warning if the password will be echoed.
f8d8e07601 Fixed PR#106: winfo_visualsavailable() with the includeids=1 option didn't properly handle the hex numbers returned.
dcb8583c18 Fix for PR#111: when using the inplace option, give the new file the same permissions as the old file, plugging a security hole. (Not using exactly the suggested bugfix.)
39d4a0237a Fixed typo in explanation of abspath(); noticed by Paul Prescod <paul@prescod.net>.
14bb71d553 os.fork raises AttributeError, not NameError, if fork() isn't supported.  Pointed out by Moshe Zadka <moshez@math.huji.ac.il>.
40e84db0f4 Based on comments from Paul Prescod:
226ae6ca12 Mainlining the string_methods branch.  See branch revision log messages for specific changes.
75260275fe update to use threading module instead of thread.
2539451fb9 fixed a typo in a docstring, and slightly expanded the module docstring info for readfp().
2c7b8fe618 Fix PR#66.  Solution: add error checking around l_divmod() calls in long_pow().
1b7aec35c4 Fix PR#31 -- zfill() mishandles empty string.
42636dc64d Fix for PR#98 (Adrian Eyre) -- in instancemethod_repr, the funcname object is DECREFed too early.
08a92cb568 Jeremy writes:
c4eb6a6afd main(): Arg!  I wasn't properly ignoring EINVAL; now only re-raise the exception if code <> errno.EINVAL.  Jeremy this should fix your problem.
d8957d6802 Fix PR#3, submitted by Skip Montanaro: if no space appears after the colon, the first character of the value is lost.
be2033697f In PySys_GetObject(), it's possible that tstate->interp->sysdict is NULL.  In that case, return NULL rather than dumping core.
caf2f8e3c7 Add -v flag.  Comment duplicate Py_Finalize().
f5957eaf0a Dynamic linking support for BSD/OS 4.x as suggested by Vivek Khera
231fffe1d4 AskString always set the dialog id to 257. Fixed.
a5a24b76f4 Added has_option(); fix bug in get() which botched interpolation if '%(' was found in first position (found by Fred Drake).
6a8d84b0c1 Urmpfh!
2438a485c8 ConfigParser.read():  Don't mask IOError exceptions.
ef93095adb Filter 'glob()' results so we only look at regular files.
3c6204a87f Pass 'force' flag to 'new_compiler()'.
455eb61648 Don't import what we don't use.
ef9ad6df01 Tweaked verbosity messages for byte-compilation.
0c35ac62d8 Added 'force' and 'quiet' (negative alias for 'verbose') to the   global options table. Every Command instance now has its own copies of the global options,   which automatically fallback to the Distribution instance.  Changes:   - initialize them in constructor   - added '__getattr__()' to handle the fallback logic   - changed every 'self.distribution.{verbose,dry_run}' in Command to     'self.{verbose,dry_run}'.   - filesystem utility methods ('copy_file()' et al) don't take 'update'     parameter anymore -- instead we pass 'not force' to the underlying     function as 'update' Changed parsing of command line so that global options apply to all   commands as well -- that's how (eg.) Command.verbose will be initialized. Simplified 'make_file()' to use 'newer_group()' (from util module). Deleted some cruft. Some docstring tweaks.
f3b997a7f0 Fixed 'mkpath()' to normalize the path right off the bat -- cleans up   the code a bit and should make it work under Windows even with trailing   backslash. Fixed a couple of docstrings. Added comment about 'make_file()' possibly being redundant and unnecessary.
a564cc315b Hacked to support the notion of "negative alias" options, to handle -q/--quiet reasonably elegantly.
c74138d941 Catch up with changes in 'gen_lib_options()':   - change how we call it   - added methods 'library_dir_option()', 'library_option()', and     'find_library_file()' that it calls Added 'force' flag; it's automatically "respected", because this class   always rebuilds everything!  (Which it to say, "force=0" is not respected.)
4fecfce4d0 Fixed order of link options: object files now precede library stuff. Catch up with changes in 'gen_lib_options()':   - change how we call it   - added methods 'library_dir_option()', 'library_option()', and     'find_library_file()' that it calls Added 'force' flag and changed compile/link methods to respect it.
3febd60682 Slight change to the meaning of the 'libraries' list: if a library name   has a directory component, then we only search for the library in   that one directory, ie. ignore the 'library_dirs' lists for that   one library. Changed calling convention to 'gen_lib_options()' again: now, it takes   a CCompiler instance and calls methods on it instead of taking   format strings.  Also implemented the new "library name" semantics   using the 'find_library_file()' method in the CCompiler instance. Added 'force' flag to CCompiler; added to constructor and 'new_compiler()'. Added 'warn()' method.
99eb7a1255 Mark Hammond writes:
91cae85c32 Optionally bracket all external declarations of init functions with "ifndef"s.
2afc2c74cd vec_longjmp added to list of "forbidden" functions in .exp file.
70d784979c CW Pro 5 projects.
fa968ac35b Patches by Jack Jansen: new type OptionalInBuffer allows passing either a string/input buffer or None.
8bd738278e Patch by Jack Jansen to add with_ifdef option, which places #ifndef around external decls.
a856d9f450 Added module "ce" to list of modules known not to exist on the mac.
e742487ca5 Bigger buffer size for C profiler (if profiling is enabled).
fac3008e77 Optimization: don't try to get a tabsize resource if we know the file doesn't have one (stdin and such), OpenRF appears to be an expensive call.
4cc9562781 Regenerated, no significant diferences.
c7fda7e195 Make macglue.h C++ compatible.
9a41aa8a5a Distribution files for 1.5.1c1.
9f678a1c2c 1.5.2c1 version.
8e7eaa8ac8 Duncan Grisby noted a typo in _DummyThread.
b24afe19db Added 'list_only' option (and modified 'run()' to respect it).
274ad9dc81 Added all documentation. Slightly improved the code for dealing with newline on a comment line,   and for stripping whitespace.
ef4490f501 New command to generate source distribution based on a manifest file.
a6cb8ae7bc Added 'package' option. Catch up with renamed 'platdir' -> 'build_platlib' option in 'build'. Don't call 'set_final_options()' in 'run()' anymore -- that's now   guaranteed to be taken care of for us by the Distribution instance. If 'include_dirs' is a string, split it on os.pathsep (this is half-   hearted -- support for setting compile/link options on the command   line is totally lame and probably won't work at all). Added 'get_source_files()' for use by 'dist' command. Added code to 'build_extensions()' to figure out the "def file" to use   with MSVC++ and add it to the linker command line as an "extra_postarg".
2a612067e6 Renamed 'dir' option to be consistent with other commands. Don't call 'set_final_options()' in 'run()' anymore -- that's now   guaranteed to be taken care of for us by the Distribution instance. Rearranged to bit to allow outsiders (specifically, the 'dist' command)   to find out what modules we would build:   - 'find_modules()' renamed to 'find_package_modules()'   - most of 'build_modules()' abstracted out to 'find_modules()'   - added 'get_source_files()' (for the 'dist' command to use)   - drastically simplified 'build_modules()' -- now just a wrapper around     'find_modules()' and 'build_module()'
e6ac2fcc12 Renamed many options to be consistent across commands. Tweaked some help strings to be consistent with documentation. Don't call 'set_final_options()' in 'run()' anymore -- that's now   guaranteed to be taken care of for us by the Distribution instance.
df178f97de Catch up with latest changes in CCompiler:   - add 'extra_preargs' and 'extra_postargs' parameters (and use them!)   - got rid of 'build_info' kludge parameter   - added 'compiler_type' class attribute   - respect reordered arguments to 'gen_lib_options()' Also added 'output_dir' parameter (catching up with older change in   CCompiler) -- BUT this is presently ignored by all methods! Deleted some more docstrings redundant with CCompiler. Dropped generated of "/DEF:" argument --- that's now done by   the 'build_ext' command.
0e3530ba28 Catch up with latest changes in CCompiler:   - add 'extra_preargs' and 'extra_postargs' parameters (and use them!)   - added 'compiler_type' class attribute   - respect reordered arguments to 'gen_lib_options()'
802d6b7b4c Added 'extra_preargs' and 'extra_postargs' parameters to most methods,   which allowed us to get rid of the 'build_info' used in some places   (a temporary kludge to support MSVC++ "def" files). Deleted big comment whining about that kludge. Added 'compiler_type' class attribute. Overhauled 'new_compiler()': now takes 'compiler' argument along with   'plat' (both optional with sensible defaults), and looks them both up   in the new 'default_compiler' and 'compiler_class' dictionaries to   figure out where to get the concrete compiler class from. Reordered arguments to 'gen_lib_options()' to match the order in   which the arguments are generated (ie. -L before -l).
cd1486fff1 More tweaks to 'mkpath()':   - deal with empty tail from os.path.split() (eg. from trailing slash,     or backslash, or whatever)   - check PATH_CREATED hash inside loop as well
3868eb97c8 Added 'ready' flag and 'ensure_ready()' method to Command: together   they make sure that 'set_final_options()' has been called, but isn't   called redundantly. Changed Distribution to call 'ensure_ready()' where it used to call   'set_final_options()', and in a few extra places as well. Lots of comment/docstring revisions and additions in both classes. New one-liner utility methods in Command: 'find_peer()', 'spawn()'.
e13ff2e2d6 Patch by Tim Peters fixing PR#88:
1a23c2484e Patch by Tim Peters fixing PR#89:
a840fca155 Initial checkin of IDE scripts. (jvr)
b7ad821f02 Added support for global default font settings. (jvr)
03bca30ea1 1) added "typingcasesens" keyword arg to constructor, and support for case sensitive typing in lists. 2) minor cleanups (jvr)
2a75909980 added do_setwindowfont() menu callback: brings up a font selection dialog. (jvr)
c2dab4866e added getdefaultfont() function. Returns default font settings. (jvr)
2028b59db4 1 - added "set default window font" menu 2 - updated scripts folder location (jvr)
cee9a48ea8 minor cleanup, avoiding rare traceback (jvr)
532998e00d "make clobber" should remove modindex.html as well.
88c786dad9 icons/ should not be ignored here now that this is it's real home.
cf1b06ec47 Added --about option to specify the file to load "About this document..." text from, defaulting to ../html/about.dat.
8903be62a8 Tell mkhowto to use stdabout.dat for the documents it processes here.
b35f2b7ef8 Remove some <SPAN> elements that were used only to carry a CLASS attribute; stick the CLASS on an existing element.
f62b352a5e Remove the "Comments and Questions" section, allowing this to be used for non-standard Python documentation.
b9bd0b7c82 Version of about.dat that should only be used for the standard documentation.
d37cecfda4 Remove some <SPAN> elements that were used only to carry a CLASS attribute; stick the CLASS on an existing element.
f42d7a78fc Oops, missed this one!
d3d28d39f8 img_tag():  Tighten up the generated SRC attribute a bit; if the image             relative URL starts with "./", remove "./".
d52879ccdc do_cmd_rfc():  Simplify the generated markup.
52ea0ce977 Added --image-type option to allow use of either GIF or PNG images.
191439ab6b Some updates to allow ../tools/mkhowto to add various bits to the supplemental l2h initialization file it creates and still get all the right behavior.  In particular, it can change the image type and icon location and not get inconsistent results.
d8d179d69d main(): wrap the device.setinfo() call around an exception handler. It's possible to get a sunaudiodev.error (errno == EINVAL), although I'm not exactly sure why, this at least won't crash the application.
da2d352bdb Added docstring and RCS id (apparently some Windows tar extractors ignore zero-byte files: grr...).
3e1a98a336 PNG version of the icons, converted from the GIFs by Michael Hudson <mwh21@cam.ac.uk>.
df0d33586d Ditched the whole notion of "alias options": this meant dropping the   'alias_options' table and getting rid of some hairy code in the   Distribution constructor. Resurrected the distribution options that describe the modules present   in the module distribution ('py_modules', 'ext_modules'), and added   a bunch more: 'packages', 'package_dir', 'ext_package', 'include_dirs',   'install_path'. Updated some comments. Added 'warn()' method to Command. 'Command.get_command_name()' now stores generated command name in   self.command_name.
ac1424a9ce Added 'write_file()' function. Added global cache PATH_CREATED used by 'mkpath()' to ensure it doesn't   try to create the same path more than once in a session (and, more   importantly, to ensure that it doesn't print "creating X" more than   once for each X per session!).
b116e45a29 In 'link_shared_object()', try to be less sensitive to missing input files in dry-run mode.
fbf8affca1 Typecheck elements of 'macros' parameter in 'gen_preprocess_options().
d4b8429fc5 Added docstring, brought __all__ up-to-date.
865de83668 Added 'install_path' option for giving non-packagized module   distributions their own directory (and .pth file). Overhauled how we determine installation directories in   'set_final_options()' to separate platform-dependence and take   'install_path' option into account. Added 'create_path_file()' to create path config file when 'install_path'   given. Only run 'install_py' and 'install_ext' when, respectively, there are   some pure Python modules and some extension modules in the distribution.
02e1c56212 Only run build_py if we have pure Python modules, and build_ext if we have extension modules.
dbb96253ea Some option changes:   - rename 'dir' to 'build_dir'   - take 'package' from distribution option 'ext_package'   - take 'extensions' from distribution option 'ext_modules'   - take 'include_dirs' from distribution Name keyword args explictly when calling CCompiler methods. Overhauled how we generate extension filenames (in 'extension_filename()   and 'build_extension()') to take 'package' option into account.
17dc6e7ed8 Basically a complete rewrite to support dealing with modules in whole packages and searching for source files by 'package_dir'.
0297719180 Added section about where to send comments, questions, & bug reports.
2a6875e172 parser__pickler():  Don't drop the third argument to         parser_ast2tuple().  Create an temporary empty dictionary to         use.  Bug reported by Mark Favas <m.favas@per.dem.csiro.au>.
675e994a2e Added comment with web location of bsddb windows port.
ea7364c7cd Peter Haight discovered that this code uses a mutable default for cnf and then (under certain circumstances) can clobber the default! He also submitted this patch as PR#82.
3aca65312a Tim Peters fixed PR#75: very long lines cause incorrect tracebacks.
458e7fab9b Erik Lindvall contributed a BSD/OS 4 patch for LDSHARED.
933d5a7c6e os.name:  Note that 'java' is one of the registered names.
e6fb1c4bd3 Added documentation for inet_aton() and inet_ntoa(), from Ben Gertzfield <che@debian.org> (with minor changes).
2174dcb061 Tim Peters writes:
f3c5f5c044 After much hemming and hawing, we decided to roll back Fred's change. It breaks Mailman, it was actually documented in the docstring, so it was an intentional deviation from the usual del semantics.  Let's document the original behavior in Doc/lib/librfc822.tex.
9376b74c42 (1) On Linux, we really need to trust the configure script to select the right variant of gethostbyname_r for us, since not all Linuxes are equal in this respect.  Reported by Laurent Pointal.
ba895d892d Typo: the method called is do_SPAM, not handle_SPAM.
0079b288f5 Put Sam Rushing's original RCS ID string back, without dollars around it.
c2b6de5b91 Put Sam Rushing's original RCS ID string back, without dollars around it.
0ba58158c5 Added "import string" to a couple of examples that describe string module functions, to clarify that the import is not automatic. Suggested by Koray Oner <Koray.Oner@Eng.Sun.COM>.
fa4eb188f4 Changed selection of installation directories (in 'set_final_options()') so that pure Python modules are installed to the platform-specific directory if there are any extension modules in this distribution.
c9c011cd96 Straightened up the selection of installation directories for platform-   specific files; it was somewhat broken, and the comments were dead   wrong. Now runs 'install_ext' command after 'install_py'.
609a5c818d Added support for 'package' option, including where to link the actual extension module to.
68bdf3eeb7 Comment addition.
36e68e21b4 Now run 'build_ext'. Default platform-specific build directory changed to 'build/platlib'.
2adac0a637 Tim Peters discovered a bug in the Python-supplied getopt(): it doesn't recognize a lone dash as a non-flag argument. Now it does.
8037cb11f5 Added 'output_dir' parameter to 'compile()' and 'link_shared_object(). Changed those two methods to only compile/link if necessary (according   to simplistic timestamp checks). Added 'output_dir' to 'object_filenames()' and 'shared_object_filename()'.
3b120ab374 New command -- install_ext to install extension modules.
138ce653cc Added 'newer_pairwise()' and 'newer_group()'. Terminology change in 'newer()'. Made 'copy_tree' respect dry_run flag a little better. Added 'move_file()'.
9b17cb5819 Added 'output_dir' attribute, and 'output_dir' parameter to several method   signatures, and updated some docstrings to reflect it. Some comments added. Added 'announce()' and 'move_file()' methods.
1ae3246679 Fixed some goofs in 'alias_options'. Error message tweak in Command.set_option(). Added Command.get_peer_option(). Added Command.move_file() wrapper.
81ffe75d1c Message.__delitem__():  If the key doesn't exist in the dictionary,         raise KeyError instead of failing silently!
75ae7e7dfa Fix for PR#74 -- use int() instead of eval() to extract the exponent.
148ffbc886 canonic(): This used to be equivalent to str() but that caused too much breakage (esp. in JPython which holds absolute path names in co_filename already).  This implementation uses os.path.abspath() as a slightly better way to canonicalize path names.  It implements a cache.
2bee8feac6 Pdb.lineinfo(): Don't use os.popen('egrep ...') to find the line in the file that a function is defined on.  Non-portable to Windows and JPython.  Instead, new find_function() uses re module on a similar (simple-minded) pattern.
a2e48552d2 It appears that inet_aton() doesn't really exist except in libresolv; the proper function to call is inet_addr().  Since we already had code to do that (for MS-Windows), this simplifies things a lot!
a41c691371 Make the maxsize constructor argument default to 0 (an unlimited queue size).
7a15ba595a Added keyword parameter support to all public interfaces; keyword names match the documentation.
244ad3ca15 Name the parameter to expr() and suite() "source" instead of "string".
7f2c9d3890 A few new TODO entries.
f6202635f9 call_trace(): A fix for PR#73, if an exception occurred in the tracefunc (or profilefunc -- we're not sure which), zap the global trace and profile funcs so that we can't get into recursive loop when instantiating the resulting class based exception.
71eb8644d7 Changed to reflect the new "command options" regime -- in particular, we no longer explicitly pull distribution options out of our Distribution object, but rather let the Distribution put them into the command object.
42926ddc7e Careful rethink of command options, distribution options, distribution   attributes, etc.  Biggest change was to the Distribution constructor   -- it now looks for an 'options' attribute, which contains values   (options) that are explicitly farmed out to the commands.  Also,   certain options supplied to Distribution (ie. in the 'setup()' call in   setup.py) are now "command option aliases", meaning they are dropped   right into a certain command rather than being distribution options.   This is handled by a new Distribution class attribute,   'alias_options'. Various comment changes to reflect the new way-of-thinking. Added 'get_command_name()' method to Command -- was assuming its   existence all along as 'command_name()', so changed the code that   needs it to call 'get_command_name()'.
3d50b908ba Ditched redundant docstrings and comments (overlap with ccompiler.py). Ditched redundant '_gen_preprocess_options()' and '_gen_lib_options()'   -- now provided by ccompiler.py. Fixed some filename extension variables -- added missing period. Cosmetic tweaks.
c294113f18 Ditched '_gen_preprocess_options()' and '_gen_lib_options()' -- they're   now provided (minus the leading underscore) by the ccompiler module. Fix 'compile()' to return the list of object files generated. Cosmetic tweaks/delete cruft.
f7a39ecac1 os.name is "posix" or "nt" or we don't care. Added big comment about the kludginess of passing 'build_options'   to the link methods and how to fix it. Added 'gen_preprocess_options()' and 'gen_lib_options()' convenience   functions -- the two cases are very similar for Unix C Compilers and   VC++, so I figured I might as well unify the implementations.
a4d132a868 [from 1999/08/28] Apparently os.name is "nt" or "posix" or we don't care. Cosmetic tweaks.
65bb328f67 Fixed memory leak in ratecv, in response to PR#72.  By Sjoerd Mullender.
2d813e5140 Fixed 'return EOFError' that should be 'raise EOFError', caught by Skip Montanaro's return-value patches.
a07934e53f Correct typo in AddressList.__getitem__.  By Moshe Zadka.
183fd40987 Fix indent error in __format(): del context[objid] at the end should be executed in all cases, not just when it's not a list, tuple or dict.  Discovered by Christian Tismer.
65f4a3b173 Patch from Perry Stoll: caught up with changes in CCompiler necessary (?) for MSVCCompiler.
32162e832e Patch from Perry Stoll: tweaks to Windows support.
69628b0ad1 Patch from Perry Stoll: support for Windows.
1ea8af2fe0 Patch from Perry Stoll: import types module.
440e2f51ea Patch from Perry Stoll: typo fix, make sure we only compile .py files.
5d60fcf02a Patch from Perry Stoll: OK for list of modules to be empty.
2f1b5bb905 Patch from Perry Stoll: pass 'build_info' to link method.
26e48ea7df Patch from Perry Stoll:   - fix some broken abstract methods   - kludge: add 'build_info' parameter to link methods   - add 'object_name()' and 'shared_library_name()'   - support for MSVCCompiler class on NT/Win95
dbd1276dcb Added msvccompiler module exactly as supplied by Perry Stoll.
ff7e83d606 Patch by Mark Hammond to avoid certain header files on Windows/CE.
7f1de832a2 Tiny patch by Mark Hammond to avoid sys/types.h if we don't have it (for Windows/CE).
8779f648d2 Added descriptions of the t#, w, and w# PyArg_ParseTuple() format characters; these are the ones for the buffer interface.
7f1fdfcdaf Add Python Documentation entry to Help menu.
416b961be8 Find the help.txt file relative to __file__ or ".", not in sys.path. (Suggested by Moshe Zadka, but implemented differently.)
0ee4891c82 Update the instructions slightly.
4f0279f439 Removed; no longer needed now that the other tools can handle entity references directly.
abb158f56b feed():  Added support for ESIS '&' lines.
1f33292542 Remove use of fixgenents.sh; no longer needed.
3cf4eb4e3d Specify:        \geq    --> &geq;                 \leq    --> &leq;                 \LaTeX  --> LaTeX       (just text)                 \TeX    --> TeX         (just text)
f6199edcd3 Conversion.subconvert():  Added support for "entityref" parameters         (must be named in the conversion spec.).
a20581c1e5 write_esis():  Added support for ENTITY_REFERENCE nodes.
53eae8e81b convert():  Add support for ESIS '&' lines, and make sure we don't             silently ignore unrecognized lines.
762e206706 posix_putenv():  Constrain memory leakage when setting the same         environment variable repeatedly.  I posted this to the list         some time ago, but only now got around to asking g--d- what he         thought about it.
e7f19200e8 Doco update from Sjoerd Mullender.
b35d6846d9 Sjoerd Mullender writes:
3601e88cb3 Sjoerd Mullender writes:
2900ff9382 Added paragraph explaining that except clauses can't be empty; that pass can be used if needed.  By Dan Wolfe <wolfeman@apple.com>.
4c2533fe3c Added sentence "All exceptions must have an executable block."; from Dan Wolfe <wolfeman@apple.com>.
b68a125d64 Added additional index entries. Minor markup nits.
76dd228f52 whrandom should come immediately after random, not before.
c924b8d976 Clarified start parameter to Py_CompileString, documented Py_eval_input, Py_file_input, and Py_single_input.
f6969fae01 Removed availabe() method again: even on PPC it sometimes returns 1 while quicktime isn't available. Use gestalt in stead for this functionality.
950269239b Return MacOS.Error in stead of RuntimeError in case of failure so the user gets a reasonable explanation in stead of a large negative number.
c6a164b8bc Port inet_ntoa and inet_aton to Windows:
e61e98d2ae Add calls to self.protocol("WM_DELETE_WINDOW", self.destroy) to the Tk and Toplevel class constructors.  This means that if the window manager closes the window, the Python-side Tkinter data structures will be destroyed correctly.  (Most apps do this anyway, and it's recommended practice; I see no reason why making it the default behavior could be bad.)
5c9eb21729 Patch by Ben Gertzfield to add inet_aton() and inet_ntoa() calls.
abf8a1daa8 rewrite_descriptor():  Fix bug that dropped the first TEXT node from                        <description> elements.  Add another sanity                        check to make sure a special case only becomes                        involved for <opcodedesc> and <opcodedescni>                        elements.
f2e9e2978e Oops, better update the date on the .TH line.
4c9be9dffa Various updates, mostly to add information to the SEE ALSO and INTERNET RESOURCES sections based on c.l.py comments.
008edbf973 A nit to make Fred proud.
1016af9fa6 Oops, call 'os.path.join()'!
7eba1d8bbe Tell what the result objects are (based on comment from the list).
a8b37ad9ff Scrit by Marc-Andre Lemburg to generate htmlentitydefs.py.
f8e390b1b5 New version by Mark-Andre Lemburg (generated by a script, parseentities.py).
9ed56de752 Added item regarding random/whrandom.
b3fc9d148d Added disclaimer to the sleep() function.
a5456d5042 In floatsleep(), when using select(), ignore EINTR error.
1ebcf6aabb Patches by Michael Reilly to correctly deal with ftp URLs of the form ftp://user@host//root/path: the double slash in the pathname means to go to the root directory even if the initial directory isn't the root.
8a07baef80 Bump to version 1.1
772d69676e __update(): Jeremy Hylton reports occurances of sunaudiodev.error (interrupted system call) when getting the device information.  I've never seen it, but this patch should take care of the problem.
959fa01dc3 Typo in comment (on Mac, it's the *resource* fork that's not copied, the data fork *is* copied).
5e006a3cc3 Patches by Michael Reilly to correctly deal with ftp URLs of the form ftp://user@host//root/path: the double slash in the pathname means to go to the root directory even if the initial directory isn't the root.
6c395ba316 Add Tim Peters' shuffle() algorithm.
e393ddb2e0 Implements the 'build_ext' command for building C/C++ extension modules.
b4dbfb318c Module to spawn sub-commands in a platform-independent way. Initial revision only includes support for POSIX-style fork-and-exec.
5e71744000 Changed to use 'spawn()', now that it exists. Added 'verbose' and 'dry_run' parameters to constructor. Changed 'compile()', 'link_*()' to default lists arguments to None   rather than empty list. Added implementations of the filename-mangling methods mandated by   the CCompiler interface.
e1aaaa653c Added 'verbose' and 'dry_run' flags to CCompiler constructor and   'new_compiler()' factory function. Added 'runtime_library_dirs' list (for -R linker option) and methods   to manipulate it. Deleted some obsolete comments. Added all the filename manglign methods: 'object_filenames()',   'shared_object_filename()', 'library_filename()',   'shared_library_filename()'. Added 'spawn()' method (front end to the "real" spawn).
7f65c65208 Comment tweak.
0081cc529c Better detection of bad entries in option table. Better error messages for bad entries in option table.
8c66b697c1 Added DistutilsExecError, DistutilsValueError.
e27db5a393 Initial implementation
31e5e37196 Explain the possible range of values for the pid parameter to waitpid().
af5725104b Initial revision
aa6ed0c341 Moshe noticed an inconsistency in his comment, so I'm rephrasing it to be clearer.
292f2c53da Patch inspired by Moshe Zadka to search for the Icons directory in the same directory as __file__, rather than searching for it along sys.path. This works better when idle is a package.
2f7df12f33 Patch by Paul Sokolovsky to support the get() method.
50765abb29 (py-shell): Set the default shell if not set yet.  It's sometimes convenient to call py-shell before the first Python file has been visited.
abc2f960d4 Allow comment characters (#) to be escaped:   - did away with 'comment_re' option -- it's just not that simple anymore   - heavily revised the main logic in 'readline()' to accomodate this Beefed up 'warn()': 'line' can be list or tuple, and 'msg' is   automatically converted to a string.
916fcc3b18 Added __del__ method to GzipFile class that will flush and close the object, if required.
68921dfa31 In note mentioning [].remove()'s exception, tell what exception is raised.  Prompted by Barry's whining.  ;-0
09be409220 Patch by Marc-Andre Lemburg to add a bunch more symbols.
4f1a6187a5 Ofir Reichenberg suggested to apply htonl() to grpaddr in openmcastsock(). Also got rid of unnecessary use of eval() and regsub.gsub().
d3fbdfd007 Add index entries for open(): 	buffer size, I/O 	I/O control, buffering 	line-buffered I/O 	unbuffered I/O
8c9fc00f8d Add index entry "I/O control, buffering" for fdopen().
a94f6762bc Add index entry "I/O control, buffering" for makefile().
933c91ebcf Vladimir Marangozov fixes an AIX-specific problem, writing:
58c5a2a53c Started documentation on buffer objects & types.  Very preliminary.
4574f23115 PyBuffer_New():  Raise ValueError if size is negative (the other 		 constructors didn't miss this).
493aa4809b Added available() method, which checks whether quicktime is installed at all (by testing whether EnterMovies points to an actual routine or is a null pointer).
068bdb181d Change the directory tree walking example to use clearer variable names, some suggested by Joe Ellsworth.
6a619f44c5 It turns out that modifying the environment strings is not safe. Treat them as read-only, and make a copy as appropriately.  This was first reported by Bill Janssend and later by Craig Rowland and Ron Sedlmeyer.  This fix is mine.
46ab6dfa89 Re-write in Python for portability.  About 30% slower, but who cares?!
82ebc27357 remap_element_names():  Only used for things that the new conversion 		engine in latex2esis.py can do, so discard it.
2f6ec9ca81 The new conversion engine supports more of the table re-writing than the old one, so use it.
32bc45f737 Removed PyMapping_Clear() -- it was wishful thinking and serves no great purpose.
83c0983bf6 Use the mksourcepgk script instead of mktarball.sh.
9ff3a6a6e7 Remove obsolete version of script.
9f2b42080a Re-implementation of mktarball.sh as a more portable Python script; with a more descriptive name.
080c1b5af6 bwrite(), ewrite():  Helpers for diagnostic output; essentially the 		same as sys.stderr.write(), but bwrite() will make it 		bold if stderr is a tty (for visibility).
4fbdf9779c Mostly minor changes. Removed some obsolete commented-out code.
d158b85896 This doesn't need to do nearly as much for the new conversion, so simplify.
031e222499 A few small improvements to the conversion.
c71b802c47 Markup nits.
ce201128b0 Fixed hyperlink references to the __builtin__ and __main__ modules; error reported by Dale Nagata <DNagata@creo.com>.
a74c55662f Mark Hammond writes:
42b334d93d Remove some redundant code from Canvas.tag_bind(), which added all bindings to a dictionary _tagcommands which was otherwise unused. (This was checked in accidentally with rev. 1.125 and not deleted with rev. 1.127 when the other half of this code was removed -- although even as originally checked in the _tagcommands variable was never used.)
eac8abee4e Ripped out the old conversion.
865e9ff98e Added a few more passes through the document fragment.  Not actually very interesting.
96e4a06fa6 Massive changes.
2394c98c05 Minor updates.
ada2de67b3 Use the (new) buildFragment() method of the EsisBuilder rather than implementing it all here.
f032cdbb24 Some minor cleanup.
bc2285eb60 Conversion specification, used by a new path through latex2esis.py. The specific markup conversion is coded here instead of an even more cryptic table in the code of latex2esis.py.
478a265057 Minor update.
c35367e439 Change an {\em ...} to \var{...} and a {\bf ...} to \program{...} (the new markup makes sense in context).
5ed843fc52 A few minor Customize changes:
11f215607e (python-mode): Set which interpreter (CPython or JPython) to use the first time a py buffer is visited during the Emacs session.  This ensures that py-which-shells is initialized and also guarantees that the mode lines reflect the correct shell.  First bug found by GvR, second one has long bugged :) me.
2ab455a8fa Another patch from Andy Dustman:
ddc469679b (py-beginning-of-def-or-class): Only move to match-beginning if the regex match actually succeeded!
4ef3ea0cc4 Add support for bzip2 compression.
5772f33b6c Add support for bzip2 using --bzip2.
b5213c3010 Ignore additional compressed formats.
8d21243c3e Added description of optional parameter to UserDict constructor. Omission reported by Barry Warsaw.
7dcc69a979 Add zip archive support for html, pdf, ps, and latex archives.
8ea15f3495 Add --zip parameter; make this able to produce .zip files as well as .tgz files.
69f87c580d getsize(), getatime(), getmtime(): 	Constants from stat module were imported using "import *"; 	don't access them via stat.ST_*!
de5d5ce7bc Update getattr() description to document the optional third parameter.  Thanks to Barry Warsaw for pointing out the oversight.
06c5a8b52e Make the default target xml instead of sgml.
7dbde51f97 Make the default target xml instead of sgml.
5d48e458e4 typo: privide --> provide
3d587442f9 Fixed order of parameters in slice() docstring.  The Library Reference had it right!  Reported by Tim Hochberg <tim.hochberg@ieee.org>.
aba953eceb New wishes.
ba508a21e0 Add test case for bug just fixed by Stephen Turner.
2f80d96c04 Patch by Stephen Turner, who writes:
0eb55ac912 Mark Favas was quick to note that the last checkin divides by zero when n == 0...  So divide by a->ob_size instead which was already tested for 0.
5bc51f2f27 Appropriate overflow checks so that things like sys.maxint*(1,) can't dump core.
7c5b9d1fa9 added a test for "To: :" patch
96e9bf45e8 AddrlistClass.getaddress(): when parsing `:'s, in the loop, watch out for gotonext() pushing self.pos past the end of the string.  This can happen if the message has a To field like "To: :" and you call msg.getaddrlist('to').
860e256147 Added comment clarifying that RELEASE is the documentation release number, not the Python release.
6b3fb78ca8 do_cmd_funclineni():  New function; non-indexing form of \funcline.
6db897c52c Move chdir() and getcwd() descriptions to "Files and Directories" with a pointer from the "Process Parameters" section.  Based on comments from Aahz Maruch, Tim Peters, and GvR.
f930d827bb Use the same names for CLASS attributes as elsewhere.
bb7eff96d4 Updated Milan's email address.
0d6bac67be Make the color for stderr red (i.e. the standard warning/danger/stop color) rather than green.  Suggested by Sam Schulenburg.
170bdc08e1 The first concrete subclass of CCompiler: defines a barebones Unix C compiler.
3f81cf7936 The abstract base class that defines the C/C++ compiler abstraction model.
ba3f108ec0 Added a self-berating command relating to installation directories for module distributions that contain platform-specific files.
ccbb3f0ed4 Don't pollute importer's namespace with type objects from types modules. Added DistutilsPlatformError.
6ebb387a08 Patch by Jeffrey Chang to add docstrings everywhere. The text is condensed from the library manual.
7c85ab829d Marc-Andre Lemburg discovered that the switch from .pyc to .pyo files, done by _PyImport_Init(), comes to late to affect the import of exceptions.py by _PyBuiltin_Init_2().  Move  _PyImport_Init() up few lines.
3a4ceb707d Several methods return tuples, not lists.
363d67c2e6 Move some misc. comments from the example section to the main section.
d5f173bf1f FTP.dir():  Fix typo in docstring.
1508970a47 dir() method description revised based on comments from Greg Stein.
17a8b5d473 make_view_popups(): Catch import error which can occur if a viewer is dynamically imported when Pynche is running via askcolor out of a package.  If the ImportError occurs, try again, prepending the package name and digging out the module.
6166b871a2 Missing space; reported by Robert Kern <kernr@ncifcrf.gov>.
d5dfe984e7 Fix a number of minor problems pointed out by /F.
0d6e6e0b39 Fixed typo reported by /F; thanks!
e72d48d5b2 Bump the release number to 1.5.2p1.
c8c1b5dc64 Drag module added.
919e74ce88 Darn!  Forgot to re-target.
5a8aaa7542 Remove one item.
82ac24ffb0 Minor markup nit.
0452007dcc Added entry for asyncore module.
41796918af Fix a few markup nits, improve some index entries.
7d80779532 New documentation from Chris Petrilli <petrilli@amber.org>.
227020894a For spawn*(), point to the magic constants; some readers have a hard time finding the bindings.
9068da4b6d Milton L. Hankin reports that on Windows it is possible to have two different values in the environ dict with the same key (although he couldn't explain exactly how this came to be).  Since getenv() uses the first one, Python should do too. (Some doubts about case sensitivity, but for now this at least seems the right thing to do regardless of platform.)
3427c1f71b Sjoerd Mullender:
e4694eba0f Removed entries for several modules which have been documented.
4c8d83f311 Documentation for dl module from Moshe.
44a7a7c5d0 Added entry for dl module.
b5879ca2e9 Relocating file to Lib/lib-old.
85b5683307 Remove extraneous "contains" -- pointed out by Daniel Barclay <danielb@digitalfocus.com>.
859dc53a52 Per Frank Stajano's suggestion, state explicitly that the functions described in the sub-sections are directly available at the module level.  He found this confusing.
b216060627 Make the reference to the os module in the module synopsis (for the table at the front of the chapter) a hyperlink.
3e2d73fef8 Don't set type of application, it's taken care of elsewhere -- jvr
f1ad207f2a Made several grammatical corrections based on comments from Daniel Barcla <danielb@digitalfocus.com>.
3d0971e33e For "Matching vs. Searching", remove comment that the section is incomplete; I don't remember what else I thought I was going to put in, but it looks o.k. to me know.
9b59a303a8 Added some reminders.
d85b5a418a Move the setting for secnumdepth to the document classes; make the numbering for the manual class go one deeper than it previously did (\subsection entries will now be numbered); no change for howto documents.
6bf37debb9 Added some minor prose before the descriptions of the data attributes to make it clear that these are instance attributes, not module data.
abc64b74c8 Added entry for pty module.
a4b5d58790 pty documentation from Moshe; with small edits.
31d10cbe26 Improve description of the example.
f5213c2a3d Usage nit: a bunch of "nor"s should have been a single "or".
8ad2703bfb Minor wording change in section title.
ac00c4c1c6 byteswap() method:  Tell *what* exception gets raised when the type 		    cannot be byteswapped.
9118f7cfc4 Remove unnecessary comma.
b8690fbc95 Define NotANumber as a subclass of ValueError when using class-based exceptions.
9e0b6229f6 Comment out XXX comment; this needn't appear in the formatted versions.  XXX comments only need to be grep-able.
ef1a029d4c Add note about not being able to use this module with modules not implemented in Python.
4886c66daf Moshe:  Remove extraneous "and".
e4d78189e8 Added entries for mutex and nis modules.
7fefba5c13 NIS documentation from Moshe.
2231357aa6 Mutex documentation from Moshe.
7a65a26f81 Separate documentation of SUNAUDIODEV from sunaudiodev; this mirrors similar constructs elsewhere (al/AL, gl/GL/DEVICE).
14ae4b48fb Fix some typos.
c4e3bf9b5e Add entries for the sched module.
5c4012adc0 While we're at it, convert to docstrings and set the indentation level to 4.
7e990323b4 Moshe's section on the sched module, with edits.
60b66e1f7b Update to Sjoerd's documentation of the chunk module, with some additions from Moshe's version.  Used my table for describing the chunk format, and added some markup and index entries.
16e0bab4ab Close debugger when closing.  This may break a cycle.
ba5a59c834 Break cycle on close.
5af0df528d Destroy the tree when closing.
30455f3050 Add destroy() method to recursively destroy a tree.
fed9b914b5 Extend _close() to break cycles. Break some other cycles too (and destroy the root when done).
205afb487a Add _close() method that does the actual cleanup (close() asks the user what they want first if there's unsaved stuff, and may cancel). It closes more than before.
dd4dda87c1 Add close() method that breaks cycles.
374c0dfb10 Add unregister() method. Unregister everything at closing. Don't call close() in __del__, rely on explicit call to close().
e689f0087e Add close() method that breaks a cycle.
7ea8f8404c Break some cycles when the widget is destroyed.
624a191512 Patch from Sjoerd Mullender:
59834f11e3 Mikael Lyngvig writes:
3aa9ca147b Patch by Mikael Lyngvig:
cf6905f986 Clarify the example by explicitly importing the fcntl module -- this avoid being fooled into thinking that fcntl and FCNTL are the same thing -- they aren't!  (fcntl is the extension, FCNTL.py is h2py output that defines all the constants).
336a201d4f Sjoerd Mullender writes:
ff3a278d3b Small patch by Tim Peters - it was using self.maxlist when it should be using self.maxdict.
ce7695191f Simplified version of a patch by Chih-Hao Huang, who wrote:
7c2426439e Removed tty module entry.
1b2dc9045e Add entries for tty module.
0bccd73be0 Updates from Moshe, again edited by me.  Describe the parameters to border() using a table instead of text for ease of comprehension.
92f3f41424 Added "See Also" section for termios module.
ae4d5c23f5 Various updates.
66239d5530 tty module documentation from Moshe, with some editing and an added "See also" section.
af81a509c3 Added more sections...
b742a42bc0 Two more from Moshe!
cab9476330 Drag manager constants.
4316135a44 Make the mode parameter to open() default in the same way as for wave.open().
707f8e67b9 Added entry for the chunk module.
97793ab6b9 New section from Moshe Zadka, modified by FLD for markup, some additional content.
d58c7464d9 mod from Joe Strout: when quitting, catch errors in window.close() methods and ignore them. Otherwise one can never quit.
8746082175 Patch by Tim Peters:
43128905be Patch submitted by Toby Dickenson and approved by Mark Hammond. Toby writes:
0f871dc39e Added some "See also" references to htmllib docs.
2cd31dc3ea Added entry for curses module.
4997f4d54a Added entries for four of Moshe's documentation sections.
a4070cef5e Preliminary documentation for the curses module by Moshe Zadka, with lots of markup fixes and some English nits fixed.
592305011d Add warning FreeBSD users of a problem with curses and termcap, submitted by Klaus-Juergen Wolf.
d5d55ea02e Fix a markup error.
4755e7d5c1 Three more modules documented by Moshe!
1de2a92791 Initial minimal test program: print information on anything dropped onto Python window.
58b2eacf6b Print something on stderr in case of exceptions in callback routines.
c4f6331690 Drag manager interface (completely untested, so far)
1a03cf56e0 Greg McFarlane submitted two missing Text methods: mark_next() and mark_previous().
6f49e0a154 Added a few minor comments, mostly to discourage documentation of really old modules that may become obsolete.
a48a083edb Added paragraph about potential re-initialization of extension modules; responding to suggestion by Robin Boerdijk <Robin.Boerdijk@nl.origin-it.com>.
a88ef00a50 Further clarfication of the system-dependence of the system() return value, based on comments from Tim Peters.
4f298695be Relocating file to Lib/lib-old.
46e1a32edf Re-categorize the dump module as obsolete.
354e98222c fpformat has been documented for at least a week now!
1d5ad90c1c CRITICAL PATCH!
7f85186921 # Darn!  Local variable l declared but not used in abstract_issubclass().
26921da2c9 Small markup & usage adjustments.
924b42de9c When looking for things that might be modules, include *module.c from the Modules/ directory.  Most of the remaining undocumented modules seem to be living there.
9e480adf9b Patch suggested (and partially provided) by Lars Damerow: instead of always lowercasing the option name, call a method optionxform() which can be overridden.  Also make the regexps SECTRE and OPTRE non-private variables so they can also be overridden.
e019789962 Correction: the parameters of new.instance() are type-checked.
de69ae1753 Updated version from Moshe, with a re-written warning about the side-effect of cmpcache.cmp() using statcache.stat() internally.
173ba5e3bc Minor markup nits.
97c2fa03e5 Small English usage nits.
7487c02209 Small markup and English usage nits.
bfadac00ef In collect_children(), put a try-except around os.waitpid() because it may raise an exception (when there are no children).  Reported by Andy Dustman.
873f0297c3 Add reminder that wave.open() documentation should be updated for the next Python release.
f9607821ad open():  Make the mode parameter optional; if omitted or None, use the 	 mode attribute of the file object (if it has one), otherwise 	 use 'rb'.
551d2b14e7 Add entries due to additional sections from Moshe.
26da2840ac Add/remove entries due to additional sections from Moshe.
64bc94e3ec New module documentation sections from Moshe Zadka <moshez@math.huji.ac.il>!
668213d3b8 Patch by Jim Fulton (code style tweaked a bit) to support ExtensionClasses in isinstance() and issubclass().
9f612f9c5a Suppress warning print statements about modules not found, they are confusing to end users of IDEs.
7bb11d68bf Sjoerd Mullender:
f2f0594587 Laurence Tratt notes that the accept() call in get_request() can fail, and suggests putting a try/except around the get_request() call in handle_request().  (All in class TCPServer.)
e55702b024 Added note to __not__() description that this operation is defined only by the interpreter core and is not overridable by objects.
47ac4e6b41 Add the test case provided by Barry Scott for his patch.
b184487055 Barry Scott writes:
1e4402998f Several new index entries to make find this easier.
6e1d78a181 Added a couple of endswith test cases for bugs reported by Timbot.
c3be1a3ca1 New version from Jim:
17d53ecd8b New version from Jim: don't call Py_FatalError() when initialization fails.
42120eaca5 Added entries for new sections from Moshe.
c46864e982 Misc. changes related to the new sections.
21572fdcb6 New sections from Moshe Zadka <moshez@math.huji.ac.il>. These document CGIHTTPServer, SimpleHTTPServer, and linecache.
d5258681e7 Added more tests of join
cbfa5cbcc8 Message.getheaders():  If there are no matching headers, return an 		       empty list instead of None.  (Guido's request.)
7df4dd7de2 Add entry for the fpformat module.
1739d2f9ee Documentation for the fpformat module by Moshe Zadka <mzadka@geocities.com>.
2f9790195b Added 'ce' to the list of "registered" values for os.name.
60a3bd8130 After more discussion with Jim, change the behavior so that only a *missing* content-type at the outer level of a POST defaults to urlencoded.  In all other circumstances, the default is read_singe().
122473fc70 Two extra startswith tests
8a9514a660 Harness can now test object methods directly, if they aren't available in the string module.
13205609c5 Tim Peters smart.patch:
5eb992beed Last night's scribbles:
18df5d479c Mark Hammond: patch for Windows/CE.
4afdb0a89a Output for the regression test of the new string methods.
50f0e16d1b Regression test for the new string methods.
9c5cc14d23 Some clarifications on operations for mapping types, based on comments from Gerry Weiner <gerry@ucar.edu>.
697c779d98 Adjust indexing for __import__(); based on comments by Stefan Franke <sfranke@cdc-group.com>.
28b1770521 Improve index entry for "import"; responding to comments by Stefan Franke <sfranke@cdc-group.com>.
06a73f042a Work around latex2html problem; reported by Gerrit Holl <gerrit.holl@pobox.com>.
2b755b88c0 Relocating file to Lib/lib-old.
4d5c87ba11 Declare the "util" module obsolete.
b269302695 Added a few more bugs to the doc string; reformatted existing bugs.
3dd3689215 Code by Mark Hammond to format paragraphs embedded in comments. Read the comments (which I reformatted using the new feature :-) for some limitations.
85a36a5ff1 Added abstraction get_selection_index() (Mark Hammond).  Also reformatted some comment blocks to show off a cool feature I'm about to check in next.
f64f8a0877 Fixed typo reported by Bennett Benson <BennettBenson@mn.mediaone.net>.
4431b0f243 Adapt to the new pyclbr's support of listing top-level functions.  If this functionality is not present (e.g. when used with a vintage Python 1.5.2 installation) top-level functions are not listed.
7a62128722 At David Ascher's request, clarify that os.system() always returns 0 on Win95 & Win98.
ae0f292576 Fix typo reported by Robert Kern <kernr@ncifcrf.gov>.
e2571f2ce7 Fix off-by-one error in Tim's recent change to comment_region(): the list of lines returned by get_region() contains an empty line at the end representing the start of the next line, and this shouldn't be commented out!
a3b4a33f3b Co-production with Tim Peters, implementing a suggestion by Mark Hammond: record top-level functions (as Function instances, a simple subclass of Class).  You must use the new interface readmodule_ex() to get these, though.
ea827e916c Mark Hammond writes: Here is another change that allows it to work for class creation - tries to locate an __init__ function.  Also updated the test code to reflect your new "***" change.
ab3b50b429 Mark Hammond writes: Tim's suggestion of copying the font for the CallTipWindow from the text control makes sense, and actually makes the control look better IMO.
66ab4e8af2 Patch by Jim Fulton to document the new parse_qls().
2073177e01 Append "..." if the appropriate flag (for varargs) in co_flags is set. Ditto "***" for kwargs.
d9e5d17407 Fix bug discovered by Klaus-Juergen Wolf -- it runs into infinite recursion!
3d548717f5 Fix by Sjoerd for a package related bug: If you have a non-empy __init__.py it isn't read.  (Sjoerd just came up with this, so it's not heavily tested.)
c87f5f4f7a Set the max recursion limit to 5000 -- rather conservative (this uses 0.5 MB of the 1 MB available by default for stack on Win32 platforms).
c03158bfc7 Jim Fulton writes:
fa71701d46 When deallocating a list, DECREF the items from the end back to the start.
8f3e15058c Set PATCHLEVEL and PY_VERSION (string version only) to 1.5.2+ to indicate to those that are using the CVS access that they are using a newer-than-1.2.5 version, without committing to a particular version number or patch level.
0dee4ee0f8 Updated lagging version#.  Also added some comments about how quote() and quote_plus() can be optimized tenfold.
db23d3dbf7 Patch by Per Cederqvist:
4727456d46 Add doc for timegm().
b39aff87f7 Add unrelated but handy function: timegm(), to calculate Unix timestamp from GMT tuple.
145a5f73f0 Don't just die if gethostbyaddr() fails -- as it can when DNS is unreachable -- but fall back to using whatever hostname we have.
56b20595e6 Oops, Sjoerd was in a hurry.  This patch from him fixes some length math in the Chunk class.
8ea7bb8e78 Patch/new code by Sjoerd Mullender: Separate the Chunk class out of the aifc module into a new "chunk" module.
1f2e09bc45 Fix (sanctioned by Sjoerd) for a problem reported by Andreas Faerber: all processing instruction target names containing 'xml' were rejected, instead (as the standard rejects) only the name 'xml' itself (or case variants thereof).
5116f90ece On David Ascher's recommendation: reversed order of 'utime()' and 'chmod()' in 'copy_file()'.
a8d0f4fd2d Sam's latest versions
cf09a3924f Skip Montanaro:
ab6a08a4b6 Hmm...  Tim didn't turn "replace all" into a single undo block. I think I like it better if it os, so here.
9745f5a74f Tim Peters: made replacement atomic for undo/redo.
0fcd635d41 Tim Peters:
df9f7a3e52 Tim Peters: Taught it more "real Python" rules without slowing it appreciably.  Triple-quoted strings no longer confuse it, nor nested classes or defs, nor comments starting in column 1.  Chews thru Tkinter.py in < 3 seconds for me; doctest.py no longer confuses it; no longer missing methods in PyShell.py; etc.  Also captures defs starting in column 1 now, but ignores them; an interface should be added so that IDLE's class browser can show the top-level functions too.
9a33707be7 Hacked 'set_final_options()' to set (hopefully) appropriate values for 'install_site_lib' and install_site_platlib' on non-POSIX platforms. Should at least work for NT, as this is adopted from Amos Latteier's NT patches.  Also added extensive comments bitching about the inadequacy of the current model, both under POSIX and NT (and probably other) systems.
c997334977 Added the 'have_run' dictionary to Distribution, and changed   'run_command()' to refer to it before attempting to run a command --   that way, command classes can freely invoke other commands without fear   of duplicate execution. Beefed up some comments and docstrings.
4d74d73b07 Now handles NT, through '_init_nt()' function (courtesy of Amos Latteier <amos@aracnet.com>).
3f75741844 Remove unnecessary reference to pyclbr from test() code.
ad380551f6 Experimental speedup patch by Tim Peters (please test!):
98c9eba945 Fix bug discovered by John W. Shipman -- when the width of a format specifier came from an int expression instead of a constant in the format, a negative width was truncated to zero instead of taken to mean the same as that negative constant plugged into the format.  E.g. "(%*s)" % (-5, "foo") yielded "(foo)" while "(%-5s)" yields "(foo  )". Now both yield the latter -- like sprintf() in C.
729afc1dff Tim Peters:
febebe9e79 Might as well enable CallTips by default. If there are too many complaints I'll remove it again or fix it.
1946f0d6f2 Patch by Jim Fulton: new function parse_qsl(), which is like parse_qs() but returns a list of (name, value) pairs -- which is actually more correct.  Use this where it makes sense.
fb278a5e6f Added an "optional" directive, that will include a module if it is available but not complain if it isn't (giving an ImportError when the frozen code is run).
c0d2d51dd2 (py-statement-closes-block-p): py-goto-initial-line could leave us in the line's whitespace.  back-to-indentation should /follow/ this call.
f4a15089a3 New offerings by Tim Peters; he writes:
b10cb9a383 Enclose pattern in quotes in status message.
23c115f1c9 Mark Hammond fixed some comments and improved the way the tip text is constructed.
ce900defc5 At Jim Fulton's request (actually, as a compromise :-), default the content-type to application/x-www-form-urlencoded only when the method is POST.  Ditto for when the content-type is unrecognized -- only fall back to urlencoded with POST.
094189f108 My fix to Mark's code: restore the universal check on <KeyRelease>. Always cancel on <Key-Escape> or <ButtonPress>.
6290dabdbb A version that Mark Hammond posted to the newsgroup.  Has some newer stuff for getting the tip.  Had to fix the Key-( and Key-) events for Unix.  Will have to re-apply my patch for catching KeyRelease and ButtonRelease events.
85b9735768 Call tips by Mark Hammond (plus tiny fix by me.)
1709041e73 Changes by Mark Hammond: (1) support optional output_sep argument to the constructor so he can eliminate the sys.ps2 that PythonWin leaves in the source; (2) remove duplicate history items.
808fa4993e Changes by Mark Hammond to allow using IDLE extensions in PythonWin as well: make three dialog routines instance variables.
d395aeeaa4 Change by Mark Hammond to allow using IDLE extensions in PythonWin as well: make three dialog routines instance variables.
a954ba1d6c Hah!  A fix of my own to Tim's code! Unix bindings for <<toggle-tabs>> and <<change-indentwidth>> were missing, and somehow that meant the events were never generated, even though they were in the menu.  The new Unix bindings are now the same as the Windows bindings (M-t and M-u).
bbaba85402 Tim Peters again:
a6be3870b3 Tim Peters again:
8113cdc3a8 New file by Tim Peters:
d93f739556 Tim Peters keeps revising this module (more to come):
198e7cac5a Andy Dustman notes that I patched the close() call in the wrong place. Here's the correct patch!
6b708d569c In class TemporaryFileWrapper, don't cache attributes of tpye int -- these happen to be 'closed' and 'softspace', which may change!
74311b2c27 1. Catch NameError on import (could be raised by case mismatch on Windows). 2. No longer need to reset pyclbr cache and show watch cursor when calling    ClassBrowser -- the ClassBrowser takes care of pyclbr and the TreeWidget    takes care of the watch cursor. 3. Reset the focus to the current window after error message about class    browser on buffer without filename.
292dd2d1af Missed a few.
ec9cca776a Rewritten based on TreeWidget.py
1ff48ec852 Object browser, based on TreeWidget.py.
7419f4b290 Tree widget done right.
d3a518b661 As yet unused code for tool tips.
ee03611a8d Ensure sys.argv[0] is the script name on Run Script.
96cf271be9 Move zoom height functionality to separate function.
5fac2ab220 Fix availability clause; mention availability of similar functionality for Windows using win32pipe.
32465f4148 A few icons used by ../TreeWidget.py and its callers.
8234dfcccb New version by Tim Peters improves block opening test.
116b31bed7 Jack Jansen's patch to support file:///path/file/name URL syntax.
fa8c3eab79 Greg McFarlane writes: Tkinter.Text.tag_add should take multiple arguments.  [Slightly changed from submitted patch.]
f63b8cc07c posix_listdir(): When an error occurs, call posix_error_with_filename() instead of posix_error(), passing in the name argument, so you get information on which directory was being listed.
f1882422d2 Oops, forgot to remove the individual module indexes for lib & mac now that there's a Global Module Index; there can be only one!
3c27ec2c05 Add <hr> after top navigation bar; now looks more like the rest of the navigation bars in the HTML output.
d2a727feee Hack: make sure LaTeX2HTML doesn't change -- to - in mkhowto description.
3aa70d63b9 Document the "pid" attribute of the Popen3 class.
a7ce52b03a Typo reported by Gerry Wiener <wiener@rap.ucar.edu>:
abc8cc63ce Move some \index entries around so we can avoid using empty comments; empty comments trigger a bug in LaTeX2HTML.
82f355a36a Change the example of configuring for large file support under Solaris to use `getconf LFS_CFLAGS`.  Steve Clift (the author of the section and large file support) agrees that this is the right thing to do.
a20fdcdd14 Eugene Dvurechenski <jno@glas.net> says:
6b330ba857 "proces" --> "process"; reported by Gerry Wiener <gerry@ucar.edu>.
fa2def2a61 (py-electric-backspace): I'm not sure this function should be special casing when py-honor-comment-indentation is nil, but this could be a religious issue with some.  Seems to me we should still be dedenting such comment lines one level.
53db859408 (py-parse-state): When running under Emacs -- which doesn't have buffer-syntactic-context -- just short circuit the TQS test by jumping to point-min and doing the test from there.  For long files, this will be faster than looping with a re-search-backwards.
a8f99ba2d2 (py-statement-closes-block-p): Add a py-goto-initial-line which fixes indentation when the return value is a multiline sexp:
c7ba0800dd Oliver Steele writes: """Despite the best intentions of Anarchie and Internet Explorer, I often end up with Python source files (and other text files that I'd like to edit with PythonIDE) that use '\n' instead of '\r' as a line separator (and therefore sh
8bfefce75e On HP-UX, -rpath is another option taking an argument that needs to go to the libs variable.  Reported by Albert Chin-A-Young.
18659608dc Andy Dustman writes:
b6f8cf123e Rename History to IdleHistory. Add isatty() to pseudo files.
945507edf6 Make initial stack viewer wider
2092b439be New wishes
def2c96718 Much improved autoindent and handling of tabs, by Tim Peters.
c40c54782c Map .js to application/x-javascript.
0eb7b2a659 Enhanced docstring and some comments.
c4811d8208 Modify to perform "---" to "&mdash;" conversion outside of verbatim-like environments.  The list of verbatim-like environments is a defined by a variable in main().
c41e1e5f5e Remove the "---" to "&mdash;" conversion; this is wrong in verbatim environments.  Move the conversion to esis2sgml.py.
338da93734 SET_LINE_NO ==> SET_LINENO
0e6444c709 Added "Learning Python" to the books section.
33378da964 Added paragraph explaininng the text/binary flavors of some methods, to make it easier for people to find what they're looking for.
d1fb77970d Document \e, \url. Add a few more comments about mkhowto.
4f52867d95 Don't \input boilerplate.tex, fill in the real stuff.  3rd party documents probably aren't written by Guido.  ;-)
87f768e20b Attempted to clarify usage of the \declaremodule macro somewhat; Michael Hudson's documentation for bytecodehacks exhibits incorrect usage.
3e4c614c16 define_module():  Check the module type for validity before using. 		  This reflects the changes made in 		  ../texinputs/python.sty.
66823029a4 \declaremodule:  Typo.
5bc8d99bce \declaremodule:  Make this more robust.  Only attempt to add an index 		 entry based on the module type if the type is known. 		 Otherwise, spit out a warning the the module type 		 parameter was bad and generate a "plain" index entry.
8ee593cb46 The conversion temporary files should not be ignored here anymore, since they shouldn't be here.  Only ignore the output tarballs in this directory.
dbc2d08ff5 POP3.uidl():  Update description based on comments from Piers Lauder 	      <piers@cs.su.oz.au>.
361c048b8f POP3.uidl():  Update docstring based on comments from Piers Lauder 	      <piers@cs.su.oz.au>.
dab44682c2 PyCObject_FromVoidPtr():  Clarify that the destr function will only be 			  called on destruction is non-NULL.
431f0ce547 Small nits around some of the index entries.
ab03215204 make_index_entry():  Remove.  Not only did this override the 		     l2hinit.perl version of the function (which 		     overrode a version in latex2html), but 		     do_cmd_index() was overridden.  Since 		     do_cmd_index() was the only caller, we can trash 		     this.
76febdf3fd make_index_entry():  Remove.  This is overridden in python.perl and 		     was never called in this incarnation.  The 		     other version is simpler as well.
7088df4c56 Removed old comments.
84bd6f3b18 Change the look of \seemodule output to fit in better.
03c05a5192 Move the "See also:" section so it appears are part of the top HTML page of the section.
184e8360e8 Added module references; minor grammatical fixes. All suggested by Eric Raymond.
9ade7e0110 Added missing comma, reported by Eric Raymond.
e779d4f03b Lots of adjustments to deal with the document content now being stored in a fragment rather than the main document object.
54fb7fb9d0 Some more fixes.
b894370f6a Fixed some index entries.
2697694e4a ExtendedEsisBuilder.push():  Override inherited definition.  We don't 	want to push nodes into the document, but into a document 	fragment, since we're not necesarily working with something 	that's well-formed.
f79acbdaa1 Fix some bugs introduced in the previous checkin.
96c00b0b5e Define & use a Conversion object.  It's still really ugly, but at least there's a token object in here now!  ;-)
b0bc7f2d6c Updated connect_ex() documentation based on comments in the newgroup (M.-A. Lemburg and GvR).
a871c2e747 Make it work for "manual" documents as well as "howto" documents. This still doesn't understand anything about multiple source files or checking time dependencies.
1ea7c75687 Reflect recent patch for float % and divmod() by Tim Peters.  Content updates by Tim Peters, markup by FLD.
9263e78ff2 Tim Peters writes:
8e40759d5a Nathan Paul Simons noticed that the grid_remove() method was missing. (The difference between grid_remove() and grid_forget() is that the former remembers the options for the slave.)
3ed1be9fbd Regression test for date format code, by Mike Meyer. (I tweaked it slightly so examples are allowed to have no date too.)
4f13669cf0 No need to import find().  (Andrew Dalke & kjpylint)
73898c7b15 No need to import os or string.  (Andrew Dalke & kjpylint)
96d80f984a No need to import sys.  (Andrew Dalke & kjpylint)
138bdafa8d Typo.  (Andrew Dalke, without kjpylint)
6952f17f31 No need to import string.  (Andrew Dalke & kjpylint)
ff3932abcd No need to import os in test().  (Andrew Dalke & kjpylint)
699f3bbba3 Get rid of confusing 'global' statement in global code. (Andrew Dalke & kjpylint)
1e1cfa3a1c No need to import sys or string.  (Andrew Dalke & kjpylint)
1cc2b9de35 Clarify why we define disco.  Suggested by Andrew Dalke.
287b3996d5 Clarify why we define error.  Suggested by Andrew Dalke.
db6d12c498 No need to import sys or linecache.  (Andrew Dalke & kjpylint)
00245cfbaa No need to import gmtime, ctime, asctime. Make error an alias for ValueError. (Andrew Dalke & kjpylint)
92b44517cb Clarify why there are dynamic imports in AudioDev(). This will enlighten Andrew Dalke; I don't know about kjpylint. :-)
5c071fab8f The _comp_data() function never worked, it contained a reference to undefined 'nframes'.  Should be self._nframes.  (Andrew Dalke & kjpylint)
f8fd11d039 No need to import sys, time, socket or SocketServer.  (Andrew Dalke & kjpylint)
3a64e058eb No need to import sys, time, or socket.  (Andrew Dalke & kjpylint)
e6e8818c03 No need to import rfc822.  (Andrew Dalke & kjpylint)
318a70d976 Tim Peters writes:
2d6a568a0f Tim Peters writes:
b46413f274 The case-insensitive _Environ class was lacking a case-insensitive has_key().
4437fdf265 Make sure latex2html doesn't produce a hard link between foo/foo.html and foo/index.html.  Make a copy instead.  (Appearantly some tar openers on non-Unixlike systems can't handle hard links.)
d2d1eef025 Make sure latex2html doesn't produce a hard link from $part/$part.html and $part/index.html.  Make a copy instead.  (Appearantly some tar openers on non-Unixlike systems can't handle hard links.)
884df454b2 The 'copy_file()' and 'copy_tree()' functions in util.py now have meaningful return values: respectively, whether the copy was done, and the list of files that were copied.  This meant some trivial changes in core.py as well: the Command methods that mirror 'copy_file()' and 'copy_tree()' have to pass on their return values.
0f72695da3 Rearranged things so that compilation of .py files is the responsibility of the 'install_py' command rather than 'build_py'.  Obviously, this meant that the 'build_py' and 'install_py' modules had to change; less obviously, so did 'install' and 'build', since these higher-level commands must make options available to control the lower-level commands, and some compilation-related options had to migrate with the code.
85460a58f8 updates for latest release
7238401488 Support for using idle as a package.
ab005d5f6c Revert constraint on the GIF wildcard; we missed a few!
78608120de Avoid listing files more than once (e.g. foomodule.so has two hits: once for foo + module.so, once for foomodule + .so).
8961bd1529 Added top navigation bar for consistency and color.  There's not a lot there, but the "modules" icon is active.
a00754468f make_nav_panel():  Remove the spurious NAME="tex2html\d+" attributes 		   added to the anchors in the navigation bars.  These 		   are added somewhere deep with l2h, and are stupid.
50c507e4b4 Added wcnew target to run the "wcnew" version of webchecker.
673c65e500 Use the new module-key for the FL module when hyperlinking (the old one caused problems on case-insensitive file systems).
dbf7d99ae7 For the tutorial, use numeric node names and split by chapter.
c1db512b2b Nasty hack to add a --numeric parameter to skip the use of "logical" names.
664c72f8a1 Move index.html rules to the end since it wedges font-lock.
d09120b5b9 Added index entries for operator precedence; suggestion from Randall Hopper <rhh@vislab.epa.gov>.
62e80138f4 Make sure the global module index is added to the HTML tarball.
5cc0a9b252 Generate index.html from index.html.in.  This avoids having to modify the index to update the version number; boilerplate.tex remains the only document source for this information.
fe1e207841 Constrain a wildcard a little more.
d03e9e34de Don't point readers to rand, point to random!  And make it a hyperlink while you're at it.
bdadf0f7f3 Explain comments at the start of chapter 3.  This is needed since they appear in the examples without any further explanation, and the tutorial doesn't have this information explicit anywhere else. Omission reported by Jon Black <jblack@Ridgeway-Sys.com>.
0e1de8bd6b Minor nits, partly in response to comments from Jonathan Black <jblack@Ridgeway-Sys.com>.
b08f51b93a Mike Meyer reports a bug in his patch (several months ago) that accepts long month names.  One essential line was missing.  Fixed now.
9ef8635c8c Annotate a couple of entries further.
0041a94e74 Fill in a few holes in the "Very High Level" chapter.
5f342ac2a7 Always use "section" when referring to sections of a document, not "Section".
a4a90ddeac Clarify that the Modules/ directory is in an unpacked source distribution; this is not clear for Windows users.
c0fcbc1ac6 Update starship URLs.
ddf22c4243 Message.getheader():  Fixed grammatical error in docstring.
a4b055ff89 Add a scale widget and command line options to set the output volume.
c7c9a64833 Remove the \date macro; just pick it up from boilerplate.tex.
ea0020571f Use \rfc to mark some remaining RFC references.
5712fa9250 Added test case that includes a comma in the full name.  This tests for an old bug that's been gone a while, but was still documented until a few minutes from now.
ea07f2751a setup_column_alignments():  Adding valign=baseline to the <td> tag 			    makes the alignment work on Navigator as 			    well as IE.  Uglier HTML, but it looks 			    right.
250ba78565 Let's try again: new assertion.
610172b0de Removed (empty) description of \optional from the "Inline Markup" section; that's not really the right place for it.
2f4bebd28c Fill in a few holes.
ac3dc83eb6 Fix up the HTML generated for envdesc and macrodesc environments. Make it possible for the user to tell the difference.  ;-)
d02573d13b Handle \p and \op in parameter lists for the environment and macro description environments.
4050e00e41 Adjust the message that gets added to the bottom of each page about where to send comments.
0a0fd595b3 \filenq:  Like \file, but don't use single-quotes; this looks better in tables.
f74e5b7936 Control the layout of output tables a little better so they're easier to debug.  Small code cleanup around tables.
cf282cdafb Point to the library reference manual for os.path documentation (in macpath section).
79189b5fd5 do_cmd_seetext():  Clean up so we get proper nesting of <div>s.  This 		   fixes a rendering problem on IE5.
630b811676 Two changes suggested by Jan Pieter Riegel:
a8acf72afa Need to double the macro brackets in FreeBSD check. (My fault, not Dom's -- he submitted a correct patch to configure.)
3369927322 Use the much nicer tkFileDialog for loading color name database files (thanks Fred!)
a853adc110 Document that for askcolor(), databasefile and wantspec can now be set on every invocation, instead of just the first.
80d83e38ab askcolor(): databasefile and wantspec can now be set on every invocation, instead of just the first.
9af697b85d Implement dynamic external Viewer discovery.
f3ebf90d2c Add a module global variable ADDTOVIEW to conform to dynamic viewer lookup protocol.
2095b2fe14 Added docstring describing Viewer interface.
b61a28e240 add a comment
505c49199a Added "See also" reference to PyOpenGL.
7b2812211a When selecting a radio button in the TextViewer (to change a specific text widget attribute), the color the attribute currently has is set in the main widget.
f5e98572e5 Change Black/White button labels to not include the arrow
3f36a085fe Cast f.tell() result to int() in _addval(), so it works even on platforms where tell() returns a long.  (Perhaps tell() should be fixed too?)  Reported by Greg Humphreys.
74109a149e Describe namedcolors.txt
3e9c75d3f2 An alternative Netscape database
a25223faf4 Describe how to load a new database
821d8b73e8 Describe the Color database files
6e7f6ea756 Put the 'File' menu on the menubar even when modal, so users can get to the 'load palette' entry.   Just don't put the quit button on there.
3f01c724fd Tim Peter's sister's 140 named colors that NS and MSIE understand (with some controversy surrounding AliceBlue :-)
a04988a8dd The "Web-safe" colors (all #rrggbb style)
375b11635b The HTML 4.0 guaranteed colors.
d515a7ea3d Set the version number to 1.0 -- I think it's stable enough
0604d72318 Lots of changes to support loading alternative color name database. You can switch database by just loading the new one; the list window and nearest colors adapt to the new database.
0ec1493d0b Some changes (maybe not enough?) to make it work on Windows with local file URLs.
26c2cb4bd1 Tim Peters strikes again:
c020e2d36c Bill Bedford's Apple Data Detector extensions for Python. Unchanged, except for the readme filename. Untested too, because I don't have ADD/IAD installed yet.
d9f3c94478 added 'org.python.core' to the maymiss list (pickly.py tries to import it, probably for JPython support) -- jvr
f98e692257 removed two redundant lines -- jvr
dcf17f3860 mhlib is now documented.
a4966647ec Markup consistency.
1c7cd63a2b Nits.
957ac3fadb Add section for the sha module.
ea424e19f1 Apparently __GNU_LIBRARY__ is defined for glibc as well as for libc5. The test really wanted to distinguish between the two.  So now we test for __GLIBC__ instead.  I have confirmed that this works for glibc and I have an email from Christian Tanzer confirming that it works for libc5, so it should be fine.
154fc6dcf7 Patch from Greg Ward adding descriptions of S_IMODE() and S_IFMT(), and an explanation of why any of stat.S_*() would be used instead of os.path.is*().  (With some really small enhancements by me.)
24aca83dbd Fixed typo and font-control problem reported by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
29cf682b71 Clarifications on the first(), next(), and previous() functions, based on comments from Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
861192120b Fix a grammatical error reported by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
ec8b905bd4 Fix a couple of typos reported by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
16214fb017 Fix a couple of grammatical errors reported by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
4aa4f30759 Work-around LaTeX2HTML space-dropping bug.
87b8f318b0 Fixed some logical markup nits.
deb7e096d3 Logical markup.
806764bee4 No, __repr__() does not accept a parameter other than self.
0fbec55e23 Shorten the section title.
c2aadcd96a Added /usr/lib/X11/rgb.txt in front of X/rgb.txt for Linuxers
eea97ea063 Shorten the section title.
86bd5e48c3 Shorten the section title.
7475e04fad Work around a space-dropping problem in LaTeX2HTML.
ae35aa8b63 Added "See also" sections linking to binascii.
ee4d54ea33 Refer to the binhex module, not the non-existent hexbin module.
26f7cfe9c7 Fix some glaring markup consistency problems (presentation was broken).
10682c28b4 Added a couple more requests from users.
812860e81d Hack places where '--' should appear as literal output but the -- was (properly) converted to - by LaTeX2HTML.
d960dc81b5 Fix square brackets around optional parameters to macros.
7a737dffc4 General small improvements and fixes.
9dd52099fa Provide full arguments to __import__ so it works in packagized IDLE.
06b787bdd1 Bunch of updates necessary due to recent changes; added docs for File menu, command line and color preferences.
dc7bfc44a2 Remove obsolete 'script' menu.
4c6d0c7382 Several wishes fulfilled.
70f6d99753 Moved classes OnDemandOutputWindow and PseudoFile here, from ScriptBinding.py where they are no longer needed.
1f3de5d7b9 Mostly rewritten.  Instead of the old Run module and Debug module, there are two new commands:
3af507de11 - made "Save options..." dialog more generic, so it's also usable from RoboFog - mark file as dirty after changing the creator of the file so we can_save... -- jvr
6c487c4d34 fixed glitch when scrolling very long files -- jvr
ffbe68723a Make internal module references hyperlinks wherever it makes sense.
7b8b125fa6 Remove bogus characters in code sample.
27f550cdd5 Nits: document use of $IDLESTARTUP; display idle version
fcf94d4edd Work around LaTeX2HTML comment-handling bug.
4a406c619b Shorten the section title.
e1e1488319 New version to celebrate new command line
3d0ff00c08 Added flush(), for completeness.
eeb88076e7 A lot of changes to make the command line more useful.  You can now do:   idle.py -e file ...    -- to edit files   idle.py script arg ... -- to run a script   idle.py -c cmd arg ... -- to run a command Other options, see also the usage message (also new!) for more details:   -d       -- enable debugger   -s       -- run $IDLESTARTUP or $PYTHONSTARTUP   -t title -- set Python Shell window's title sys.argv is set accordingly, unless -e is used. sys.path is absolutized, and all relevant paths are inserted into it.
c4a623ebdc Add command line flags to just list the files that contain the offending lines or to include line numbers in the output.
c8c40ff699 Added a "See also" section with some external references.
4e28c593ad Markup nits.
b7168c3a07 Clean up lots of mark up.
79936fe73f Added descriptions of the various exceptions, based on the docstrings.
c8993aad10 Logical markup and small nits.
12a956921f Make some module references hyperlinks.
b774550ba5 Minor logical markup nits.
dd6c6d9b0a Clean up some mark up.
e2effbd32d Fix minor (English) usage nits.
bcd5454d63 Reference to urllib module can be a hyperlink.
4429772ea3 Fix dropped space in the HTML output.
babdda53d5 Make reference to the socket module a hyperlink.
bf0f4346af Shorten the section title.
47894d2858 Don't describe this module as being a popen() wrapper; that's a little confusing.  This is clearly Unix-specific; label it as such.
a694e00085 Remove \platform declaration; this module is generic.
5254a6d682 Move stat to the Generic chapter.
ca69a03dd6 Don't refer to the system documentation as "man pages"; too Unix-centric.  Note that this can be used with the output of os.fstat() as well as os.stat() and os.lstat().
7bf96ca32d Make an assertion.
6532b9b8e0 Updated a comment and the release number.
9f5362bfa6 Some more TODO items.  Made up my mind about command line args, Run/Import, __main__.
2ea30f4d8c Add warning that last() and previous() don't work for hashtable databases (opened using hashopen()), as noted by Skip Montanaro on comp.lang.python.
e62e76c383 Super-elegant patch by Tim Peters that speeds up colorization dramatically (up to 15 times he claims).  Works by reading more than one line at a time, up to 100-line chunks (starting with one line and then doubling up to the limit).  On a typical machine (e.g. Tim's P5-166) this doesn't reduce interactive responsiveness in a noticeable way.
693a2c6581 Script to locate uses of \module where the module referred to is not the module being documented at that point in the documentation; these are candidates for conversion to \refmodule, which produces a hyperlink in the HTML and PDF versions of the output.
e0208cc83c Add a couple of items.
adade928be Fill in a lot of the blanks.  Add a start to the LaTeX primer section.
30a535c0f7 Added support for adding environment/macro parameters more cleanly: \op adds an optional parameter, and \p adds a required parameter. These are only defined in the context of the parameter list parameter of the envdesc and macrodesc environments.
eda232fdac Allow longer strings (up to 80 chars each) for version, build, compiler info.
b9f1f6d90b Misc. markup nits.
2dabd811cd Fix markup typo.
d146edfaf1 Mark the "Notes:" sections under tables the same way it's done elsewhere in the library reference.
b11d108cdc The version information here was checked good in 1999, not 199.  ;-)
2799f9d09a Reflow paragraph to work around LaTeX2HTML dropping a space.
6d20caa2ce Reflow paragraph to work around LaTeX2HTML dropping a space.
543e19d923 Small nits, more hyperlinks.
048b75bd9a Make references to whrandom hyperlinks.
ec6baaf618 Small markup nits.
54f2fdd1ad Make the names of the referenced modules hyperlinks; they had not been marked at all.
02e8c0fd2d Nits.  Reference to signal module becomes a hyperlink.
283c588402 Work around LaTeX2HTML comment-handling bug.
318c0b131f Logical markup nits.
c3845a14d3 Logical markup & other small nits.
11bc8cfee3 Explain *why* the copytree() implementation is presented as the example!
e688aec707 Textual references to the glob module can be hyperlinks.
eeb63fd6c2 FreeBSD/[34]* change, Dom Mitchell.
737aa552f4 Markup nit to fixed dropped space in HTML output.
20c92283ab Patch by Per Cederqvist, seemingly approved by The Dragon:
4747f7f61d Markup nits.
4f6e4fbc1d Added "See also" reference to xdrlib.
69fa56327a Markup nits.
8307e21a2a Mark the references to module names use \module or \refmodule (the closing paragraph used \code).
6ed122a334 Important fix mentioned by The Dragon De Monsyne: the sendmail() method does _not_ disconnect the connection when it throws a SMTPHeloError!
eda80eae36 Correct spelling of length, discovered by Christian Tismer.
a889add5d6 Oops; minor nit in example: none of the other interactive examples show the "trailing" prompt, so don't show it here!
ca675e491b do_cmd_funcline():  Remove some bogus generated stuff from the output 		    (some text was only intended for the index).
3d815bd1c7 Added link to xdrlib module in "See also" section.
da4b25e0d9 Patch by Tim Peters to speed up colorizing of big multiline strings.
743007d2fe Patch by Christian Tismer for Win32, to use FormatMessage() instead of strerror().  This improves the quality of the error messages.
085b8121eb Fix some remaining index & consistency nits.  (Many data member references were being omitted from the general index.)
c3fcd6fa0e Added index entry for "file objects"; this is appearantly referenced somewhere in the Reference Manual, and someone tried to locate it via the index.  Report on the omission by Stefan Franke <sfranke@cdc-group.com>.
eb67a7b980 improved scrollbar delay behavior -- jvr
7ceb5777d7 Added doc for the "module" attribute on the class descriptor objects; omission repoorted by Glyn Webster <glyn@ninz.org.nz>.
79d4398c30 For an event 'foo-bar', the corresponding method must be called foo_bar_event().  Therefore, fix the references to zoom_height() in the example.
a670d0c97b Restored the original IDLE color scheme.
7de697597e Color preferences code by Loren Luke (massaged by me somewhat)
cfb819ee51 Patch by Mark Favas: it fixes the search engine behaviour where an unsuccessful search wraps around and re-searches that part of the file between the start of the search and the end of the file - only really an issue for very large files, but... (also removes a redundant m.span() call).
ad56dafd62 Added example use of pack_list() to help explain the pack_item parameter.  Lack of clarity reported by Matthew Gallagher <hew@hons.cs.usyd.edu.au>.
068d5724d8 Calling _cleanup() does not guarantee that all processes have terminated; this makes the final assert in the self-test code fail if the parent runs faster than the children.  Fix this by calling wait() on the remaining children instead.
4ae52694c9 Updated to reflect additions.
32c562bdec colorsys docs from David Ascher.
9d15881744 bsddb docs from Skip Montanaro; added interesting links.
247a78a10d Utility function that yields a properly formatted time string.
f340114d72 Relocating file to Lib/lib-tk.
1b9e0aae6e Jim Fulton writes:
dc8b569155 Patch from Tim Peters to repare a the problem that tracebacks are off by a line when Python is run with -x.
9bcd1d7931 Improve text of some error messages, as suggested by Sean Reifschneider.
0cf46bc0f4 Daniel Neri: OpenBSD is just as BSD'ish as the other BSD's ;-)
ae84e8d0f6 Patch by Drew Csillag for FreeBSD's sh, which doesn't automatically join \-terminated lines.
a7379d9a34 Avoid triggering Alpha OSF/1 specific code on Alpha NT or Linux.
0a2818fe5b A few wishes are now fulfilled.
17c516eacb Tim Peters implements some of my wishes:
e9af64c373 Remove superfluous index entry for posix.popen(); no longer appropriate since popen() is only documented in os.
dac9a4e3db Added link to Fredrik Lundh's online Tkinter reference material.
31bfbc6bff Minor nits, include author info.
511281ac00 In list of sequence comparison examples, "=" should be "==".  Reported by Mirko Liss <n89553@hrz.uni-paderborn.de>.
4e5a7c7056 'warn()' method now takes an optional line number.
0ebd5483be Removed dbhash from the undocumented list.
460f1dd6b7 Add libdbhash.tex.
666255f5ac Document the dbhash module, and link to it from appropriate places.
f4cbada3f9 Correct documentation for <file>.read(); Python makes a serious best-effort to return 'size' bytes.  Point out that this may mean multiple fread() calls.  Reported by Anders Hammarquist <iko@iko.pp.se> via the Debian crew.
e79f5c1d2b Use the standard stylesheet here as well.
6ab98325f7 Use the tools/mkdvi.sh script to generate DVI and PDF output for the library reference now that it's sufficiently capable.
c260c0bcdb Further refinement, to allow this to handle the library reference as well as the other "manual" documents.
011f6fca31 Typo: "Otherwose" --> "Otherwise"  (reported by Joakim Sernbrant <joakim.sernbrant@front.se>).
79d41ccdd3 Add some support for the module index, so this can be used to build the .aux file for any of the "manual" class documents.
7a64b355c1 For now, comment out the \ignorePlatformAnnotation; the global index doesn't really work with this.
9444df0844 Don't include the verbatim style; the default handling is better.
1cc5899742 Fix problem of LaTeX leakage in the module synopsis tables at the beginning of chapters.  Known problem reported by Barry Scott <barry@scottb.demon.co.uk>.
e331356ff7 Fix availability declaration for popen2 module; report by Barry Scott <barry@scottb.demon.co.uk>.
b9971b9964 Minor cleanup.
592dd78408 Fix availability declaration for stat module; report by Barry Scott <barry@scottb.demon.co.uk>.
31ec33ed60 Work around problems with HTML conversion by making the break and tbreak synopses be all on one line (each).  Known problem, most recently reported by Barry Scott <barry@scottb.demon.co.uk>.
cc10e0469a Just in case a copy of the documentation gets released somehow...
60d67c7afe This commit was manufactured by cvs2svn to create tag 'r152'.
b65a43a970 News for 1.5.2 (final).
72bacaa2c9 Bump version to 1.5.2 (final)
2da1320561 Added shamodule.c
be211a5019 Added sha module!
9e47859963 Prepare for final release.
8f9fabd360 More (Cameron Laird is honorary; the others are 1.5.2c1 testers).
495894ee66 While I can't really test this thoroughly, Pat Knight and the Solaris man pages suggest that the proper thing to do is to add THR_NEW_LWP to the flags on thr_create(), and that there really isn't a downside, so I'll do that.
7cf904736e Bunch of new names who helped iron out the last wrinkles of 1.5.2.
a946210a9f Bump the myusterious M$ version number from 1,5,2,1 to 1,5,2,3. (I can't even display this on NT, maybe Win/98 can?)
0d3be0aa55 Class around PixMap objects that allows more python-like access. By Joe Strout.
dabcd0040c Fix mysterious references to jprofile that were in the source since its creation.  I'm assuming these were once valid references to "Jim Roskind's profile"...
ba3ed56a22 Removed; since long subsumed in Doc/lib/libthreading.tex
7a1229991d Put back __osf__ support for gethostbyname_r(); the real bug was that it was being used even without threads.  This of course might be an all-platform problem so now we only use the _r variant when we are using threads.
761fcd03aa Fix accidentally reversed NULL test in load_mark().  Suggested by Tamito Kajiyama.  (This caused a bug only on platforms where malloc(0) returns NULL.)
fe23ad7283 Add note about popen2 problem on Linux noticed by Pablo Bleyer.
59a88f4ba7 Add note about -D_REENTRANT for HP-UX 10.20.
d4b8b09a73 'clean' target should remove hassignal.
07bd1d1b7b Ignore the doc/ directory ("Documenting Python").
a0e6be721b Remove all VC++ info (except VC 1.5) from readme.txt; remove the VC++ 4.0 project file; remove the unused _tkinter extern defs.
31ae207708 Clarify PC build instructions (point to PCbuild).
aee9bb2d0b Cast added by Jack Jansen (for Mac port).
0fe110548d Forgot to add this file.  CDROM device parameters.
95bdd0b604 Two different changes.
65f685b7aa Removed reference to the PSA (PSA membership no longer needed for CVS access). New location for MacCVS.
d7c18c43bf No longer needed.
913a32632f Correct missed character in Andrew Dalke's name.
e1cdb1620b Add DEC Ultrix notes (from Donn Cave's email).
96f2eb93e3 The usual
8bc1dfd2fb Quote a bunch of shell variables used in test, related to long-long.
ff1ccbfc21 casts for picky compilers.
cbf8906f5d 3-arg gethostbyname_r doesn't really work on OSF/1.
dcb0a57874 Avoid totally empty files.
bfb092eb86 Misspellling:  "occurance" --> "occurrence"
d68a4bd56c Use re instead of regex. Don't rewrite the file in place. (Reported by Andy Dustman.)
2e1094e4ef Use #!/usr/bin/env python instead of #!/usr/local/bin/python.
6a86f66ad7 Get rid of #! line
6ddbfb9ff2 Oops, try again. Test checkin (empty line) to see whether the new mailman-based PythonMac-checkins mailing list works.
08175476bd Test checkin (empty line) to see whether the new mailman-based PythonMac-checkins mailing list works.
4c6958dde1 Use the Tcl 8.0.5 installer. Add a variable %_TCL_% that makes it easier to switch to a different version.
c7afd2c7bb This commit was manufactured by cvs2svn to create tag 'r152c1'.
6804b7aee0 Release 1.5.2c1.  Add IDLE and Uninstall to program group. Don't distribute zlib.dll.  Tweak some comments.
fd498bd48b Now using static zlib 1.1.3
2aeba704d6 # File location for tut.tex and URL for Aaron Watters' tutorial have changed.
21ad59f1ee # TODO entries changed
9a744a9dd7 The usual
6d0de99d8d Release 1.5.2c1
42efa61f65 Release 1.5.2c1.
0b7dd08d50 # Bah.  The same problem occurred a second time.
437cfe842f News for the 1.5.2c1 release.
9b112799bc On Windows, we suddenly find, strftime() may return "" for an unsupported format string.  (I guess this is because the logic for deciding whether to reallocate the buffer or not has been improved.) This caused the test code to crash on result[0].  Fix this by assuming an empty result also means the format is not supported.
60cc90ec98 This demo imported some private code from Matt.  Make it cripple along.
6e9dadc1da Delete an accidentally checked-in feature that actually broke more than was worth it: when deleting a canvas item, it would try to automatically delete the bindings for that item.  Since there's nothing that says you can't reuse the tag and still have the bindings, this is not correct.  Also, it broke at least one demo (Demo/tkinter/matt/rubber-band-box-demo-1.py).
b738d26e2d Win/CE thread support by Mark Hammond.
b729a1d0a8 Patch by Andrew Kuchling to unflush() (flush() for deflating). Without this, if inflate() returned Z_BUF_ERROR asking for more output space, we would report the error; now, we increase the buffer size and try again, just as for Z_OK.
052364b20b Use binary mode for all gzip files we open.
00b6d0f224 New change log.
a2ca434cfc New version.
b6987b13fe Alas, get rid of the Win specific hack to ask the user to press Return before exiting when an error happened.  This didn't work right when Python is invoked from a daemon.
a99c5db3aa Version bump awaiting impending new release. (Not much has changed :-( )
1e7b0acb4d Removing an unused image of a snake. I don't know what its origins are but I think I've seen it once in a NeXT dictionary application -- not sure whether anyone owns copyright but I don't see why we should risk it.
0d8d3dd5b0 lower, tkraise/lift hide Misc.lower, Misc.tkraise/lift, so the preferred name for them is tag_lower, tag_raise (similar to tag_bind, and similar to the Text widget); unfortunately can't delete the old ones yet (maybe in 1.6)
2571cc8bf5 Changes by Mark Hammond for Windows CE.  Mostly of the form   #ifdef DONT_HAVE_header_H ... #endif around #include <header.h>.
99fb7c70f4 Remove unused variable from complex_from_string() code.
bd341fa82a Add the possibility of a gamma release (release candidate). Add '+' to string version number to indicate we're beyond b2 now.
7969f31c4d Updated documentation by Per Cederqvist.  I've added back the documentation sendmail() to reflect the changes by The Dragon (see smtplib.py checkin).
8c67e4e8c9 Add extern decl for fsync() for SunOS 4.x.
296e14301a Changes by Per Cederquist and The Dragon.
630a9a6894 Fix the tests now that splitdrive() no longer treats UNC paths special. (Some tests converted to splitunc() tests.)
f3c695c467 Withdraw the UNC support from splitdrive().  Instead, a new function splitunc() parses UNC paths.  The contributor of the UNC parsing in splitdrive() doesn't like it, but I haven't heard a good reason to keep it, and it causes some problems.  (I think there's a philosophical problem -- to me, the split*() functions are purely syntactical, and the fact that \\foo is not a valid path doesn't mean that it shouldn't be considered an absolute path.)
8137680704 For BeOS PowerPC.  Chris Herborth.
4f21d54764 Added more "See also" entries, + 1 inline hyperlink.
ea003fcc2a Fixed latex2html weirdness with footnotes.
45b0aeda3c correct version info for zlib.
0ffdd05cc3 Jonathan Giddy notes, and Chris Lawrence agrees, that some comments on #else/#endif are wrong, and that #if HAVE_TM_ZONE should be #ifdef.
93aa0f23a7 Fixed latex2html weirdness with footnotes.
b55ce1e8b6 Fixed latex2html weirdness with footnotes.
52e2d51ef3 Fixed latex2html weirdness for a footnote.
9aa8543c84 open() description:  Made it more clear that 'b' should always be 	added to the mode value for binary files to improve 	portability.
ae14230069 Bunch of new contributors, including 9 who contributed to the Docs, reported by Fred.
01553706bf Added a few items to the "See also" sections at Guido's prompting.  Made more references to other modules in the text hyperlinks for the HTML and PDF versions.
766e0cbde1 Added "doc" target to match the other document-prefix targets.
50ae47b0de Removed bosities around example code; not sure where that stuff crept in!
1dc3a501a6 Made improvements based on changes just made and comments from Bernhard Reiter <bernhard@csd.uwm.edu>.
fa1591c129 Oops, missed mode parameter to open().
9bb76d1b73 Made the default mode 'rb' instead of 'r', for better cross-platform support.  (Based on comment on the documentation by Bernhard Reiter <bernhard@csd.uwm.edu>).
06ca948029 Added all the "external action" methods (to make handling the verbose and dry-run flags consistently painless): 'execute()', 'mkpath()', 'copy_file()', 'copy_tree()', 'make_file()', and stub for 'make_files()' (not sure yet if it's useful).
e765a3bb61 Added 'dry_run' flag to most functions (to support the "shadow methods"   that wrap them in the Command class). Fixed 'copy_file()' to use '_copy_file_contents()', not 'copyfile()'   from shutil module -- no reference to shutil anymore. Added "not copying" announcement in 'copy_file()'. Wee comment fix.
4070f50537 Changed to use the method versions of 'copy_file()', 'copy_tree()', and 'make_file()'-- that way, the verbose and dry-run flags are handled for free.
bd3bdde70b For reasons I dare not explain, this script should always execute main() when imported (in other words, it is not usable as a module).
8ff764f113 Jonathan Giddy write:
60e7330fee Per Cederqvist writes:
275e83489e Added "Documenting Python" to the index.
f123f84f66 Patch by Per Cederqvist, who writes:
9065ea36de When run as a script, report failures in the exit code as well. Patch largely based on changes by Andrew Dalke, as discussed in the distutils-sig.
3527f59457 Hack so that if a 302 or 301 redirect contains a relative URL, the right thing "just happens" (basejoin() with old URL).
c91fcaa43b Protection against picling to/from closed (real) file. The problem was reported by Moshe Zadka.
89ae2b9f07 Test protection against picling to/from closed (real) file.
4958f9af97 #$@%!  Forgot to remove a #error directive used for testing.  Sorry.
57731607c3 Chris Lawrence writes:
91c488c1fc Replaced the last attempt at an "unreadline" with one that actually works on non-seekable file-like objects, such as URLs.  (Oops.)
8e702d4e8e Jonathan Giddy discovered this file was missing.
cf95b0f44a Avoid warnings from AIX compiler.  Reported by Vladimir (AIX is my middlename) Marangozov, patch coded by Greg Stein.
2c4e009b66 Fixed a lot of the smaller nits identified in Guido's comments.
825df2a14d At Tim Peters' recommendation, add a dummy flush() method to PseudoFile.
02ef28b9a9 Tim Peters writes:
a3433e89eb Tim Peters writes:
806a467fbf Where rfc822.Message is mentioned, add a link to the rfc822 module.
b091134e70 During display, if EPIPE is raised, it's probably because a pager was killed.  Discard the error in that case, but propogate it otherwise.
787451b65f Added 'linestart' array and 'unreadline()' method (makes parsing a lot easier).
447b4a0652 Test suite for UserList.
2a340b3889 Use isinstance() where appropriate. Reformatted with 4-space indent.
ecb1a65f63 Helpwin.__init__(): The text widget should get focus.
61ba0721db Removed unnecessary import `from PyncheWidget import PyncheWidget'
3eccc48b5b Test suite for UserDict
1697b9cdf6 Improved a bunch of things. The constructor now takes an optional dictionary. Use isinstance() where appropriate.
aa3828aa35 Basic regr tests for pickle/cPickle
7c6a90de8a Added some rules that affect those little "See also:" sections.
bb584d3f6e Be more stylesheet friendly.
a608a1df87 Require the verbatim package (similar to the LaTeX version).
397032aa46 Don't use "exec" in find_class().  It's slow, unnecessary, and (as AMK points out) it doesn't work in JPython Applets.
605ebddbea Added a simple test suite for gzip.  It simply opens a temp file, writes a chunk of compressed data, closes it, writes another chunk, and reads the contents back to verify that they are the same.
f4f119c055 Based on a suggestion from bruce@hams.com, make a trivial change to allow using the 'a' flag as a mode for opening a GzipFile.  gzip files, surprisingly enough, can be concatenated and then decompressed; the effect is to concatenate the two chunks of data.
52a0d7d802 Add tests for float() and complex() with string args (Nick/Stephanie Lockwood).
cb1f2420ea Document complex() with string arg.
b95227db4f Add an .unused_data attribute to decompressor objects.  If .unused_data is not an empty string, this means that you have arrived at the end of the stream of compressed data, and the contents of .unused_data are whatever follows the compressed stream.
1195023b89 Patch by Nick and Stephanie Lockwood to implement complex() with a string argument.  This closes TODO item 2.19.
5fc9c869dd SIGTERM is no longer caught to call sys.exitfunc. This change was made long ago but the documentation was never updated.
2cafcbb440 Remove \platformof support, since it's been removed from the LaTeX style sheet.
e82f5b3d6e Added note about ftpmirror.py, since that seems to be one of the most requested Python tools/examples.
545006259d Added Samuel Bayer's new webchecker. Unfortunately his code breaks wcgui.py in a way that's not easy to fix.  I expect that this is a temporary situation -- eventually Sam's changes will be merged back in. (The changes add a -t option to specify exceptions to the -x option, and explicit checking for #foo style fragment ids.)
2bc137909d Vladimir Marangozov contributed updated comments.
cd037e7bed Folded long lines.
a6386ce1eb Added Jeremy's test code for the sha module.
29d2acc170 Added Greg Stein and Andrew Kuchling's sha module. Fix comments about zlib version and URL.
4ec2698725 Remove the temp file when we're done.
d023a78f59 Conform to standard boilerplate.
6b9da45969 Chris Herborth: the new compiler in R4.1 needs some new options to work...
e7de2061b4 Implement two suggestions by Jonathan Giddy: (1) in AIX, clear the data struct before calling gethostby{name,addr}_r(); (2) ignore the 3/5/6 args determinations made by the configure script and switch on platform identifiers instead:
7b6c71f5a4 Vladimir Marangozov implements the AIX 3-arg gethostbyname_r code.
e256a0feed Add readlines() to _Subfile class.  Not clear who would need it, but Chris Lawrence sent me a broken version; this one is a tad simpler and more conforming to the standard.
9b8afdee44 Use more recent option to \pdfdest to not change the zoom factor. This is in response to a comment from Wes Rishel <wes@rishel.com>.
c19f9972a1 use struct instead of bit-manipulate in Python
8ad22c8153 Add $(EXE) to various occurrences of python so it will work on Cygwin with egcs (after setting EXE=.exe).  Patch by Norman Vine.
8db7d8bf6b Ack!  It never defined HAVE_GETHOSTBYNAME_R so that code was never tested!
782cdfe9f3 Changes to allow passing an open file to the constructor (to support ProcessHierarchy's changes to support reading from a remote URL in ProcessDatabase).
d709b48706 Adding thread.h -- unused but for b/w compatibility. As requested by Bill Janssen.
012ae207a5 Added bufferobject.c
a96f0ba7cc Add code to test for all sorts of gethostbyname_r variants, donated by David Arnold.
7152e9b483 Add symbols for gethostbyname_r variants (sigh).
3baaa1375b Clean up pass for the previous patches.
955becc3d9 Jonathan Giddy writes:
173156fa32 Fixed the flush() method of compression objects; the test for     the end of loop was incorrect, and failed when the flushmode != Z_FINISH.     Logic cleaned up and commented.
dca7e00fd5 Added simple test for the flush() method of compression objects, trying the     different flush values Z_NO_FLUSH, Z_SYNC_FLUSH, Z_FULL_FLUSH.
f247d75507 Bug reported by Tobias Thelen: missing "self." in assignment target.
13ae1c8ff8 First checkin of real Distutils command modules.
03f8c3cdd0 Obsolete source file -- command options are actually implemented in a much less formalistic way.  Just keeping this around for possible future reference.
2689e3ddce First checkin of real Distutils code.
481ac8811e Use an unsigned cast to avoid a warning in VC++.
8f0fa9e47f New code for split() by Tim Peters, behaves more like posixpath.split().
d7b5fb858c Fix a problem with Vladimir's PyFloat_Fini code: clear the free list; if a block cannot be freed, add its free items back to the free list. This is necessary to avoid leaking when Python is reinitialized later.
51288bce48 Fix a problem with Vladimir's PyInt_Fini code: clear the free list; if a block cannot be freed, add its free items back to the free list, and add its valid ints back to the small_ints array if they are in range. This is necessary to avoid leaking when Python is reinitialized later.
8be229650d Document new builtin buffer().  Greg Stein.
36561c5de4 Added BufferType, the type returned by the new builtin buffer().  Greg Stein.
0daf022225 New builtin buffer() creates a derived read-only buffer from any object that supports the buffer interface (e.g. strings, arrays).
49ded3ec00 Added check for negative offset for PyBuffer_FromObject and check for negative size for PyBuffer_FromMemory.  Greg Stein.
7d5f5dd6aa Added htmldoc, to generate the HTML for "Documenting Python".
1468d77ff8 Add "Documenting Python" to the list of processed documents.
03dffcce0e LaTeX2HTML support for the ltxmarkup package.
9466b9a10d Add some (commented out) macros to change the page size to the size of typical published manuals, so people can more easily see what they're really asking for.  ;-)
596766772e Documented FTP.set_pasv().
f3963b1269 Sjoerd Mullender writes:
e3fd1064de Make this simpler; don't care about the paper size.  Require that the files exist in the current directory.
a0fec1637b Sjoerd Mullender writes:
81da9f146c Remove all owner resources from template, and if no owner resource contained in applet-specific rsrc file we add a "Pyta" owner resource. Owner resources have both id=0 and name="Owner resource" (is this always true?).
b8c9f01bdc Removed all owner resources except for "Pyth".
a2e18051b7 Delete non-standard-conforming code in urljoin() that would use the netloc from the base url as the default netloc for the resulting url even if the schemes differ.
154d909993 Note that abspath() was added in 1.5.2.
5744d2ae90 For some reason these files had never been checked in.
cd219d5efd For reasons unknown these files were never checked in to CVS.
8368453249 Add DLL level b/w compat for PySequence_In and PyEval_CallObject
90fc0a71a5 Be sure "make" understands the "doc" target is phony.
eb354b31e5 Bug reported by Jim Robinson:
8d2c0c2ab4 Fixed minor nits, added index entries to make these easier to find for people not familiar with Unix terminology.
c43e6a2f31 Ignore some more files kept by mkhowto --keep.
15087437d5 Add support for "Documenting Python".
8df362cf97 Removed the embedded sections showing module documentation; just \input the module template.
acffaee46e New document: "Documenting Python".
1d8f07acbd Markup for documenting LaTeX macros and environments.
0e11c49f04 Docstring fix:  acosh() returns the hyperbolic arccosine, not the hyperbolic cosine.  Problem report via David Ascher by one of his students.
caa69fdf4c Should test for gethost*by*name_r, not for gethostname_r (which doesn't exist and doesn't make sense).
e9cd07b47f Patch by Rob Riggs for Linux -- glibc2 has a different argument converntion for gethostbyname_r() etc. than Solaris!
701f25ef9d Rob Riggs wrote:
c7e7c60756 New mixin class that defines cmp and hash that use the ob_itself pointer.  This allows (when using the mixin) different Python objects pointing to the same C object and behaving well as dictionary keys.
3764595c98 Yet another patch by Sjoerd Mullender:
f03fdbc063 Added the new sections from Skip Montanaro.
658cef0141 Preliminary mhlib and telnetlib documents from Skip Montanaro -- thanks, Skip!
8387af65a9 If a control has no refcon pointing back to the Python object we create a new Python object. This needs a new bgenObjectDefinition.py, which implements compare and hash functions.
d5138caba5 Patch by Michael Scharf.  He writes:
7039f50828 Bug submitted by Wayne Knowles, who writes:
bf5a6d2eb4 Fixed tons of small markup problems.
3fce883922 Vladimir has restructured his code somewhat so that the blocks are now represented by an explicit structure.  (There are still too many casts in the code, but that may be unavoidable.)
4edf656402 Remove stuff with unsure copyright status
9a4da084d4 Change #! line to modern usage; also chmod +x
7e75c947db Change #! line to modern usage
b3a20bc44c Added availabililty annotations to respond to concerns of /F.
4b1a07ae18 Fixed grammatical error reported by Donald Wallace Rouse II <dwr2@ix.netcom.com>.
93503ca57b Fixup the module keys.  There were some problems with hosting / processing file HTML files on Windows machines do to case insensitivity.
be110c1706 Updates based on comments from /F.
367ac80d3b From: Sjoerd Mullender
f61bbc8182 OK, try again.  Vladimir gave me a fix for the alignment bus error, so here's his patch again.  This time it works (at least on Solaris, Linux and Irix).
dd58416f39 Don't crash when sys.path contains an empty string.
87a42cd61b Add support for <platform>, some cleanup of module section after creating the <moduleinfo>.
49c7bc416e This file was never supposed to be part of IDLE.
b62e877631 - Don't crash in the case where a superclass is a string instead of a pyclbr.Class object; this can happen when the superclass is unrecognizable (to pyclbr), e.g. when module renaming is used.
cbd987040e Added .rdf and .xsl as application/xml types.  (.rdf is for the Resource Description Framework, a metadata encoding, and .xsl is for the Extensible Stylesheet Language.)
59e4f37d76 Test for popen2 module, by Chris Tismer.
a060fb2598 Alas, Vladimir's patch caused a bus error (probably double alignment?), and I didn't test it.  Withdrawing it for now.
881928f7ab Patch by Vladimir Marangoz to allow freeing of the allocated blocks of floats on finalization.
da084edd38 Patch by Vladimir Marangoz to allow freeing of the allocated blocks of integers on finalization.
ee84d5972f Lots of nits to respond to various comments from users.
9537586a87 Added some clarification on CWGUSI building and pathnames as they come out of the CVS repository.
d6e8713f81 Add PathBrowser to File module
a917af7fc7 "Path browser" - 4 scrolled lists displaying:     directories on sys.path     modules in selected directory     classes in selected module     methods of selected class
dc424be5af New utility: multiple scrolled lists in parallel
ac1cb16efb - White background. - Display "(None)" (or text of your choosing) when empty. - Don't set the focus.
29aab7582f open_http also had the 'data is None' test backwards.  don't call with the extra argument if data is None.
dc12ec8ca0 Fix a number of typos and small grammatical nits pointed out by Detlef Lannert <lannert@lannert.rz.uni-duesseldorf.de>.
496bc7f238 Call Py_SetProgramName() instead of redefining getprogramname(), reflecting changes in the runtime around 1.5 or earlier.
eb894ebd0a Always test for an error return (usually NULL or -1) without setting an exception.
d3eb5774ad Patch by Chris Herborth for BeOS code. He writes:
d2cd6f8c93 Small change by Jack Jansen. Test for self.returntype behaving like OSErr rather than being it.
db75afe6e5 Added collapse_ws option.
a4e6ae6667 Offscreen bitmap support, first stab. PixMaps are still treated as ordinary handles, not fullblown python objects, and UpdateGWorld returns a new GWorld object in stead of modifying the existing one.
6a51b37167 Added Qdoffs module.
4100900059 Added a rewrite rule so the Str255 argument of GetControlTitle is seen as output parameter.
39fc1bc329 Added note about __builtin__._ to section dicussing classes of reserved names, just to avoid confusion on the part of users.
57ed139c22 Added App module (appearance manager interface).
5b6334f210 Added App module (appearance manager interface). And of course codewarrior has touched various other projects again too, sigh.
e32596bca8 Interface to the appearance manager.
e4349e83d1 Re-generated with OSStatus treated like OSErr (i.e. not returned, but raising an exception when negative).
1acb8740eb Oops, missed a couple of substitutions in the templates.
b41f97d6a0 Pass in the 'Send comments to ...' on the mkmodindex command line, just like we do for mkhowto.
5f7832d125 Allow many more aspects of the generated page to be parameterized, and add a useful usage message.  Use 'mkmodindex --help' to display it.
6de28bd2a8 Added "Internet Config" to index.
62cc360e38 add_module_idx():  If \ignorePlatformAnnotation is used, only ignore 		   the specified annotation, not any annotation.
35c3ffdc3f Fixed description of WSTOPSIG(), added WTERMSIG().  Problem reported by Jonathan Giddy <jon@dgs.monash.edu.au>.
fc372aae48 added hasclosebox attr (jstrout) -- jvr
aaa0d9a3a4 Record the value of $TEXINPUTS in the transcript.
d8ee0e6ca5 Oops, missed version number for pdfTeX.  Updated.
41dee84a40 Lots of small updates.
b1d839866c Obsolete; use the Python version instead.
6b12b1ec1d Switch to the Python version of mkhowto.
8b88093b95 Re-written mkhowto in Python; this should be at least a little more portable.
749f943a6b process():  New function that contains the "orchestration" of the 	    actual work.
7c8754fafb process():  New function that contains the "orchestration" of the 	    actual work.
aa99a5071e Be a little more friendly for the generation of the text version: for "blank" navigation icons, use ALT="" instead of ALT="blank"; also add ALIGN=CENTER for the table, to get a slightly better affect in the text (the table is full-width, so this doesn't change the appearance when browsing the HTML).
a54a887f66 "\platform{UNIX}" should really be spelled "\platform{Unix}".
f6863c1909 Added \platform annotations.
46a9438c43 Add information about adding the portability statement.
7f492ad7b8 Be more flexible to support platform annotations.
75ab7a6fa4 Clean up *.pla files -- platform annotation information.
521835c541 Ignore *.pla -- the platform annotation information.  Also, remove it for 'make clean'.
d70091eade Ignore *.pla -- the platform annotation information.
0c275fa856 Added support for \platform, \platformof, and \ignorePlatformAnnotation.
557460cb7a swallow_newline():  Removed function; not really needed.  Modified all call 		    sites.
2383f6dbbc Improve handling of module index, to deal with platform annotations a little better.
01bc01c82e Changes to accomodate the global module index and platform annotations.
368b16ad2b Only use 4 columns in the module index, to accomodate platform annotations.
127100531d added "Save options" menu to popup so users can set the creator of scripts -- jvr
f4b0681d90 changed creator to 'Pide' -- jvr
4798c4ef4d added kludge so edit menus work in W.ModalDialogs -- jvr
6f0e55a019 updated 'vers' resource -- jvr
3853be8b14 reverted Jack's mod: no longer neccesary since all BNDL & icon info is in the IDE's resource file, just like the other applets -- jvr
867dc25445 added Jack's ad-hoc icon plus a BNDL resource, so the creator of the IDE will be 'Pide' -- jvr
24f7b231bb Set the signature for the IDE "by hand", the bundle is already included in the PythonEngine applet template.
1e4cc33a55 Moved all three bundles (for interpreter, applets and IDE) into bundle.rsrc.
d4bdbf1097 added "dummy" makeopenwindowsmenu method to simplify making a standalone W app -- jvr
96b64d0675 open res file(s) read only; upped __version__ -- jvr
43b34da656 extract_tb():  Only describe this function once.  Problem reported by 	       Jonathan Giddy <jon@dgs.monash.edu.au>.
390636382a Typo: "Availabilty" --> "Availability" Thanks to /F!
ca37995553 added slight delay in Scrollbar.click() for more intuitive response -- jvr
68922f06bf fixed "crashing" bug when scripts folder as stored in prefs file does not exist.
cf2efc67d9 Uncommented AskYesNoCancel docstring (how did it get commented in the first place?)
b30f52a471 http_error had the 'data is None' test backwards.  don't call with the extra argument if data is None.
f90b002e31 change indentation from 8 spaces to 4 spaces
547c3f1c13 pleasing the tabnanny
bff3ae1f75 Oops, one more "x, y, z" to convert...
87209172f0 Adjusted comment at the top to be less confusing, following Fredrik Lundh's example.
51027c4173 Added note about comments, from Christopher Petrilli.
16e81f4484 Update some of the top comments and shorten title of the first section.
e1c717bd9b Moved whatsound to lib-old/, since it was declared obsolete and is documented as such.
0652a4e7d5 Use sndhdr instead of the obsolete whatsound module.
dbc8364e1f When performing a POST request, i.e. when the second argument to urlopen is used to specify form data, make sure the second argument is threaded through all of the http_error_NNN calls.  This allows error handlers like the redirect and authorization handlers to properly re-start the connection.
093c97a36f ignore_from_idx():  Fixed bug in regular expression.
684f78fafe Add target for modindex.html; a combined lib+mac module index.  Also built with target "all".
2ef38a7a42 Script to combine module index files.  Given a list of files that look like modindex.html, create a combined modindex.html file that lists all the modules.  Takes the same parameters as buildindex.py.
1b102456a6 Ignore a file called modindex.html.
711fe02ac3 process_nodes():  New function.
4fe6caaaf0 Patch by Lars Wirzenius:
72b715d979 (initerrors): Make sure that the exception tuples ("base-classes" when string-based exceptions are used) reflect the real class hierarchy, i.e. that SystemExit derives from Exception not StandardError.
40db48c5ec Document the correct class hierarchy for SystemExit.  It is not an error and so it derives from Exception and not SystemError.  The docstring was incorrect but the implementation was fine.
f2b4554403 Document the correct class hierarchy for SystemExit.  It is not an error and so it derives from Exception and not SystemError.
83c03e2d94 Add import sys, needed by reference to sys.exc_info() in rmtree(). Discovered by Mitch Chapman.
b6cf9a4fc4 Script to help identify undocumented modules.  Use -h or --help for usage information.
8cdee961bf Dictionaries are created using the "{...}" notation, not the "..." notation.  Problem reported by Magnus L. Hetland <mlh@idt.ntnu.no>.
3366d1c7e6 # Typo in docstring (Retrun -> Return).
79e8f1b773 # the usual
3f2c383a7e Now that we don't have AC_CHECK_LIB(m, pow), the HAVE_LIBM symbol disappears.  It wasn't used anywhere anyway...
3791b0de36 Carefully check for overflow when allocating the memory for fromfile -- someone tried to pass in sys.maxint and got bitten by the bogus calculations.
24f8579ee4 Get rid of AC_CHECK_LIB(m, pow) since this is taken care of later with LIBM (from --with-libm=...); this actually broke the customizability offered by the latter option.  Thanks go to Clay Spence for reporting this.
74ee886409 1. Print the error message (carefully) when a dl.open() fails in verbose mode. 2. When no test case worked, raise ImportError instead of failing.
264bd59221 1. Clarify that immutability isn't entirely the same as unchangeable value (because of immutable containers containing mutable objects).
124eff0225 Patch by Tim Peters to improve the range checks for range() and xrange(), especially for platforms where int and long are different sizes (so sys.maxint isn't actually the theoretical limit for the length of a list, but the largest C int is -- sys.maxint is the largest Python int, which is actually a C long).
717d1fdf2a 1. Augment the DG/UX rule so it doesn't break the BeOS build. 2. Add $(EXE) to various occurrences of python so it will work on    Cygwin with egcs (after setting EXE=.exe).  These patches by    Norman Vine.
027188a382 According to Jeffrey Honig, bsd/os 2.0 - 4.0 should be added to the list (of bsd variants that have a different lock structure).
5ef8f0c3c7 According to Jeffrey Honig, bsd/os 4.0 should be added to the list.
c222ec28a5 Patch by Tadayoshi Funaba (with some changes) to be smarter about guessing what happened when strftime() returns 0.  Is it buffer overflow or was the result simply 0 bytes long?  (This happens for an empty format string, or when the format string is a single %Z and the timezone is unknown.)  if the buffer is at least 256 times as long as the format, assume the latter.
1ec71cb556 Incorporated updates to describe geturl() by Sjoerd Mullender <Sjoerd.Mullender@cwi.nl>.
4505895e68 As Des Barry points out, we need to call pathname2url(file) in two calls to addinfourl() in open_file().
ba21d10d9b Added note about *static* after description of *shared*.
b71c570f01 Document *static* -- in two places!
00a3a65cc0 Refer to the right RFC in the intro.
360eb9f278 We don't support leap seconds, so the seconds field of a time 9-tuple should be in the range [0-59].  Noted by Tadayoshi Funaba.
5bd69db9f0 In atoi(), don't use isxdigit() to test whether the last character converted was a "digit" -- use isalnum().  This test is there only to guard against "+" or "-" being interpreted as a valid int literal. Reported by Takahiro Nakayama.
0fb7a37667 Reflect the released version.
fb801e7d33 As Finn Bock points out, _P_WAIT etc. don't have a leading underscore so they don't need to be treated specially here.
0df2188d08 Typo:  "apparentlt" --> "apparently"
974e32d910 Steve Clift pointed out that 'file' allows a netloc.
61eeb044d7 The docstring for ttyname(..) claims a second "mode" argument. The actual code does not allow such an argument.  (Finn Bock.)
11a8d0b684 Dang.  Even though this is obsolete code, somebody found a bug, and I fix it.  Oh well.
9226d8e8a8 Removed "This will be discussed later." where it's not.  Reported by Clay Spence <cspence@sarnoff.com>; see entry in ../TODO.
7d9b13325d Other chapter titles refer to collections of modules as "Services"; do the same here.
8ece8041c5 Noted report of missing material in the extending & embedding manual, as reported by Clay Spence <cspence@sarnoff.com>.
c411fa6861 Revised description of blank line handling for the interpreter, based on a comment from /F.
fab41f1788 BabylMailbox description:  Properly escape the backslashes in the string representations.
b63e77ccb0 Oops, used a \label twice - fix one of them.
180b68b3cf More reasonable section titles.
76991ec75a Shorten section title.
199b79c37b Added descriptions for BabylMailbox and Maildir (Qmail) mailbox objects.
67d229ea76 Shorten section title.
bbac43223c Shorten a few section titles.
da57365337 Give subsections reasonable file names in the HTML.
342501142d Added an index entry.
50cdd97ec4 do_cmd_arabic():  Override the l2h-provided version to remove that 	obnoxious <SPAN CLASS="arabic">...</SPAN> markup.
df5d50d889 Specify the sizes of H? relative to the normal font size as percentages; using "large", "x-large" makes them too big for some troublemakers.  ;-)
56f8185a53 Shortened the short synopsis -- too long.
9f03380d1c Use more current approach to recording authors.
c60047575d Shortened the short synopsis -- way too long.
d8a41e6391 Fix an amazing number of typos & malformed sentences reported by Detlef Lannert <lannert@uni-duesseldorf.de>.
f6346345b0 Noted that the module was added in 1.5.2.
4e7c205470 Update description of what modules "look like" when printed.
cd71aa2a38 Use current approach to record documentation author.
2a2f1fe4d5 Record module & documentation author.
6b103f1e12 Documentation for pyclbr and tokenize modules.
3d199af40d Bow to font-lock at the end of the docstring, since it throws stuff off.
4d358b5d23 Added sections for pyclbr and tokenize.
7c829b3179 Remove the "Parsing Python" section.  Hurray!
3d7707a87d More files.
93d762fc7a Mark <verbatim> elements that represent interactive sessions; these become <interpreter-session> elements.
997eec7cca Minor adjustments to reflect esis2sgml.py changes.
607aed7a2c Some adjustments, mostly to make it more general.
4cc902f464 Make the _rmtt regular expression deal with the new CSS-friendly changes to the HTML documentation.
70a66c9d6d Add notes to __builtin__.float() and string.atof() that the NaN and Inf results are possible but non-portable.
d60ec8f11a This commit was manufactured by cvs2svn to create tag 'r152b2'.
126cbfa449 Updated for 1.5.2b2 release.
74608e6a05 New in 1.5.2b2.
8a06aea269 Couple of new names.
b0f99a62d7 Comment out confusing write call.
29fb54f0ca Update note about the (...) format specifier for PyArg_ParseTuple().
951eea4733 atof() description:  Add information about accepting 'NaN' to produce the NaN value.
594b3d66bd Some new stuff.  Get the HTML docs via a new variable. Comment out freeze script (doesn't work at all). Add dialog to get program manager group.
66368ccc55 Patch by Tommy Burnette to accept an arbitrary sequence when "(...)" is used in the format string, instead of requiring a tuple.  This is in line with the general trend towards accepting arbitrary sequences.
127ed0a71e Updated list of standard exceptions in section 4.1.
a89b98f4c0 News in 0.3.
8e0151725d Small updates and grammatical adjustments.
dce019ed79 Bump version to 0.3.
1a566ff2e8 When the parameter to PyInt_AsLong() has already been checked with PyInt_Check(), use PyInt_AS_LONG() instead (two places).
8f2918f4fa After all, we don't need to call the callbacks ourselves!
be5f2f1cb5 When deleting, call the callbacks *after* deleting the window from our list!
d804f4eea0 _safe_repr():  Simplify the condition tests in the first possible 	       return path.
c4f752f803 Fix up the Windows menu via the new callback mechanism instead of depending on menu post commands (which don't work when the menu is torn off).
5437ddfa36 Support callbacks to patch up Windows menus everywhere.
a79a93ff73 Oh, why not.  Checking in the Emacs-generated change log.
3b4e2f0b87 (py-shell): Added optional argprompt, which will prompt for additional switches to pass into the shell process (only on initial startup).
aa384fd616 (py-default-interpreter): New variable which selects whether CPython or JPython is the default interpreter to use when `C-c !' is entered for the first time.
33698f818b Removed old dynamic linking chapter.
a0d5d700e0 # Accidentally checked in a test version of this file with a bogus # "import fooblurg" :-)
2f7bfafe26 Remove all email addresses.
9ea32898db Only pop up the stack viewer when requested in the Debug menu.
6724835959 Use the portable form of initializing the ob_type field for new types.
71ddcd87e2 Finn Bock.
3de61bc13f Integrated notes on building extension modules on Windows, by Neil Schemenauer <neil_schemenauer@transcanada.com>.
f6838c0f5e Copy in the stylesheet after latex2html is done.
fcf57ad959 Copy in the stylesheet after latex2html is done.
90fdda5404 Become more stylesheet-friendly.
00d98ee5cc CSS style sheet for the documentation.
63f217741e Bump release to 1.5.2b2.
f43ce00531 Make sure errors get propogated.
5d856fcd0f The usual
0b07035249 Add source file winsound.c and library winmm.lib
85a59dd68b The _O_* constants are defined as O_* in the os module.
9329e5ec75 Remove "_" from the P_* symbols used with the spawn*() functions.
6543e88d2a Check for potential error returned by _ungetch().
7d385294a4 The symbols P_* (for spawn*(), MS specific) should not have a leading underscore after all, for consistency with the O_* symnbols.
c7b72dbbca Added chapter on Windows modules, including msvcrt and winsound.
a5fab7f8c8 Added some files to the library reference.
abfd7d6701 Small grammatical fix; missing comma.
295fb434ed Make it clear that Demo/embed/ is from the source distribution.
beb27bfef7 Make navigation panels more CSS-friendly.
d14e97378b Clarify how EXAMPLE.py is to be used ("python EXAMPLE.py", not "python modulator.py EXAMPLE.py") and that it's only there in case you don't have Tkinter.
e96a31da96 Use the same markup for email addresses as is produced by using \email in the LaTeX sources.
208c15ab85 Added optional arguments to dialogs to allow setting of button titles.
ed52a20c6e In open_ftp(), check that retrlen is not None before using it in a %d format!
b8c3cbdd50 Fixed totally bogus conversion factors used in the Win32 version of os.times().
cce8d2a85a Adjust cellspacing attribute of the navigation bar tables to get some space between cells on all (major) browsers.
3c7ce60f1f Updated for new folder layout (but not fully tested yet).
72a027f170 Replaced .hqx project file by binary version, and updated to current CW.
68ecab455c Put the applet code inside USE_MAC_APPLET_SUPPORT ifdefs, to make 68k standalone Python compile.
6f9dd5d719 Remove stuff related to copying the icons directory around -- just isn't needed.
b8a7d72857 Moved icons into the html directory to avoid pollution of the top level.
6b6e61dd32 (finally) unified the interpreter and the applet as Just suggested ages ago. The resulting program is called PythonInterpreter.
66b989c805 Be explicit about the reference count of the original value of the first parameter to PyString_Concat().
4d33e4e1a8 HTMLBASE:  New variable.  Make it easier to check an "installed" copy 	   of the HTML documents using the webcheck target.
efa641c45a Add an optional parameter to make the script run latex only once to generate an .aux file.  This can make HTML generation a bit faster when print formats aren't needed.
3618c14f72 Use a common definition for $(SUBMAKE) instead of repeating everything all over the place.
aa1afa8d30 Added availability notes for samefile(), sameopenfile(), samestat() since these are not available on Windows.
5d59d3df7f Added --l2h-config option to add additional initialization files for latex2html.  Can be useful in setting up things like the upward external link for the top of the documents.
ec9fbe90be Added section "Providing a C API for an Extension Module" by Konrad Hinsen.
efd146c916 Markup nits.
69d49d6378 Set target.
98cc19fac6 Patch by Chris Petrilli to display the origin of a module in its repr() -- either "(builtin)" or "from '<filename>'".
e784f1efec Add PyModule_GetFilename().
cdcc0f0c3c AskPassword(): added reference to the module doc string; added support for autoKey events. --jvr
3b8052685c (finally) unified the interpreter and the applet as Just suggested ages ago. The resulting program is called PythonInterpreter.
f32834c206 Minor fix that helps out with the index.
9474d86242 Make sure all HTML pages generated from this section have reasonable names.
5761b766b2 L2HARGS:  Specify the HTML version we're producing, since this is what 	  we generate anyway.
2d2b6a0074 Markup nits.
99cd5735f0 Minor markup nits.
7b84972450 Use the shorter form of Christopher Petrilli's email address.
28bc711f5f Added section for MimeWriter, contributed by Christopher Petrilli <petrilli@amber.org>.
f7bf3b2b06 Added entry for MimeWriter module.
15799edd34 Make table headers the same color as the navigation bars so they stand out a little better.
7a9ed71e95 Moved the navigation-bar background color to a variable.
26b698fa4d Document <complex #>.conjugate().
15988fdbbb Documented __complex__(), made sure all the discipline names hit the index.
72ce85823c Fix by Chris Petrilli (to his own code) to limit the number of iterations looking for expansions to 10.
561df24437 Changed case on cm and qt modules, removed last references to toolboxmodules.
87352f8065 Build all plugins modules separately, the PlugIns.prj project seems to have stopped working.
c731723730 Mod by Jack Jansen: on Macintosh, use EasyDialogs.GetPassword if it exists.
a598bc412c Updated for the new one-slb-per-extension scheme. Added a few references to cvs locations for external libraries. img now builds in its own Extensions folder.
b92268aa3f Added AskPassword() with same interface as AskString. By Steve Majewski with some mods by me (SchedParams call, default value). Selects are still impossible, though, and the cursor doesn't blink.
eef0486a45 Try a new commit, hoping it'll fix the problems with this project on flap.
2e1ee3eb19 Fix up some routines to coordinate the "indexsubitem" stuff so that the subitem text is updated correctly when each module section is processed.
72e5a901c2 Remove unnecessary <p> from top navigation bar.
ec5c0b41ae Revert previous change; there's a better way to do it.
00f7da4f1e Patch by Steve Clift -- fix the indices now that f_fsid is no longer returned!
49fc666033 Use typeFloat for all floating point values. The previously used typeExtended was a Think-ism that must have stopped working years and years ago without anyone noticing.
ca74da4e2c Got rid of the file-global PosixError.  This was redundant since it was just an alias for PyExc_OSError and the way we were doing it was causing a (small) memory leak anyway.  Just use PyExc_OSError everywhere.
95474f9696 Change the navigation bar to be a little prettier and more consistent with the python.org style.
2e7840fe8f The usual.
01b7ced834 On Windows, -i shouldn't call set[v]buf(stdin, ...) because it screws up the _tkinter main loop.  Not clear why; the _kbhit() call _tkinter makes probably confuses the stdio library when buffering isn't set to whatever it is by default.
446ab75fcf New blank icon to match the others in size & color, with without any symbol on it.
2d1f81ea22 do_cmd_maketitle():  Small nit in creating the "title page".
1a4c5392b5 Back out some of the fine tuning; something in all that interacted badly in practice and botched the whole thing.  Wasn't obvious when looking at the local effects (which worked), but completely broke entire pages.  ;-(
d1f66dc198 Fix buglet in load_put -- the test for bad readline result tested the wrong variable.
c54367a2f0 Uwe Zessin.
ec119a3fc9 Don't crash if a window no longer exists.
5ec13c5318 Restructured a bit.
7d83a5e6f8 The variable TESTPATH should be initialized to empty. The test code is now accessed as a package.
ce67f06491 Update documentation to reflect changes to Queue.py by Tim Peters.
9e1721fa79 Tim Peters:
68de0641ce The writelines() function was never tested and contained numerous bugs (including a docstring saying "blah").  Fixed all this.
c55b0ca601 Put a try-except around the "image delete" call in Image.__del__ to avoid tracebacks when the root is destroyed before the image object.
7f1653c0e5 new dangerous script: it removes all apps (except sys.executable), shared libs, (x)SYM files and xxx Data folders (in case xxx.prj exists) -- jvr
e058189040 Added Ctl.as_Control and Menu.as_Menu methods, which take a resource as argument and return a Control or Menu object.
b0687899d7 Added a define USE_CORE_TOOLBOX, which includes six core toolbox modules into the config file. This define is also automatically set if USE_TOOLBOX is defined.
fd44e3d1f4 Added a define USE_CORE_TOOLBOX, which includes six core toolbox modules into the config file.
fa155a1b2c Don't create symlinks to toolbox modules any more.
496cae768f Moved Ctl, Dlg, Menu, Qd, Res and Win modules to PythonCore. Moved other toolbox modules to their own .slb file.
6d3d6e43ec Added Extensions:img:Mac to default sys.path
6c45a82594 - img modules are no longer in PlugIns folder - Added a dependency on toolboxmodules to icglue.cfm68k
8eea5baca8 img modules are no longer in PlugIns folder.
8f81a22d41 Some weird symbol (M_I386) was used to decide whether to include the audioop module; this was no longer defined.  Use MS_WINDOWS instead. (I have a feeling that this was for the WATCOM port; too bad.)
d42e46ead5 Ehm, when we don't need to byteswap the data, don't go through an array object at all.
ebb9c922cb Two important fixes:
2aaeb52665 fixed problem with "reloading" sub-sub-modules -- jvr
14162abf6e The encoding type was wrong, I think.
2013ba48a6 Should open files in binary mode!
dfb4e24431 Respond to suggestion from "Albert" <hat@se-46.wpa.wtb.tue.nl> to add document titles to the list of files.
5ebeea0467 Shouldn't be treating linear-8 as u-law!
2ff880e2cf More magic to tighten up a little of the formatting.
f9918f25b1 Minor nit to prevent dropping a space in the HTML generation.
e600578ac7 Add winsound -- by Toby Dickenson with permission.
f9ffb03c35 Jim Fulton: this fixes seg faults with bad pickles like "c".
d673d481f5 Document sameopenfile(), samestat().
0256c1f453 Document splitdrive().
ead9d8d2d7 New test for ntpath module
534972bce2 New splitdrive() that knows about UNC paths (e.g., network paths like \\host\mountpoint\dir\file).  By Larry Hastings.
0c9608cf1b Portability fix for [f]statvfs() return tuple: no longer return the f_fsid field, since it's not a scalar on all systems supporting this call (in particular, it's a tuple of two longs on AIX).  Since it's not particularly useful, just nuke it.  Adapted the doc strings too.
c256ece88c Partly updated to reflect the new organization and the availability of CVS access. Will still need a bit of work when all plugins are separated, probably.
33a5d7e751 Just's script to find non-7-bit-clean charactres in a source tree (slightly modified by Jack to skip files that are binary despite the TEXT type).
7bcd84ddb2 updated to the new numpy build setup -- jvr
579ed77a51 Never mind, this belongs in the PC subdirectory, and besides Toby Dickenson sent me a more functional (if lower level) wrapper around PlaySound.
edab93939e re-checkin with "ISO-8859 translation" turned on.
b8bf163dde added some comments
2e3f7bece0 Fredrik Lundh fixes Sjoerd's patch...
dbd37dfcff Remove three items.
215fe2f204 Fix the os/posix documentation issue.
dda199b261 Moved \versionadded to end of description sections.
12ba7868e4 Moved posixpath to os.path.
560bcae0f0 Added posixpath, winsound.
a9b9bf96fe Change this to be os.path.
bb79438d26 This seems to fix a problem with targeting from the indexes.
2116d983bf Make \versionadded and \versionchanged less prominant -- neither bold nor a separate paragraph.
d0bceeeb59 Move \versionadded macros to end of descriptions.
09da65ef2f Patch by Sjoerd Mullender to placate /F: Clarified (hopefully :-) the documentation of elements and attributes variables.
cc2c291b7f Patch by Sjoerd Mullender to placate /F:
7e3535cbbd Added documentation to the docstrings for the W*() functions that take a process exit status as a parameter.
26a69db4c7 put the preferences file in a folder called "Python" inside the prefs folder, just like the IDE does -- jvr
9202755fcb Replaced by Pythonpath.r
2cc340d122 Windows sound playing module, by Fredrik Lundh.
246bc17a8b Add _P_WAIT etc. for NT.
67c65b2954 Special-case _P_WAIT etc. for NT.
8e47306b99 Add current dir or paths of file args to sys.path.
a6dff3e772 spawnv, spawnve docstrings:  added mode parameter; this is required!
dbd72a4e4f Added module synopsis.
68a8c69499 Take out just about everything and refer the reader to the os module.
b23ee1d899 Make the text generic, and call it os.path instead of posixpath.
59d8b73cef Remove all references to posixpath; only refer to os.path.
2e9e0dfca3 Add canonic() function -- for brand new bdb.py feature.
14b2d30b11 Protect against accessing an empty stack.
6aa42579be PyPcre_expand(): Fixed two memory leaks, where a PyString_FromString() was appended to a list.  Lists are reference count neutral, so the string must be DECREF'd.  Also added some checks for the return value of PyList_Append().
a61f4ac14d better sys.path munging when running scripts -- jvr
98be47e737 OSError description:  "as the by the" --> "as the"
e6a3aa6066 Oops, the patch for NeXT always replaced waitpid() with wait4() -- this doesn't exist everywhere, so go back to using #ifdef NeXT.
fe64935cf9 Patch by Sjoerd Mullender for better compatibility with the version from Python 1.5.1:
79e02231ca removed old IDE stuff -- jvr
e1fb04f694 minor cleanup of last patch -- jvr
9d609b4db4 Added PythonIDE to the applet list; added destination filename support for applets -- jvr
e590a95796 removed turd resources left by my former MacCVS client -- jvr
99ec5a52b8 Add $(APPLICATION) or :Mac:Tools:IDE at the very start of sys.path to improve startup time -- jvr
a7a7193363 There are now three possible ways to run the IDE: - this file dropped onto the interpreter - applet built by BuildApplet (contains only __main__) - applet built by BuildIDE (contains all IDE modules)
4f0d1f5469 ??? adding this file somehow failed -- jvr
40f9b7bd7c First Checked In.
f59a89b5e3 added ntpath and win32api to MAC_MAYMISS_MODULES -- jvr
49ef0b76bc changed chars in source > chr(127) to ASCII: CVS corrupted them -- jvr
874f87b546 set 'preload' attribute for __main__ PYC resource -- jvr
1cea8047d8 skip 'vers' resource when copying resources from templeate -- jvr
2607a44690 added some try/excepts so it also works when certain projects/folders are not available -- jvr
f1ae0eb9fa Removed NumPy install code: it's obsolete -- jvr
786cb11e51 Fixed two typo's (Plugins -> PlugIns) and added some explicit path munging to allow the script to also work from the Scripts folder. Somehow either of these fixes solved a problem where it suddenly refused to make a PythonCore alias in the Extensions folder. -- jvr
292f4c4676 added "delay console window until needed" preference
245d17930b Added pascal-style string name of preference file resource, and bracketed C struct declarations with #ifndef rez
c0780ac8f3 From: Mike Orr <mso@oz.net>
ca44236a1c Embarrassing: remove a debug print statement from set_break() for the second time!
7281b3b779 Updated comments on version of XML package needed.
9787bea4cd Use win32api.GetFullPathName(path) if it exists to implement abspath().
28e66d1c5e Added the info tarball to the tarballs target.  Added the README to the info tarball.
b2c59ab367 A README file for the info tarball.
1dd152d036 Added support to handle \versionadded in a reasonable way.
170e190f26 Support a canonical() method, implementable by a derived class, to be applied to all filenames before they are compared, looked up in the breaks dictionary, etc.  The default implementation does nothing -- it's implented as fast as possible via str().  A useful implementation would make everything a absolute, e.g. return os.path.normcase( os.path.abspath(filename)).
f761287e0a setup_readline(): Added a comment about memory leak (reported by Purify) being caused by a bug in the readline library.  Nothing we can do about it.
1c7aaa2d73 Added missing DECREF's in the error branches when creating a compressor or     decompressor object.  This required adding a flag to the struct which is     true if initialisation was completed; on object destruction, deflateEnd()     is only called if the flag is true.
9b0dc53d89 Define %descriptor.class, since it's used.
279ca75a5b Be a little smarter on some attribute values, making an assumption about the DTD.
3a7ff998ac fixup_descriptors():  Change the way we look for descriptor nodes; 	this takes 5 minutes off the conversion of the whole tree by 	reducing the number of tree-traversals from 14 to 1.
3d05b1a0ae initmain(): Nailed a memory leak.  bimod must be DECREF'd!
666e60095b Added the Doc/sgml/ directory to the tarball.
cb65781d93 Rewrite code that converts the little descriptor environments to build the right <signature>s and <description>.  This seems to work a lot better now!
38a5a3b3f1 Use only the height to decide whether to zoom in or out.
7890203f49 bltin_exc[]: EnvironmentError is not a "leaf exception", so set it's leaf_exc flag to zero otherwise the name leaks memory.
75930b31e2 Added table entries for \funcline and \funclineni.
e294cf620a Add abspath()
1804dc3c07 Document abspath() (implementation is forthcoming).
f339632da0 Define a general entity "&version;" that can be used as the current major version of the Python interpreter.  This is \version in the LaTeX format of the documentation.
fdfd50f815 Convert <version> to &version;.
53ea134aa8 doh! added missing comma (will check before committing in the future ;-) -- jvr
7859f17608 A few scribbles toward the DTD.
9f08666fae added path entry for NumPy -- jvr
6bcc53c109 Standard ISO entities.
d2d2b20e15 Pythonpath converted to Rez source, and vers resource removed from bundle to its own Rez source file. With these changes various resources are all set automatically from .h files.
2eb07f0945 The OASIS Exchange table model public text.
00d225ea6d Correct typo (Py_MethodDef doesn't exist).  Reported by Uwe Zessin.
6a715729a6 Projects moved to Mac:Build. The macfreeze projects still need sorting out.
8f67bce553 Fixed an absolute path.
f25813ac6c Re-committed as AppleSingle
7dab6affba Update the docstring.
3f3b09657f Added table entries for \methodline, \methodlineni.
ae3e574170 "numberic" --> "numeric", two places
1453a8caf9 Constructor arguments for classes should be called <args>.
b7ebb83ad0 Make sure the Tcl variables are shared between windows.
07ec896707 Move menu/key binding code from Bindings.py to EditorWindow.py, with changed APIs -- it makes much more sense there. Also add a new feature: if the first character of a menu label is a '!', it gets a checkbox.  Checkboxes are bound to Boolean Tcl variables that can be accessed through the new getvar/setvar/getrawvar API; the variable is named after the event to which the menu is bound.
85ef9dce9f Add Quit button to the debugger window.
e11e3dee3e Added a -s option which is useful for narrowing down memory leaks. With -s only a single test is run.  The next test run is chosen sequentially from the list of all tests.
ab11f60bb3 Added a new test for old filter() memory leak
30aa1e7d31 PyInit_zlib(): Plug a small memory leak.  Jeremy is looking into the more severe ones.
703b70e260 Added \modulesynopsis.
959c937382 When find_again() finds exactly the current selection, it's a failure.
3d58bcd5d9 Rename idle -> idle.py
fa77e09dd0 builtin_map(): A better fix for the previous leak plug (remember PyList_Append steals a reference even if it fails).
c9bda41a21 Updated for new build and plugin paths
fcfef787ca Everything now builds in the right location,.
0e5ff05d71 Checking in the projects that have been converted so far.
541563ec7e Implement -OO; "unsafe" optimization that removes docstrings. Marc-Andre Lemburg.
6b86a42c7f Document -OO; "unsafe" optimization that removes docstrings. Marc-Andre Lemburg.
bf07b29c04 Re-commit in applesingle
b657c9344f Improvement of b/w compat note in help text for clear, by Richard Wolff.
0fa2ccdb0d added default sys.path entry for NumPy -- jvr
56d6939f94 Starting on the new project/plugin structure. Far from complete...
72588741dd Slight reworking of this test.  If nis.maps() gives a nis.error, then raise an ImportError if not running verbose.  This signals to the regression framework that this test isn't applicable.
2133287c3e builtin_map(): Nailed memory leak.  PyList_Append() borrows a reference, so you have to DECREF the appended value.  This was a fun one!
f988e687a1 builtin_complex(): Nailed memory leak.  This one's in the instance test for classes with a __complex__() method.  The attribute is pulled out of the instance with PyObject_GetAttr() but this transfers ownership and the function object was never DECREF'd.
583cc31c22 Get rid of do_clear_break / do_clb command -- it is redundant. (It was left in accidentally after a long and arduous 3-way patch session.)
b80667d5f3 pcre_exec(): Andrew Kuchling's patch for pcre memory leak.
ffd511248e Add the info "dir" fragment to the info tarball.
8d7919d754 Fragment of an info "dir" file for the Python documentation.
ffc4811a40 Simplify slightly.
c5efde8522 Don't build info for the Macintosh module reference by default; it doesn't do well.
105906ff6e initerrno(): Nailed a not-so-tiny memory leak.  The de dictionary is put into the module dict, but is never DECREF'd in this function, so it and all its contents leak.
3879333b9e PyImport_ReloadModule(): Nailed a small memory leak.  In the else-clause of the subname test, the parentname object was never DECREF'd.
54ecc3d24f Patches by William Lewis for Nextstep descendants.
b5cebfe164 PyLong_FromString(): Nailed a small memory leak.  In the str==start test, we forgot that z is still pointing to a real live object. DECREF() it before returning.
aa2aea0e79 \py@linkToName:  New macro to consolidate support for most internal 	hyperlinking in the PDF version.  This also allows many of the 	macros that do this stuff to be a good bit more readable. 	Takes the target name and link content as parameters.
580f4ab5dc Added the files for the repr and ConfigParser modules.
9d814c6805 Document the repr module.  This removes the entire "Code objects and files, debugger etc." section from "Undocumented Modules"!
c80baa3365 err_input(): Nailed a small memory leak.  If the error is E_INTR, the v temporary variable was never decref'd.  Test this by starting up the interpreter, hitting C-c, then immediately exiting.
54892c4b2c _PySys_Init(): Nailed small memory leak.  The stringobject created for sys.version was missing a Py_XDECREF().
da452bf6a7 Don't say that the module defines the "following functions" and then only describe one; say "following function" instead!
5763e07ea3 cleaned up ugly hack related to activate events and suspend/resume -- jvr
f09f6a5565 Re-format the module docstring and document the new get() argument.
ebe2a12de8 Incorporate changes for patched version of ConfigParser.
e6506e753b Patch by Chris Petrilli (not really tested since I don't know this module myself) to accept an option keyword argument (vars) that is substituted on top of the defaults that were setup in __init__.  The patch also fixes the problem where you can't have recusive references inside your configuration file.
9f253dc3ff \py@modindex:  Format the index entry for the module index more like 	that used in the "normal" index.  No visual difference, but 	more easily processed by helper scripts.
bc866ce2e3 Documentation for the ConfigParser module, by Christopher G. Petrilli (petrilli@amber.org).
7c43905cd9 Added Sherlock source for Python documentation, and added icons to them all.
5b97716caf expandtabs__doc__: blank line which was not terminated with \n\ caused the SunPro C compiler to choke.  Removed this redundant line.
a106568eed Add spawnv and spawnve functions for Win32 platforms.
54ec2884b8 A gift from Fredrik Lundh: fast C implementation of expandtabs(). I've reformatted it, added a few comments, a test for tabsize <= 0, and used the AS_STRING macro.
9700e9becc Document the default for tabsize in expandtabs().
3e0d319196 The usual.
dfd8954e36 Allow recognition of attributes even if they don't have space in front of them.  I.e., '<a name="foo"href="bar.html">' will now have two attributes recognized.
3dbba6ec3a Change rare occurrences of #if HAVE_LONG_LONG to #ifdef.
aa8d16761b Make sure not to call realloc() with a NULL pointer -- call malloc() in that case.  Tamito Kajiyama.
11801859e0 Include myselect.h -- needed on some platforms.
8bf6dc77d1 Rearrange the -I flags for compiling _tkinter.c so that /usr/local/include comes before /usr/X11R1/include.  On some Linux distributions the latter apparently contains (standard!) a bad tcl.h or tk.h.
2fff84d892 Don't die if CodeType doesn't exist -- ignore the error.  This could happen in restricted mode.
7999bfb235 There's a macro PycString_IMPORT which the documentation listed as PycStringIO_IMPORT.  While arguably the name used in the documentation is more consistent, I think it's probably safer not to change the macro definition and instead fix the doco.
0189c010c3 Correct typo in new function get_breaks().
816a9fbd2c Change clear syntax to support three alternatives:
6ea27cc2c6 Change clear_break() to the old signature clear_break(file, line). Add new clear_bpbynumber() with single bpno argument.  (Adapted from a patch by Richard Wolff.)
3bbef60990 Ai!  complex_nonzero() has && which should be ||, else decidedly non-zero things like 5j and complex(1,0) are considered to be zero/false.  Tim Peters.
d371ff17a1 Only do ttyname() when HAVE_TTYNAME is defined.
27e04206b9 Adding sherlock search templates for Python and Python FAQ.
c94e7854d0 Added Icn module to toolboxmodules
d26e1a0d3f Set PythonCore version number to sys.hexversion, and removed version numbers in all other projects/libraries.
d0f0637dad Script to synchronize files with / in their name and their _s_ counterparts. Needed to keep CWGUSI under cvs because of filesnames with slashes.
e3308ecb34 Test checkin, to see whether I really can do it. --jvr schpeaking.
ae1e875683 Test checkin, to see whether I really can do it. --jvr schpeaking.
a49a4eabbf Add "term" to AUTOCLOSE.
d1dbf633ed Header for PyObject_DelItem() mentioned non-existing 3rd argument.
539d4256b0 Updated for 1.5.2b1
90c3c164e0 In unpackevent, get the direct object (----) before asking for missed parameters. The documentation is unclear on this, but the old implementation caused problems with Default Folder.
d61f92bab3 Select the whole default input field in AskString (Joe Strout)
f19feb8fb5 (py-mode-map): Add back force of RET (aka C-m) to py-newline-and-indent.
1c4d96fde8 Added examples/testcode for the Icn module.
a0fcd25800 Don't qualify local symbols with aetools...
d9f5a39ef3 Manually added definitions for normal, bold, etc. These are in MacTypes (of all places) which isn't worth bgenning.
c0011894b2 Updated for 1.5.2b1
13976c80a7 Updated for 1.5.2b1 (better late than never:-)
7d2f9d6e6c Updated the version number in the vers and preffilename resources.
3008b04e38 Removed warnings for packages (Just implemented support for freezing them, so the warning is obsolete).
43278f01dc convert():  Added parameter "autoclose", which should be a sequence of 	general identifiers for which closing tags will be omitted 	when SGML is generated.  This can be used to tell the markup 	generator to drop stuff like </para>.  Note that it needs to 	be possible for the closing tag to *always* be omitted for it 	to be included in "autoclose".
0a5b8de5e2 Modified the "sgml" and "xml" targets to stop if the sub-makes fail in any subdirectory; don't continue with remaining subdirs.
19a0dba342 Add caveat on partial dependence on the "cl" module, only available on IRIX systems.
9ea3e36419 Move the jpeg module to the SGI section; it is dependent on the "cl" module available on IRIX.
4259f0db04 create_module_info():  If there's a \moduleauthor, move it to an 	<author> inside the <moduleinfo> element.
36dfe58694 isnmtoken(), istoken():  Fix to ensure the regex has to match the 	entire attribute value.
2664db9f76 handle_labels():  Fix problem for document fragments containing more 	than one "root" that prevented all the <label id=...> items 	from being promoted to id attributes on the enclosing chapter/ 	section/... properly.
a7998f650a Revised comments on null bytes in pattern string.
6ffa445832 Fix second description of handling 2-digit years (last item in introductory text).
d6ced7d199 convert():  Change the element name remapping to convert <refmodule> 	to <module link>.
f82e4ab617 format_attrs():  Attempt a bit more minimization for SGML output.
9bbdce5945 add_module_idx(), add_idx_hook(): 	Change the message printed before running buildindex.py; 	"Doing the index..." wasn't clear and could be misinterpreted 	with an inappropriate mindset.  ;-)
0237909e42 Enable os.path as a mostly-normal submodule, including "from os.path import isfile" and "import os.path".
cb5540e72a (py-mode-map): Removed special bindings for C-m and C-j to py-newline-and-indent.  These ought to get picked up by the mapcar that follows; any existing binding to newline-and-indent gets shadowed to py-newline-and-indent.
f8ddb6afa0 (py-narrow-to-defun): New command (bound to C-x n d) which mimics the standard narrow-to-defun but works with Python classes and methods. With no arg, narrows to most enclosing def/method.  With C-u arg, narrows to most enclosing class.
f6cdcd509d Added 'warn' method.
7eca8e5017 Fix typo spotted by Jeff MacDonald <jam@ans.net>.
36911a1ca9 Only deiconify when iconic.
f87240f447 Misc
31000dd0f4 Interface to GetIcon, PlotIcon and friends.
433892021e Added doc strings to the exception classes. Contributed by Blake Winton, but considerably edited.
40233ea70a Patch by Piers Lauder: make exceptions classes. Take opportunity to add more explanatory messages to exceptions.
1d7b0fa9ca (py-electric-delete): Implement the XEmacs 21 blessed way of checking for delete forwardness.
945554709e Bruce Wheeler quotes Mark Hammond with a different version of the last patch to this file: use pathLen, not bufSize, as the initializer.
589bc63e84 Add a "tarball" target.
6038f54b74 Adjust so that we are no longer using special entities for well-known names.  These are too much of a pain for occaissional authors.
53610caee2 for method getaddrlist(): Added a note clarifying that all named headers and their continuation lines are parsed.
3effeedad3 Shorten the name of the <rfc> "number" attribute to "num".
d24167baf2 Make <rfc> no longer an empty element but a container.  The text currently generated by the LaTeX and LaTeX2HTML processes is generated here as well, making it more flexible in the SGML version.
e75888eb85 Test the rfc822.py module.  Contains just a few simple cases, and some troublesome ones encountered on the c.l.py list.
8a578436f4 Message.getaddrlist(): This now handles multiple occurances of the named header, so that if a message has, e.g. multiple CC: lines, all will get returned by the call to getaddrlist().  It also correctly handles addresses which show up in continuation lines.
f8ebb5521d Several new functions to re-write tables to be at least partly conformant with the OASIS Exchange model.  There's a little more massage left to do, but not much.
ca6954a979 Should include "Python.h", not <Python.h> -- it's not a standard header file (yet :-).
11a5071ed6 Jim Ahlstrom patch: Watcom chokes on a long expression in c_asinh(). Break it up.
a71b5f4e1d Jim Ahlstrom patch: the module doc string is too long for 16-bit VC 1.5.  Omit the second part.
3aa23fdd47 Jim Ahlstrom patch: cutoff should be a long for machines with 16-bit ints.  (In theory, other variables should be widened to long as well, but this won't ever be needed, since the len of a list is still an int.)
3c25904a98 Jim Ahlstrom patch: BIGCHUNK is too large for 16-bit int.
3d37f43293 Jim Ahlstrom added some SIZEOF defs for VC and WATCOM (only).
a50a1df588 Added clean and clobber targets.
54bad44f25 Update to the latest version of Michael Ernst's script.
3a7a3d745d "Driver" makefile to convert all documents to SGML or XML at once.
7727416686 Add usage of the "driver" Makefile.
9d1c3b565f Elaborate a comment on the format of the table that drives the conversion.
d7acf02290 Adjustments to allow elements with subelements as parameters.  This is used to deal with the table headings and entries.
79cbadc194 Added fixinfo.el to the list of dependencies.
79ad1f19dc Escape special characters on output.
348fd06890 In rcpt(), avoid a space after the TO: address when the option list is empty.  Make sure there is a space when there are options.
e1bf7e8c1d Change the order of the utime() and the chmod() call in copystat(). This doesn't make a bit of difference on Unix, but apparently on Windows NT you need write permission before you can set the utime...
9481821123 Updated for 1.5.2b1
da71e315bb Update the comments on info files.
e36e4e6778 Use \refmodule when we say "use the XXX module instead".
da94374a86 \seemodule:  Fix so that each \seemodule entry gets its own paragraph, 	so they don't get run together when there's no blank line 	between them in the source.  The HTML conversion already did 	the right thing.
2581704dfa do_cmd_refmodule():  New function to support new \refmodule macro.
b5600e7cb9 Hand't been committed yet (minor changes)
50ff95475b CW Projects for 1.5.2b1
e9a4aaf1aa Distribution databases for 1.5.2b1
08cae08a6a Removed USE_MALLOC_DEBUG that shoulnd't be in the production version.
d1dc47558c Added: mems.lib.text_file: provides TextFile class for parsing text files with (optional) comment stripping, blank line skipping, whitespace removal, and line joining with trailing backslashes.
894ee6f668 Renamed test.py to testcode.py so one can import Python's test package from inside IDLE.  (Suggested by Jack Jansen.)
5051f4f80d Hack to close a window that is colorizing.
5cc3129260 Vladimir Marangozov's patch: The separator dances too much and seems to jump by arbitrary amounts in arbitrary directions when I try to move it for resizing the frames. This patch makes it more quiet.
8d43a2937b Added a few items.
fcb7adb6aa Fix the HTML tarball target to generate the HTML if needed instead of bombing.
7a5f420e67 Chris Herborth's first pass at making config and install for BeOS better.
0039d7b4e6 A gift from Sam Rushing - modules asyncore and asynchat for the standard Python library.  (Async socket support.)
dd7610cac9 Bump the date.  Seems like fun.  ;-)
701f10fbea Simplify command that extracts the number of pages from a PostScript file; use "grep -c" instead of "grep | wc -l | cut ... | tr ...".
39cddb7439 Added \modulesynopsis.
03dd3efd5a <writer>.send_paragraph():  Clarify what needs to be done by this 	method and what it should not do.  (Specifically: handling 	breaking of last line of preceeding paragraph.)
f4bb656a4f DumbWriter.send_paragraph():  Fix problem with DumbWriter reported to 	the newsgroup by Raymond Tong Leng Ng <rntl@yahoo.com>.
e23cde2f8d Avoid overflow if possible in calculations for range(); report unavoidable overflow as OverflowError.
5a0ca4e55c do_cmd_methodline():  Fixed reference to method name when generating 	the output HTML.
4856d01797 Removed a lot of unnecessary comment markers which cause unexplained numbers to appear in the HTML version of the manual.
8e2c9457a2 output_body():  For <address> elements, just skip, since they're 	always part of the page trailer.
bb3b0028ba Patches describing the statvfs() and fstatvfs() functions.  Additional text about large file support.
583b019de4 Addition to previous note -- comfigure --without-gcc also works.
f5ade40375 Add note about gcc-2.8.1 setting sys.maxint to -1 on 64-bit IRIX.
6a1b53c165 get_config_h_filename():  Fix to work with current Python 	installations; it was picking up a stale config.h from an 	overwritten installation.
c66e860418 Some requests have been fulfilled.
245ddc4b88 Set the cursor to a watch when opening the class browser (which may take quite a while, browsing multiple files).
b287b3ad1b Got rid of debug print statement in goto_line_event().
d5c8497a81 I think I like it better if it prints the traceback even when it displays the stack viewer.
9016fcf41c Bind ESC to close-window.
dc5066ee81 Use a HSeparator between the classes and the items. Make the list of classes wider by default (40 chars). Bind ESC to close-window.
d5f038098a Separator classes (draggable divider between two panes).
031d0e5feb Patch by Charles Waldman -- remove unneeded and even harmful test for float to the negative power (which is already and better done in floatobject.c.)
0bdbe6c5f0 Added some more comments.
2403b0c5d4 Don't traceback when wakeup() is called when the window has been destroyed. This can happen when a torn-of Windows menu references closed windows. And Tim Peters claims that the Windows menu is his favorite to tear off...
f52cca9812 Allow tearing off of the Windows menu.
0291d1d1d6 Close on ESC.
dd0d335758 Updated a bunch of things (it was mostly still 0.1!)
5dadf7e976 Use 'xrange', not 'range', in error messages.  Reported by Nathan Sullivan.
1a1c6bbf8c (py-outdent-p): Short circuit infloop for illegal construct (e.g. except: on first line of buffer).
83c74d44ce Added ScriptBinding to standard bindings.
9f42584907 This now actually works.  See doc string.  It can run a module (i.e. import or reload) or debug it (same with debugger control).  Output goes to a fresh output window, only created when needed.
5d00b6d459 Need extern decl. for fdatasync() in case it exists but isn't declared anywhere (or, more likely, the declaration requires a magical combination of _POSIX defines).
e6c2cf1c3d Now using autoconf 2.13
21142a09f3 Added fsync() and fdatasync().  Patches by Scott Cotton.  Requires HAVE_* macros set by configure script.
302331a3b6 FieldStorage.__init__(): if there is no content-type header, use text/plain for inner parts, but application/x-www-form-urlencoded for outer parts.  Honor any existing content-type header.
b33f612f33 What's new in this release.
2c1f6be38e Hack for Windows so that if (1) the exit status is nonzero and (2) we think we have our own DOS box (i.e. we're not started from a command line shell), we print a message and wait for the user to hit a key before the DOS box is closed.
b6584cac1e Remove the "lib-" prefix from the name of the info archive.
ed94dde4b9 No longer useful.
dd21c32169 It's finally gone!
f2b5374ba1 Remove obsolete files.
78104a9b77 Replace most everything but the comment at the top.
c4e9263010 Add a few comments.
38df3c383d Paul Prescod's patches to allow the stack viewer to pop up when a traceback is printed.
c58f346374 New support scripts for HTML->info conversion that use Michael Ernst's new conversion tools.
3fe1d32693 New conversion tools for HTML->info from Michael Ernst <mernst@cs.washington.edu>.
41498435ba Need to include <sys/types.h> for off_t.
df69365f5f Ty Sarna writes: The following patches (relative to 1.5.2b1) enable Python dynamic loading to work on NetBSD platforms that use ELF (presnetly mips and alpha systems).  They automaticly determine wether the system is ELF or a.out rather than using astatic list of platforms so that when other NetBSD platforms move to ELF, python will continue to work without change.
257fd514a3 Changes for long file support.
637ad47e61 convert():  Make sure no line has trailing whitespace.  (docfixer.py 	checks for \n\n as a paragraph separator, LaTeX allows white 	space between the newlines.)
446ccfe1ac The doc string for strptime had the arguments reversed -- the string comes first, the format second!  Scott Cotton discovered this.
c7dd3e11da Markup nit.
629082edd6 Change paragraph width limit to 70 (like Emacs M-Q).
2927e7891f Separating TODO from README.  Slight reformulation of features.  No exact release date.
6ba219e975 Separating TODO from README.
cf3ce92ef4 Explain how come that pickle and cPickle, while using the same data format, can produce different pickle strings for the same object.
e51aa5b2cd Minor clarifications by Sean Reifschneider: - add example of string literal concatenation - add clarifying comment to the example of the if statement
87e611e441 Replace the docs for reduce with an adaptation of its docstring, which was actually clearer!
74429eacb5 Add doc for access() and ttyname().  Patch by Sean Reifschneider.
6892aa372d fix bug in PyZlib_flush. patch from Grzegorz Makarewicz & Rafal Smotrzyk.
015f22a0fa Change the access() code to return 1 if granted, 0 if not granted. Patch (again) by Sean Reifschneider.
fcc5910090 Preliminary code to mark paragraphs.  Seems to work, but very slow.
5c355201e2 Fixed bug in the common-case code for HTTP URLs; it would lose the query,     fragment, and/or parameter information. 3 cases added to the test suite to check for this bug.
2386d7333f Constants for [f]statvfs() (new in posixmodule.c) by Steve Clift.
f98e2a787e Changes for long file support by Steve Clift.
00f0f6ef03 Changes for long file support by Steve Clift. (Slightly modified to isolate the test for various funcs more.)
3c9fe0cce3 Changes for long file support by Steve Clift. (This also redoes my previous patch, but better.)
cdd9ae00ba Changes for long file support by Steve Clift. (Really: moved a bunch of defs to longobject.h.)
763737be52 Changes for long file support by Steve Clift.
056bad993c Changes for long file support by Steve Clift. He also fixes thread-related evil that caused core dumps.
94f6f72c05 Changes for long file support by Steve Clift. Also added access() and ttyname() by Sean Reifschneider.
2e6e7d4b7a Changes for long file support by Steve Clift.
522af3a126 Update and add docstrings.
c553358c63 Remove documentation for whatraw() since it's gone now.
dc1aedfe2e Move brief descriptions of what() and whathdr() to docstrings in the functions (from comments).
9ddaaa1a30 Another patch from Fred: factored _init_posix into get_config_h_filename, get_makefile_filename, parse_config_h, and parse_makefile.
f4bf044999 Got rid of whatraw(). Doc-string-ified the lead comments. Added auto call of test() when run as script.
638d7f14f8 Add extend() method.  A small New Year's present from Jean-Claude Wippler.
60adb362df Document the sndhdr module.
a2e4017394 Shorten the synopsis that gets into the table of contents.
ccc627200a write_idxfile():  New function.  Isolate format of the external index 	data file used by buildindex.py.
02e18b4b84 Added missing "from" in IOError description.
26f0f65653 Remove obsolete comment.
4494101858 Incorporate fix suggested by /Fredrik Lundh in the newsgroup to cope with trailing garbage generated by some broke uuencoders.
716a89c606 Patch by Charles Waldman to implement an optional nlines argument to w.scroll().  (It then calls wscrl(win, nlines) instead of scoll(win).)
5d56d3665f Make the documents that have indexes dependent on the buildindex.py script.
7d45f6dcc4 do_cmd_methodline():  New function, implements indexing version of 	\methodline.
caa0606471 Upgraded to WISE 5.0g; bumped to 1.5.2b2; added dialog for Tcl.
3b07480a17 trim_ignored_letters():  Simplify a little.
1e899cdeaa Hm.  There was a boundary condition error at the end of the file too.
4eac47cf50 Hm.  Add Unix binding for replace, too.
8d7e11a8c1 Update information on the version of latex2html to use, including complaint about 98.2b8 problems.
f8d579c5e3 This hopefully fixes the problem of having to set PATH in autoexec.bat in order to find the Tcl DLLs -- Tkinter calls FixTk which will hunt around in a few common places and then set PATH and try again, or else issue a big clarifying error message.
88303194a5 Fix two places (seek and truncate) where a cascade of PyArg_Parse calls was used instead of a single PyArg_ParseTuple call with an optional argument.
e89d4506c1 Chris Herborth writes: Here's a little cleanup of the BeOS/ directory for 1.5.2b2; it makes the ar-fake, linkcc and linkmodule shell scripts a little smarter (and, in the case of PowerPC systems, quieter :-).
cad3d47f1e Chris Herborth writes: Donn Cave tells me the PyImport_BeImageID() function isn't needed anymore.
d3b0921f57 Chris Herborth writes: Donn Cave tells me the PyImport_BeImageID() function isn't needed anymore.
906572a06d Ran eventparse.py again.
e911c3e20c Added Unix Meta-q key binding; fix find_paragraph when at start of file.
16b91f89b5 Added Meta-/ binding for Unix as alt for Alt-/.
5bfffbd79d Add unix binding for grep (otherwise the menu entry doesn't work!)
1ae3f89611 Adjusted Unix height to work with fvwm96. :=(
b75d021081 Typo:  "TWELV" --> "TWELVE"
d53869ea33 Need to import sys!
f903898fff Formatted some paragraphs
94e82ceeac Add new extension to reformat a (text) paragraph.
46facd1bac Typo in Win specific height setting.
909bc18188 Recover from failed saves; when a file turns out to be a directory, create a directory and moer the original file to the index.html.
0a6363d7e1 Get rid of the strptype() declaration -- on some BSD systems, it's a conflict, and it should be declared in time.h anyway. (Too bad if gcc -Wall won't be happy if it isn't declared...)
e0d7dae3b8 Add sys.hexversion, which is an integer encoding the version in hexadecimal. In other words, hex(sys.hexversion) == 0x010502b2 for Python 1.5.2b2. This is derived from the new variable PY_VERSION_HEX defined in patchlevel.h. (Cute, eh?)
6e0a3499ab Use PY_VERSION instead of PATCHLEVEL.
f1176c4815 New version identification scheme. The version numbers are now exported by Python.h. Also rolled back the API version change -- it's back to 1007!
33f2b7b257 Added something like Tim Peters' backspace patch.
0c65e2504e Adapted to Unix (i.e., more hardcoded constants).
47ae028071 Call PyInitFrozenExtensions() as requested by Mark Hammond (his patch).
504b0bf066 Checking in IDLE 0.2.
f07c328c07 Document the optional mode argument (Z_FLUSH, Z_SYNC_FLUSH, etc.)     to the flush() method of compressor objects.
c0ef565cdf D.M. Pick gives me a more accurate distillation of his `uk' explanation :-)
94c4a7976f Added index entries to make it easier to locate directory & file operations.
8692998018 Added index entries to make it easier to locate directory operations.
cc09e8dc82 Clarified what Python versions the interactivity chapter applies to, and what it doesn't apply to.
76fa3b73d6 Remove recently documented modules from the undoc list.
03a0235793 Print a line to the console reporting the number of index nodes processed.  This can be interesting to see.
566c8327f7 Added entry for libshutil.tex.
449e18f459 Add documentation for shutil module.
cd058539a8 Adjust a few niggles that affected the HTML conversion (a couple of "^"s were being dropped in the context of [^...]).
d82af0b8ec Remove all use of $* in commands; some makes (Solaris 2.5, IRIX 6.X) only expand this in dependency lists.  Thanks for Sjoerd Mullendar for pointing this out.
a2b38030d6 Update on history of `uk' top level, greatly condensed from David Pick's emailed account.
82eae9eaa7 Added mt_interact() -- multithreaded version of interact(). interact() automatically uses this on Windows (where the single-threaded version doesn't work).
db01ee0e22 Patch by Mike Meyer:
9a4d63730e Patch by Mike Meyer:
99e1131536 Avoid crash in parsedate_tz() on certain invalid dates -- when the field assumed to be the time is in fact the year, the resulting list doesn't have enough items, and this isn't checked for.  Return None instead.
2d3b0d725a Provide more detail when the commit button is not shown.
c38e7d4c4b Oops, forgot a pair of {}'s.  (Greg Couch)
d358afeec0 Document 'N' format character for Py_BuildValue -- like 'O' but doesn't INCREF.
d341500d8f Add 'N' format character to Py_BuildValue -- like 'O' but doesn't INCREF. Patch and suggestion by Greg Couch.
11847896ed Chris Herborth discovered a typo in the arrow key symbols.
32f7ae0066 Fix many of the specific targets in links from the index.
7d65d388b8 Add the getpass module to $(LIBFILES).
99e2c39b31 Add the getpass module.
5ac2a07fca Basic documentation for the getpass module.
85220410e0 Bump $(RELEASE).
fa38b3ee74 This commit was manufactured by cvs2svn to create tag 'r152b1'.
45d2ae5161 Use installed Tcl lib files -- also for Debug configuration
7aa9f582f4 Use installed Tcl lib files
0720177e3d Small, and final docstring merge with Dragon's version.
5cb48a4c98 Added a \versionchanged since the API changed to support namespaces with 1.5.2.
66419bafc6 Added Tcl 8.0.4 installer.  Added Tools/idle.
292b9ebfba Added information on when this was added, allowing us to release the documentation on the Web while people are still using < 1.5.2b1.
ae48aabb10 Update the date.
1189fa98eb Adjust markup to match current conventions, and make it formattable.
768ac6b804 Start of text that describes differences between match and search.
5eecd7b3bd Improve a couple of comments.
191f2857f5 Use \moduleauthor and \sectionauthor instead of a comment to credit the author (just happened to notice this one).
7be0cde3a0 Add an explanation about what the example does and doesn't do.
2eff3c5273 do_cmd_rfc():  Make the "RFC ###" a hyperlink to the master RFC 	repository.
782c973cb9 Added libnetrc.tex and libshlex.tex to LIBFILES.
c822a453bd Add warning to Netrc's docstring that it is obsolete -- use the netrc module instead.  (The main advantage of the latter is that it comes with documentation.)
de8b026148 Added shlex and netrc modules; added warning about urllib change affecting subclasses (which Jeremy just found out).
d449342966 Optimistically, we label this as ready to go today.
af5add4629 New test function by Sjoerd, adding -t option.
7ea1d972d1 The usual.
fdd302820e Fix for modulefinder so that it prints all modules an unknown module was referenced in instead of only the last.  (Sjoerd Mullender)
f96cff2c82 Last-minute oopsie by Chris H.  (Chris, please check that I did this right!)
343848b7b9 Last-minute update by Chris H.
3c8e54bf62 Applied Fred's patch to fix the bugs that John Skaller noticed.
9c30c24bc2 Adding shlex and netrc by Eric Raymond.
5e97c9dff9 Adding libshlex and libnetrc by Eric Raymond.
a7d9bdfab6 A few other docstring fixes, most importantly to be a little nicer to Emacs ;-)
4c4bec86f4 Nothing earthshattering, just some fixes to typos and other formatting bugs in various docstrings.
e96bd3f60f News for 1.5.2b1.  Moved news before 1.5.1 to HISTORY.
9818d0f06a New names.  Keep those contributions coming!
439d1fa8b0 Moved history up to and including 1.5.1 here.
44331ec9e0 Get rid of python_nt.def -- it's no longer needed!
a8b47fe5c6 I can't seem to do anything right :-)
6058eb49ee Improve comment for PyImport_Import() as suggested by Bill Tutt.
65d5b5763c Thanks to Chris Herborth, the thread primitives now have proper Py* names in the source code (they already had those for the linker, through some smart macros; but the source still had the old, un-Py names).
14f53a7757 Chris H. adds MACHDEP=beos to the CCSHARED variable
d147a6c35a Renaming Lib/plat-beos1 to Lib/plat-beos at Chris Herborth's request
b1f97d6765 Suggestion by Tim Peters clarifying what "before global" means.
e848976fba Clarify descriptions of some operations; it's not always clear that strings are not actually modified.  Problem reported by Dr. Peter Stoehr <peter.stoehr@weihenstephan.org>.
3b02ddfa41 Add a bunch of index entries related to retrieving information from the process table.
98c17b3aee Marc-Andre Lemburg notes about statparse():
95864d35c6 Add dummy variable to avoid optimizer bug on OS/2 -- patch by Jeff Rush.
885553e8d3 Use PyThreadState_GET() macro.
89ce454498 Make sure that -t and -tt also work on strings passed to compile().
b55f9ff68c 100 bottles of beer on the wall example.
275ea67e6b Add macro version of PyThreadState_GET().  This uses _PyThreadState_Current, defined in pystate.c.
18bc7c2276 Make current_tstate a global, _PyThreadState_Current.  This is to support a macro in pystate.h.
dfaac4df9e Add XXX comment about the need to add a dump() method to the Text widget -- no time to do this right now.
c08cc50e00 Add XXX comment about a test that doesn't seem right -- no time to explore this now.
0b56a3e9a7 A mod whose author I forget.  (I must've mislaid the email.  If it's yours, please let me know for propoer acknowledgement.)
91c8f5901b Sjoerd Mullender:
5bc4abe006 replace missing zalloc initialization (test_zlib now runs successfully)
36252022ec remove debugging fprintf (should have checked this before previous checkin)
c6769c54f4 Typo discovered by Just.
1f05708f69 Use __stdin__ instead of stdin to derive FileType -- safer against assignments.
1190ee3d03 Fred's sysconfig module.
a37e244536 patches from Andrew
1924a0677d Chris H. writes:
eb452321af Improved instructions by Chris H.
ee789b9601 Initial checkin of distutils source files.
b083a9fb54 Sjoerd Mullender writes:
6de7d0c338 When _PyString_Resize() reports failure, the variable referring to the string we wanted to resize is set to NULL.  Don't Py_DECREF() those variables!  (5 places)
654387efbd Fix the class browser to work even when the file is not on sys.path.
060f24ce97 Forgot to check this in for Chris Herborth
33add0a95a Sjoerd Mullender:
dc86a4e5bb Added a -q ('quiet') option to tabnanny, which causes only the names of     offending files to be printed.  Good for emacs `tabnanny.py *.py`
ea5163261e The usual
2666a15576 Several tiny changes:
0e1d0e95ea Patch by Chris Herborth: have to use a const-correct prototype on BeOS or the compiler gets uppity.
5cd975c678 Patch by Chris Herborth: BeOS headers live in various non-standard places; luckily, there's an environment variable that lists them all.
fc4966b7af Changes for new BeOS port by Chris Herborth
476e49f055 Jim Fulton writes:
2edcf0d71c Move the prototype for dump_counts() to before where it is used. (This only applies when COUNT_ALLOCS is defined.)
38b92eb56a Sjoerd Mullender:
9c1696cff5 (py-goto-beginning-of-tqs): Finds the beginning of the triple quoted string we find ourselves in, based on the passed in delimiter.
ef30092207 Added most of the mechanism to change the strips from color variations to color constants (i.e. red constant, green constant, blue constant).  But I haven't hooked this up yet because the UI gets more crowded and the arrows don't reflect the correct values.
6403991a9d A start on the TestModExp applet "Author" => "Contact"
107e623ef0 grid_bbox(): support new Tk API: grid bbox ?column row? ?column2 row2?
88604056c5 "Author" -> "Contact"
4c07f81d60 Fixed bug reported to Gregor Hoffleit: > mpz.mpz('\xff') should return mpz(255).  Instead it returns > mpz(4294967295L). Looks like the constructor doesn't work with strings > containing characters above chr(128). Caused by using just 'char' where 'unsigned char' should have been used.
cada2938f7 As noted by Per Cederqvist, new_buffersize() sometimes returns the buffer increment, and sometimes the new buffer size.  Make it do what its name says, and fix the one place where this matters to the caller.
68055ce6fe When tracing references, reset the type and size of tuples allocated from the fast free list -- the type (at least) is reset by _Py_Dealloc().
21ef088265 Need to initialize self->safe_constructors early on to prevent crash in early dealloc.  Patch by Andrew Dalke.
732aa2f987 Gregor Hoffleit writes:
aaed9710e9 create_module_info():  New function:  Modify a <section> to create a 	<moduleinfo> element based on various meta information, and 	strip some cruftiness.  This is more usable for information 	extraction, and organizes the information more clearly.
fee6abea90 Remove another {\rm ...} construct.
4abcffb233 Don't pass around a list of known empty elements, since the ESIS contains "e" events for them.  This wasn't used anyway.
46e9705eca Remove prototypes for PyOS_strto[u]l -- Chris Herborth.
ca90605678 Add more SET_LINENO instructions in long argument lists
f5046d1aea Remove prototype for PyOS_strtol -- Chris Herborth.
cc34faaf14 Add prototypes for PyOS_strto[u]l -- Chris Herborth.
9df827f3ba Need to define DL_EXPORT, of course!
e18f8878aa No longer needed.
5de54208a5 Needed to add DL_EXPORT to (redundant?) extern decl of module init function.
fba0ba2a6f Added a transform to start cleaning up the modulesynopsis stuff a little; more thinking is needed about what we really want.
e9e05968e3 Nits.
c166331cd3 Handle SGML variant as well as XML variant.  SGML is *much* more likely to be used.
65e164f81d Removing the BeOS specific 'ar' utility -- no longer needed, says Chris Herborth.
030d2ec16c In read_multi, allow a subclass to override the class we instantiate when we create a recursive instance, by setting the class variable 'FieldStorageClass' to the desired class.  By default, this is set to None, in which case we use self.__class__ (as before).
f8b3b944aa In __getslice__, use self.__class__ instead of UserList.
9819e4c5cf Sjoerd Mullender writes:
e6360fab2c Moved to Python 1.5.2/Lib
0ad55fb241 Update the descriptions of strftime() and strptime() to avoid confusion, and describe what the "directives" are about.
e94e3fbb72 Make VC++ 5.0 compiler happy.
aac399b80b Correct the poplib example.  Stephan Richter pointed out some problems with it.
b057dd8efa Correctly document atan2.
64583d3f87 Rename the parameters of atan2(), based on comments from Guido & Peter A. Koren <pkoren@hex.net>.
204b65c50f Sjoerd patches the previous patch:
f0f3600d0b Undo the change here -- there's no point in declaring a static function as DL_IMPORT()!
f484a3366b Sjoerd writes:
926f7b6615 Adding thread support for BeOS by Chris Herborth.
d83675f344 "singed" --> "signed" (3 places)
9c1201fe39 Py_Main() must be DL_EXPORT too.
5c3b384a85 Patch by Jeff Rush:
9228cbd084 Patch by Jeff Rush:
391c8b4ea2 Open the file in binary mode -- so serving images from a Windows box might actually work.
08833f2a6d intermediate
e1425d6a33 Fixed some bugs
93ec4cc6f4 Fixed typos in --dump
e039439e3b Clarify evaluation of default arguments at def time with more text and an example.
c6e22902ad Added Doc strings -- by Chris Petrilli.
13fdf5e917 When comparing bound methods, use identity test on the objects, not equality test.
cf183acf15 Use PyInt_AS_LONG macro instead of explicit inlining.
d5516bc45f One more fprintf bites the dist -- use PySys_WriteStderr
f261526423 Need to add default decl of DL_IMPORT, for mymalloc.h
3886bb6997 Add DL_EXPORT() to all modules that could possibly be used on BeOS or Windows.
50f385c197 Fix two small bugs; add DL_EXPORT() to initcPickle decl.
43466ec7b0 Add DL_IMPORT(returntype) for all officially exported functions.
b241b67b89 Turtle graphics
3b5330ef2d Bernard Herzog pointed out that rl_parse_and_bind modifies its argument string (bad function!), so we make a temporary copy.
8c2da61811 Add explicit example on how to import a submodule of a package using __import__ and getattr().
ce0bbd270b Added Helpwin -- help in a text widget
eb6b9b7ebb Untabification and other cruft
d0e1e51385 docstring(): Function for returning __doc__ % globals()
f622a33b29 audiopy: slightly revamped UI... includes a menubar, no quit button, and added a `Help' menu item that puts the README (or docstring if that can't be found) in a scrolling text widget.
7531d507c1 New API version (enough has changed!).
53646881f3 Initial version of the README file
86bc7b01b5 General comments on what's here and how to try it out.  Note dependence on the XML package.
6d26f4b188 Moved NotImplementedError into alphabetical order, and reword description.
1e151322fb Added documentation for NotImplementedError.  Fred (I'm sure) will sanitize for your protection :-)
3695b1212c Support conversions to both SGML and XML; SGML is the "default".
aeea9810cd Use esistools. Lots of changes to the conversion table.
4db5b4636c Use esistools. Generate ESIS data instead of XML. Misc. changes to some transforms.
f077b9d61f Use esistools, getopt.
3843bae969 Utility functions and misc. classes used in handling ESIS data.
2f8592cbea Ignore the byproducts of SGML/XML conversions for now.
344864fcfb Added new builtin standard exception: NotImplementedError (its C counterpart is PyExc_NotImplementedError).
eabfab1048 Nits to support conversions.
8fe2a34e1f Added NotImplementedError, subclassed from RuntimeError
d052ff0e57 Added PyExc_NotImplementedError
1e270f0e03 Nits to support conversions.
f954b6516e Remove $(CUTCRUFT) garbage; now in fixgenents.sh.
3d5e2c032d Move nasty cruft from make.rules' $(CUTCRUFT) here, mostly to clean up make.rules.
50b804dc88 Fix minor nit with respect to conversion.
caa3379c4f Remove {\rm ...} constructs.
84538cd076 Remove some remaining {\rm ...} constructs.
f790b16d00 Change "for" explanation slightly based on comment passed along by Blake Winton <BlakeW@pcdocs.com>.
ca6d6355d7 l2hoption:  Do the "right thing" to quote the right-hand-side of Perl 	assignments.  This allows '"', '$', and '@' to be included in 	the values passed to parameters like --address.
a8ba364700 Add a --address parameter to the mkhowto command line to direct documentation comments appropriately.  In response to comment from Martijn Faassen <faassen@vet.uu.nl>.
7777e36c21 Add a -address parameter to the LaTeX2HTML command line to direct documentation comments appropriately.  In response to comment from Martijn Faassen <faassen@vet.uu.nl>.
1ea5848b7b Oops, remove LaTeX2HTML version number.  Could become wrong and isn't needed, since it's always added to the comments in the page header anyway.
15796f791a do_cmd_textohtmlinfopage():  Rip out most of the boilerplate and move 	it to the about.dat file.  Only what really needs to be 	generated is, and the remainder is easier to maintain than 	Perl code.
d83c8bd95f New file.  Contains boilerplate text for the "About this document..." section of LaTeX2HTML-generated documents.
1776556f8f Markup nit to ease conversions.
3d29955a6e Markup improvements to help with conversions.
01d5d94020 Remove cruft from the old Texinfo conversion.  This simplifies some of the newer processing.
5208823158 Remove bogus \@.
d61975e179 Minor markup nit to ease conversion processing.
f6c59e8fff Do all the right imports.  Problem reported by Martijn Faassen <faassen@vet.uu.nl>.
67a40e814c Patch by Jeff Bauer: a minor change to declare two new threaded versions of Unix Server classes, using the ThreadingMixIn class:
42f5298ab5 Several small adjustments.
fa1cceb91f Make \var work correctly in math mode.
87dfd3cfbf Handle output of \geq and \leq.
0903f2a36d Typo
b5eed0328f Support underlining of menu labels
6e0a413693 New approach, separate tables for menus (platform-independent) and key definitions (platform-specific), and generating accelerator strings automatically from the key definitions.
4471f20ed4 Logical markup.
f65e323101 Fix remaining {\rm ...} construct.
af2590a991 Remove some optional parameters that are unnecessary in context.
72554e476f Remove bogus \@.
b6d45c6ad1 Remove bogus \@.
4c5e533693 Do the right stuff to convert what was originally \e, \ldots, and --- in the LaTeX sources.
d03268feaa Remove two remaining {\tt ...} constructs.
78eebfdbf4 Remove two remaining {\tt ...} constructs.
5eabf3823b Clarify that min and max also take multiple arguments.
1e42d8aaab Massive change to just about every construct that impacts the index.
ea81edf059 Markup nits.
1475e88a35 Minor fixups to some index entries.
2b3730e284 Minor adjustments to a few index entries.
1cbd196f96 Minor nit that fixes a bunch of indexing:  the way the classdesc environment saves the name of the last class described, method and member descriptions were not picking it up correctly.  Thus, many index entries were described as "( method)" instead of "(FooClass method)".  Multiple entries were collapsed in the index when methods/members from multiple classes share the same name.
e839199014 Fix indexing of func_code attribute; this is on a function, not a code object.
053b8dfcde New version from Jim Fulton:
7d9b4133eb New version from Jim Fulton:
e720176548 Wrong pathname in docstring detected by Fredrik Nehr.
d8faf85d40 Supplemental rules to convert a .tex file to a .xml file.  Both XML and SGML will be supported soon, probably using an ESIS representation saved in a temp file.
6942e57f87 Script to convert things like <C/> and <Cpp/> to &C; and &Cpp;.  This is something that con't be done with the DOM as far as I can tell.
e743fd01ac Rationalize a word-space markup to not break in the LaTeX->*ML conversion tools currently being constructed.
1cb330c383 The & character is also escaped using \.
1ff6db484f Add some additional cleanup transformations.
df12a59305 Fix cosmetic bug in delattr docstring discovered by JvR.
014518f66c Whoops!  One the "redundant" initializations removed by Vladimir in the previous patch wasn't -- there was a path through the code that bypassed all initializations.  Thanks to Just for reporting the bug!
5701482ea7 Fix comment regex so we don't screw up structured comments with different internal indentation levels.
04307ce789 Rewrote the section on sys.exit(), documenting other argument types than integers and recommending sys.exit("message"). (I see this as Python's answer to Perls ``die "message";''.)
0320473a29 Script to squirrel around with the DOM tree of document fragments from the LaTeX-based ESIS streams to be a little better structured, and generally perform clean-up.
30a68c7a2b Moved into tools/sgmlconv/.
63de8f6d55 Moving to sgmlconv/ subdir.
bbd7509dbe Fix up the extraction of optional parameters a little.
185ead6f37 Doc strings by Chris Petrilli.
c16149b17b Some cleanup.
96b07a9453 Fix some minor problems.
34d8317013 (py-execute-region): Hack around the different behavior and switch semantics between CPython/JPython when the script source is piped to stdin.
99ff8c4361 First cut at a script to generate SGML/XML from an ESIS event stream, probably only usable for the Python docs.  But also probably more useful than latex2esis.py.
95f4f92b47 First cut at a script to generate ESIS events from LaTeX source, probably only usable for the Python docs.
691d27a7ae Bomb on deleting a temporary breakpoint: there's no method do_delete(); do_clear() was meant.  By Greg Ward.
3fe1b14c96 A little more tweakage
2858b43613 A little more tweakage
d81d534aef A bit of tweakage of the --help and --version options
615a66a5ef (ChipViewer): Make frame sticky NSEW to fix geometry problem.
93990de252 tweak version number
f79b7e274c Update
e882b8a92e Updating
db70d06464 Eliminate remaining \verb/.../ constructs; there's no need for them.
014e0e29b1 (py-execute-region): Patch by Hunter Kelly so that execution uses the correct Python shell (CPython or JPython).
50cd34888b Remove some redundant initializations -- patch by Vladimir Marangozov.
6d06094c77 Accept a non-list sequence for the long options (request by Jack Jansen).
e9bc62d993 RajGopal Srinivasan noted that the latest code doesn't work when running in a non-threaded environment.  He added some #ifdefs that fix this.
f05fc716d1 Remove dead code discovered by Vladimir Marangozov.
da30f4ca6b Fix typo in doc for handle(): client_request should be client_address. Noted by Stefan Witzel.
fdb3d1a75e Fix typo in docstring: client_request should be client_address. Noted by Stefan Witzel.
017f7780a8 Make tuples less hungry -- an extra item was allocated but never used. Tip by Vladimir Marangozov.
72fe0859d0 Clarify portability and main program.
a017777bd4 Added intro for 0.1 release and append Grail notes.
5e8aa549d1 Update the example in "Calling Python Functions from C" to use METH_VARARGS conventions and PyArg_ParseTuple(), and document the flag and where to look for PyArg_ParseTuple() info.
c46973c89b Document the user and password parameters to the NNTP constructor.
441abb4c8f Added a None button to turn off all input sources.
2510d22048 Clarify the default buffering for open().  (Comment from Andrew Dalke <dalke@bioreason.com>).
cab91efd34 Fix Barry's markup.
a096a2e6a2 Warn that AddModule doesn't import the module.
446fd04009 Metrowerks PRO4 finally fixes the hypot snafu.  (Jack Jansen)
9ed1a0afb9 Moved zmod and poly descriptions to the Obsolete section.
e0fbe1c26d Declaring zmod and poly obsolete.  They have problems.
b736a87703 Project files converted for CW Pro 4. And the daylight savings time switch seems to have "modified" the resource files (but nothing has changed there).
d55049aede If the module SUNAUDIODEV was generated on an older version of Solaris, the `CD' macro won't exist in the header file, so this will raise a NameError.
9ade9ddb14 MainWindow.__init__(): Move the import of Tkinter to here so that command line operation is (much) faster.
3febc2443c Added a version number, --version, and updated the docstring.
e77ec175d2 Rewrite, simplification of command line option parsing.  Many GUI fixes.  Input sources are mutually exclusive.
4a1cdd7f22 Document the new features of this module
b0d1b068d9 audio(7I) suggests that applications do the following to get the device and control pseudo-device:
2c8b35bdd2 some rewriting, must do command line args
b7d1d63f00 Input stuff
2a06084ed5 Added command line options
11b7ae5121 Initial revision
130072d663 Don't describe something as "below"; that won't make sense for the HTML version.  Give a reference to the actual section to allow a hyperlink to be built.
c024c99faf Fix typo reported by Gerry Weiner <gerry@ucar.edu>.
c1cea208bc Added URL to HOWTO page, with reference to Regex HOWTO. Corrected error: {,5} is not equivalent to {0,5}.
1d5f988457 (py-imenu-method-regexp): Fix suggested by Daniel Calvelo to generalize the matching of function arguments.
6839d3af10 #XEmacs 21 now supports Imenu, so I am able to test (and fix) some #simple things.  First step: rename the Imenu supportive variables and #functions in this file to py-imenu-* so I can grok what is part of #python-mode and what is part of Imenu.
38e21e75ad #Some minor changes in the commentary, obstensibly to test the new #checkin script.
566b6d5b59 Support the use of bibtex.  This is transparent to the user.
1bbc031999 #Fixed some typos in docstrings.
4089c110a1 root is now a global called _root
04101960e6 Indicate that os.environ may not be a real dictionary.
d1f2d7eede Bump the patch level to 1.5.2b2, just in case I feel like releasing next week. :-)
d9eee4ee0c Bump version to 1.5.2b1
d4103883f3 Raise the root window on reset(). Different action on WM_DELETE_WINDOW is more likely to do the right thing, allowing us to destroy old windows.
5ac15bc9c8 Split the goto() function in two: _goto() is the internal one, using Canvas coordinates, and goto() uses turtle coordinates and accepts variable argument lists.
2457fc2a81 Improvement to the previous fix suggested by Thomas Bellman: if the unlink() or fdopen() fail, close the file descriptor and re-raise the exception.
a96c2d407b Cope with destruction of the window
c62cf36e76 The last two example functions in the section about default argument values (4.7.1) should return l, not a.  Reported by Axel Boldt.
3fbe67abd1 Turtle graphics
dce3d5502e The TemporaryFile() function has a security leak -- because the filenames generated are easily predictable, it is possible to trick an unsuspecting program into overwriting another file by creating a symbolic link with the predicted name.  Fix this by using the low-level os.open() function with the O_EXCL flag and mode 0700.  On non-Unix platforms, presumably there are no symbolic links so the problem doesn't exist.  The explicit test for Unix (posix, actually) makes it possible to change the non-Unix logic to work without a try-except clause.
39926e4bba Use of Breakpoint class should be bdb.Breakpoint.
5d42b5b74d Moved compile_command() to a file of its own (codeop.py).
c41c1a984e Moved compile_command() here from code.py, so JPython can provide its own version.
d370379186 Jim Fulton writes:
cf1daad891 Brief update on the slightly changed API of pyColorChooser.askcolor().
2be858230a __init__(): Removed initialcolor keyword.
f72d580d5e sticky should be NSEW to fix pixel weirdness at right edge
4ab5ae2ad0 Error message goes to stderr
d9e5214c26 beep => bell
877d299292 Fixed running of standalone via command line.  Also, only do save from main() so that run-as-modal doesn't automatically save database.
fbba304aaa Move 'import sys' to top of module, as noted by Tim Peters.
66468568df Jim Fulton writes:
cdcbd1f02b Added {Get,Set}WindowUserData methods.
3dd1c39c80 Describe all the new features
a20f6af862 Chooser.__init__(): Added `wantspec' keyword to conform exactly to tkColorChooser.askcolor() interface (i.e. don't return a color name even if there is an exact match).
ca07ba00ac Many changes to support a second mode of operation.  Pynche can now be run either as a standalone application (by running pynche or pynche.pyw), or as a modal dialog inside another application.  This can be done by importing pyColorChooser and running askcolor().  The API for this is the same as the tkColorChooser.askcolor() API, namely:
04da10c7a2 Piers Lauder writes:
3f200d76df Add note about compiling FORMS with -Dclear=__GLclear. (The GLHACK variable isn't really needed since the change to glmodule.c, but I'm too busy to remove it.  It's harmless.)
89733a8bd6 Check in the changed version after running the stubber again -- this solves the conflict with curses over the 'clear' entry point much nicer.  (Jack had checked in the changes to cstubs eons ago, but I never regenrated glmodule.c :-( )
a9832bc572 Use (f1, f2) as cache key instead of f1 + ' ' + f2. Noted by Fredrik Lundh. (Note -- this module is pretty silly.)
605b93dee2 On a recommendation from Sjoerd Mullender, add -Dclear=__GLclear to the compilation flags for the gl, fl and fm modules.  This avoids a name conflict with the curses module (both gl and curses have an entry point called 'clear').
803b340888 Update the date.
a76b63c4f4 Bump the release to 1.5.2a2.
d29cf379b9 Added --tools option, to package only the framework (no documents).
260400f3f5 Removed debug print
9beee80fd7 Remove a couple of unnecessary "%" characters that cause problems with the latest latex2html beta.
dad11321eb Remove a bunch of unnecessary "%" characters that cause problems with the latest latex2html beta.
3041b0715b Remove an unnecessary "%" character that seems to cause a minor glitch with the latest latex2html.
8a09e1ccda Saving/Restoring state into ~/.pynche file
28e7b4cce1 add_link():  Fix to use $section_info instead of $toc_section_info, 	based on email from Ross Moore <ross@mpce.mq.edu.au>.
8fd0f147e7 Detlef Lannert lannert@lannert.rz.uni-duesseldorf.de notices:
fe78cc0f7e Adding Fredrik Lundh's demo of the option menu.
f5745008d2 Patch by Jim Fulton, who writes:
fbddddee49 Reflect new name of index style file.
7f77db9530 Renamed myindex.ist to something more reasonable.
9dcc9f7764 No longer needed since we have nice, contributed navigation buttons.
a5de730d2d If building HTML and the icons should be served from the same directory as the HTML (--iconserver .), copy the icons into place.
d90ae19b92 Rename 'locals' argument to top-level interact() function to 'local' for b/w compatibility with 1.5.1.
649e8c1f7f ArabictoRoman():  Removed, since it wasn't used anywhere.
f61618c98e A Py_DECREF(f) is missing in PyFrame_New for the error case when the `builtins' initialization fails.  Vladimir Marangozov.
bf338300ff Add a missing DECREF in an error exit.  Submitted by Jonathan Giddy.
18fa7d2800 Typo: JIFF -> JFIF.
eeb2f32aad Fixed a problem where xmllib didn't handle the tag 	<sometag attrib=">"> correctly. Also changed comparisons of re matches and searches into explicit comparisons with None. (Sjoerd Mullender)
7b9bb05df9 Speed up the search a bit -- don't drag a mark around...
cc0ade8cd5 Change our special entries from <console#N> to <pyshell#N>. Patch linecache.checkcache() to keep our special entries alive. Add popup menu to all editor windows to set a breakpoint.
b52cfa1d97 Use and pass through the 'force' flag to set_dict() where appropriate. Default source and globals checkboxes to false. Don't interact in user_return(). Add primitive set_breakpoint() method.
6c5baeb6df Raise priority of 'sel' tag so its foreground (on Windows) will take priority over text colorization (which on Windows is almost the same color as the selection background).
0737430bf8 Disable "Open stack viewer" and "help" commands.
105b9c7de4 Add optional 'force' argument (default 0) to load_dict(). If set, redo the display even if it's the same dict.
0e5088fcc4 This commit was manufactured by cvs2svn to create tag 'r152a2'.
de64eafbc9 Time for 1.5.2a2.
e8c10f90a7 All the news that's fit to print.  In other words, it's 1.5.2a2 time.
d54fb7ae9b The usual
f3dcafecd3 The driver script on Unix is `pynche'; for Windows `pynche.pyw'
179c36e411 Do nothing when loading the same dict as before.
adfe773d2c Details for debugger interface.
3fb3515303 Restructured and more consistent.  Save checkboxes across instantiations.
baf53b4ea8 Get rid of conflicting ^X binding.  Use ^W.
5188a25efe Debugger can now show local and global variables.
0a0f11b6d4 PyMapping_SetItemString() returns int, not an object.
b521095952 In build_html(), strip off leading "./" from filename, added by kpsewhich.  This caused a problem with the latest latex2html beta.
6b384833f3 Oops
80d132deda Better debugger support (show stack etc).
92a67d7847 Follow renames in StackViewer module
88d9007038 Rename classes to StackViewer (the widget) and StackBrowser (the toplevel).
95ef4982ed Add close() method
e1dedc096e Clarify 'Open Module' dialog text
04430793ed Restructured into a browser and a widget.
e6fae1cbca Generalized the scrolled list which is the base for the class and method browser into a separate class in its own module.
341d1fe18e For submenus remember the parent and parent index, so we can grey out our entry if the menu is disabled. This does create a circular reference, so cleanup becomes more important.
99d3c48772 Cosmetic change
0e0d3e7c2b Set kAECanInteract and kAECanSwitchLayer flags for the finder interactions.
f35b884c91 Clarify that close() of a stream opened by popen() returns None if the exit status is zero.
b7ffca393f Don't show function name if there is none
0e56568a0d The help dialog id numbers never got changed when the dialog numbers changed, so balloons haven't been working for ages. Apparently nobody noticed:-)
840a84d37a Updated __main__ unit test
c2047c19f5 When run as a script, don't pass a fake __main__ dictionary; use the real one.
e0e59829e0 When errno is zero, avoid calling strerror() and use "Error" for the message.
b0e5718643 Fix so that after a fork() -- on Unix only -- the template gets recalculated.
d3a6a14330 Doc strings by Chris Petrilli. Also added MD5Type object.
a0deb64024 No need to issue a fatal error if the PyDict_SetItemString fails; the caller (in import.c) will test for errors and take appropriate action.
35e55da7dc Polish the Debugger GUI a bit. Closing it now also does the right thing.
fc6aba5008 ACK!  There was still an unescaped newline in a docstring.
35f7542e83 Ad primitive debugger interface (so far it will step and show you the source, but it doesn't yet show the stack).
f035d3bfe1 Misc
9f1292d840 Perhaps a controversial change: when reporting a callback exception, assign the exception info to sys.last_{type,value,traceback}.  That way, an introspective Tkinter app can inspect its own stack trace.
ad24ae10df Whoops -- referenced self.top before it was set.
4eaadf002e Added {xview,yview}_{moveto,scroll} to the Canvas class.
423938a852 Added history and completion commands.
ca5619cc5b Updated
7895562f88 Add class browser functionality.
ae08d3897a Add a close() method and bind to WM_DELETE_WINDOW protocol
1956352b08 Clear the linecache before printing a traceback
49c1a7ebc2 Added class browser binding.
7f5c9ef5fd Much improved, much left to do.
e73d702344 Ever-so-slight improvementL the patterns to recognize import statements now also stop at ';' (formerly they only stopped at '#').
7d447aabbf Moved search and match around so that search is documented first.
3f08d40bd8 Make the return key do what I mean more often.
4650df96bf Make the return key do what I mean more often.
b39b90dda2 Doc strings by Chris Petrilli.
243ac4f497 Updated listbox methods to Tk 8.0.  (Moved some around, added x/yview_scroll/moveto.)
439c467a0c Adding the beginnings of a Class browser.  Incomplete, yet.
b341888971 Add new command, "Open module".  You select or type a module name, and it opens the source.
5af7a72d8b Subsume functionality from Popup menu in Debug menu. Other stuff so the PyShell window can be resurrected from the Windows menu.
82e44b10b8 Get rid of PopUp menu. Create a simple Windows menu.  (Imperfect when Untitled windows exist.) Add wakeup() method: deiconify, raise, focus.
e7b2e651df Generalize menu creation.
219ffde846 Add Debug and Help menu items.
2aeeb55949 Added a menu bar to every window.
d8d676c289 Add menu configuration to the event configuration.
d020cf3d7d Pass a root to the help window.
deff89c8be Replaced fprintf(stderr,...) with PySys_WriteStderr(...) where appropriate.
3179b36014 When no master widget is specified, use options['parent'] if it exists.
7f20263349 Only reference Tkinter._default_root when needed.
2f3667a7b9 Replace fprintf(stderr, ...) with PySys_WriteStderr(...).
8442af35fe Patches for mywrite() by Marc Lemburg: save/restore the error state reliably; check return value of vsprintf().
41f0a98f8f Looks like I didn't test this interactively.  The EventHook() code was broken; it asked for the current thread state when there was none. Fixed by using the saved event_tstate.
69ef7d6220 Add parent argument to 'to to line number' dialog box.
0688436305 Enhancements by Sjoerd Mullender: support for 	from a.b import c 	import a . b
7a840e8d50 Add support for dotted module names to readmodule().
1c5fb1cd1b Make mimetypes.guess_type understand data URLs.  (Sjoerd Mullender)
8571ed8647 Add a label at the top showing (very basic) help for the stack viewer. Add a label at the bottom showing the exception info.
3d0669d8a1 Add Unix main script and test program.
3b4ca0ddad Initial checking of Tk-based Python IDE. Features: text editor with syntax coloring and undo; subclassed into interactive Python shell which adds history.
dc1adabcb8 Patch by Jonathan Giddy (with some cleanup by me) to always use the thread state of the thread calling mainloop() (or another event handling function) rather than the thread state of the function that created the client data structure.
afd974c2ab Document the new list.extend() method.  Interesting enough, the canonical definition of extend() is very similar to append() except that the former doesn't list-ify the argument!
dedf6d6804 listextend(): New method which implements L.extend(L2).
e33bba8d3d New version that is much more compact and easier to maintain.  (Sjoerd)
3886026bed Remove unreachable code.  (Sjoerd)
1554b7b061 Use constants defined in cl module.  (Sjoerd)
1e57a04301 Removed unnecessary import of cl and CL.  (Sjoerd)
1d5766fd1a Shit -- forgot to set the installer's title to the new version.
60009ccc05 Change _tkinter.c compile options.
002156d130 Add bufferobject.c.
9c2c1e88a3 Fix multi-arg list.append() calls.
215193bd93 There's no need to declare Tk_GetNumMainWindows() (and it breaks something in the latest win342 build).
7e48898d86 Use the t# format where appropriate.  Greg Stein.
b317f8aa0d Implement new format character 't#'.  This is like s#, accepting an object that implements the buffer interface, but requires a buffer that contains 8-bit character data.  Greg Stein.
1db7070217 Greg Stein: Implement the new bf_getcharbuffer function, indicating that (as far as the data type is concerned!) this is character data.
36eef3c173 Changes by Greg Stein (code) and GvR (design).
7e1e57494c For 1.5.2a2. Install zlib.dll in DLLs instead of windows32 system directory. Install freeze, webchecker and versioncheck tools. Add Content type: text/plain registry keys for .py, .pyw. Add file type .pyo (same as .pyc).
f6240cf372 Some kind of source control krept in.
98f936b5d4 Whatever
5bd893b1ea The previous checkin contained an experiment of Greg Stein's that wasn't meant for checkin, and which broke marshal.loads().
0f8b30f8ce On Win32, use LoadLibraryEx(pathname, NULL, LOAD_WITH_ALTERED_SEARCH_PATH) to search dependent DLLs in the directory of the pathname.
2a570049ac Changes to deal with the sigcheck+intrcheck vs. signalmodule controversy.
2e23c3125a Make the dependencies really work for the HTML version.
dd997f79b4 Add test for BSDI -- by Nigel Head and otto@mail.olympus.net.
a57c9b928d Added a whole bunch of descriptions.
19b23e538e Use the imp module to get the magic word.
d076c73cc8 Changes to support other object types besides strings as the code string of code objects, as long as they support the (readonly) buffer interface.  By Greg Stein.
437ff8600a Change the default split level to not split on marked \paragraph and \subparagraph sections.  Indicate the default in the --help message.
b0b1900198 If --debug was used, don't delete the temporary .perl file used to pass options to latex2html.
9e46e56264 BSDI specific patches, inspired by Nigel Head and otto@mail.olympus.net.
c501583dfa Make gcc -Wall happy.
89bae99c5d Make gcc -Wall happy: Remove unused decls of getloclock() and is_lockobject().
c20687355b Make gcc -Wall happy: (1) add dummy decl for strptime(); (2) move the code to set accept2dyear to the front of inittime().
7148ca9d14 Make gcc -Wall happy.
562f5b1480 Support PYTHONOPTIMIZE variable; by Marc Lemburg.
e7adf3eb6d Documented PYTHONOPTIMIZE; by Marc Lemburg.
d5f6c223a9 Make the version variable static (it has no business being exported).
2e782e86b1 Add buffer module entry points.
41f13f288f Added #! line
7fef86ea71 Clarify sharedinstall comment
06c18088d6 Add Greg Stein's buffer object API.
2e19bd7cc7 Add Greg Stein's buffer object API.
8c1e114d1a Don't attempt to add paragraph and subparagraph sections to the PDF outline.
56440a58f7 Fix two bugs in the fstat() line, reported by Fredruk Lundh.
2ccaf6f2f9 Remove a redundant check from list_slice() and list_ass_slice(). Noted by Greg Stein.
d832f9e425 Fix append() calls with more than 1 argument.
bac609a69e Updated about text
0926deacd5 Moved the main pynche.py file to Main.py.  Added minimal driver scripts pynche.py and pynche.pyw for Unix and Windows startup respectively.  Document the .pyw file in the README.
c958043233 Better layout of options menu and inc/dec buttons
8934af00d8 Fixes for some type-in strangeness
cd63dc9f3d Add a note about the console window
9cdd44f714 Never mind
1c792d5e10 Add link for Windows
84f52e0a16 RightARrow._create(): justify=RIGHT on the text object
e55055d0d4 A readme
da7502e8ad Add a SELECTION to the pre-inserted text
3886e3aebb Copyright CNRI
6bfd655c2a Added the rgb.txt file from X11R6.4, including the license
4f632357d4 Initial revision
e7f4a47bbf Better initial color choosing
45c8d34216 Better quitting
d5bcf9a343 Andrew Dalke's implementation of string.count().
3836503acd Converted to newstyle menubars
dfae3d55f2 Added a 'Help' special menu to show how this is done.
da65450530 The message "Exception in Tkinter callback" should go to stderr.
56af4448e1 Update main window when Update on Click is turned on
ad3a67cc84 Added version number in the About window
3a476e9b35 Track color changes: disable buttons and their labels when turned off
332aa4cf0a Color Variation Ties => Move Sliders
c4a9b3d923 main(): Better recovery when bogus color given on command line
b7b1cf0088 rrggbb_to_triplet(): When color doesn't start with `#' raise a BadColor exception.
5b67839ca3 Added a hex button so arrow numbers can display in decimal or hex.
c2d8f573eb __togglehex(): Simplify
c1c7b1a699 Slight rearrangement of code in lookdict() by Vladimir Marangozov, to make a common case slightly faster.
73290dff30 hexp() => hexp_var()
6831c30143 hexp(): New function
a398924c6a __normalize(): Preserve the location of the icursor and restore it so that Left/Right arrow keys and C-a C-e all work.
ae4ad6e454 Changed the grey/magenta/cyan/yellow label text slightly.
14e2cafe21 usage(): Print msg at end of docstring
7c51a9a80b Title
c078b03d7f Finished implementation + docstring
964fbbbc61 Added Alt-w bindings
9044b8e5e3 Added details window
cd09867c57 current_rgb(): New method
3d314390ab *** empty log message ***
779af3ab8e These were never under CVS, but now that I use cvs to communicate between the various macs it's better if they are.
0d5120f29a Newer versions of projects.
60a9ee2679 Added SIZEOF_VOID_P and HAVE_LONG_LONG
573788eef1 No need for (char *) cast from gdbm_strerror().
b6e2a99aa6 Win32 port.  Patches by Milton L. Hankins.
69a4ab5a04 Docstring
4638c5b7f3 Docstring
eb61fbdba8 Docstring
bd36d6eccd Added the ListViewer
a9053f65de Updated docstring.
9f3ea211dd all_names(): => unique_names()
ddb9fc1ebd Added docstring
b44056ec94 Functionality complete
8be2594a24 all_names(): Return just the unique names of rgb colors
ad678af89b The usual
252213673f Added BEOS_THREADS, HAVE_LONG_LONG, and SIZEOF_VOID_P templates.
fb4533c124 Added tweak for SET_CCC (which I don't even know what it is!) for Linux. Added AC_CHECK_SIZEOF(void *). Added yet another test for pthreads (pthread_create may be in libc). Added pthread_init to list of functions whose existence is checked.
b55c4ad58d Got click on working.  Dragging is disabled for now
ff45d54f31 resolve(): Improved use of a/an, suggested by Tino Wildenhain <cdtv@amigager.de>.
dfede31c7f Eh, better error message for the previous change.  It now says "non-default argument follows default argument".
29d38cd088 Treat def f(a, b=1, c): ... as an error (missing default for c) instead of silently supplying a default of None fore c.
b7c61318d8 Up version to 1.5a2 -- we're close enough (even though I'm still expecting some contributions).
96372a2657 ST_MODE should be ST_MTIME in utime call in copystat.  Thanks to Mike Orr.
64e736ba4e Some new blood and some updated versions.
fdb8fb8b31 A few new ones...
4581a0c07b New test_long.py from Tim Peters.
399f10cd66 Lots of good UI working, but not yet update-while-dragging
46670a2d42 *** empty log message ***
6e5b301b02 Renamed thread.h to pythread.h.
e364b7d46a Renamed thread.h to pythread.h. (Also removed whitespace after # in some BEOS related cpp directives.)
09b295754f Remove extra } at end of method description parameters.
49b560698b Renamed thread.h to pythread.h.
c456d36bde Fix encoding of \ in some string literals in the discussion of "raw" strings.  Reported by Lorenzo M. Catucci <lorenzo@argon.roma2.infn.it>.
82385872e9 Fix some confusion in the __repr__() and __str__() descriptions. Reported by Lorenzo M. Catucci <lorenzo@argon.roma2.infn.it>.
d4c3352288 Fix encoding of \n in a couple of places (reported by Lorenzo M. Catucci <lorenzo@argon.roma2.infn.it>).
9d904b9389 Believe it or not, Solaris 2.6 strtod() can move the end pointer *beyond* the null byte at the end of the input string, when the input is inf(inity).  Discovered by Greg Ward.
4ab5d85efa Change some init order
a7ba45b7b6 update_views_current(): New method
86daeb7909 Added View button and popup of text widget
f9c6ddc40a *** empty log message ***
370a0837d1 Correctly add dependencies and build rules for Modules/python.o.
2c69336507 On second though, NEXITFUNCS should be defined in pythonrun.c and not here; pystate.h doesn't use it (I thought I wanted to move the array there but that won't work).
2dcfc9618d On second though, NEXITFUNCS should be defined here and not in pystate.h; pystate.h doesn't use it (I thought I wanted to move the array there but that won't work).
07d780089d Typo reported by Greg Stein: "modifiable" is the correct spelling.
4cbe3876ec NSEW is also valid for -sticky
b2031f72d3 Document that apply() can now take any sequence in argument 2.
968f8cbace builtin_apply(): Second argument type check is relaxed to allow any sequence.
566373e974 While scalling sys.modules, skip entries that don't have string keys, to protect us from jokers who put items with non-string keys in sys.modules.  Reported by Greg Stein.
231c8c0895 Gridify this widget
b26743ac48 Make sure the menubar is stretched
65f0b6be47 Add a nice divider
9190046289 Added NS and EW constants, which are meaningful values for grid's -sticky option.
85e6965071 Fixed toggle b/w hex and decimal
d344165f48 Added options to visible window
aa40b556fd Groove for debugging
03e8a31eb3 Get rid of Edit menu
0fa6e4b421 Added options to visible window
65f15d435e In FreeBSD when using ELF, an underscore is needed in front of the function name.  (Vladimir Kushnir by way of Thomas Gellekum.)
e504fa289f Disable python event handling in mainloop (discovered by Tasselli Marco)
fda3aceb71 Added interface to get/set colordb
a9b45580a3 Removed old cruft, added raw about dialog
7a13418e12 Changed interface for nearest() method to take individual red, green, blue values instead of tuple
420201972e Got updating with Return/Tab working
885b371e33 Un PMW-ified
d7d4725dba Added an extra frame in widget heirarchy in case I want to add separators later
f984a65267 Fix suggested by Sjoerd (long ago!) to get a better error message when there's a syntax error.  (In particular, display the correct filename).  This changes the API: if there's a syntax error, the function now returns normally after dumping the error to sys.stderr. I changed Sjoerd's use of string.join(string.split(...)) with string.replace().
dc492e6738 Un PMW-ified
63c9e9851e Rework startup
1ac18cd326 simplify
0e3e699178 triplet_to_brightness(): New function
a69c1ba0aa De PMW-ify
26f4b5dfe4 Fixed the brightness calculation
0dc9c92b10 Updated to new post-PMW framework.  Moved generators to here and added the StripViewer class.
93d27547d0 Remove redundant definition of NEXITFUNCS. (Reported by Jeff Rush.)
2645241add Fixes for OS/2 by Jeff Rush.
03dc5384d7 Move the #include of <sys/select> to *after* mytime.h (or <time.h>), as this is the logical order of dependencies.  Suggested by Jeff Rush.
e8afe516ab New set of files for the OS/2 port by Jeff Rush.
be70450f03 Removed some OS/2 #defines (now in the OS/2 specific config.h). Patch by Jeff Rush.
5177c48411 formatting
6a3ea7468e Un PMW-ified
04c7886764 Un PMW-ified
987fb9225f Initial revision
26367a001d New version from Piers Lauder, who writes:
75bb54c3d8 Don't set a local variable named __args__; this feature no longer works and Greg Ward just reported a problem it caused...
9814a943a5 Add warning that on Windows it only works on sockets.
954b9adcd2 Document new urllib features by Eric Raymond.
9ab96d40eb Changes by Eric Raymond:
d5af7bd489 Truncate messages if they are longer than 255 characters. Note that this is not really a good solution for default input strings...
a5a018fbd4 Fixed unit test
9195f55bbf Updated the docstring and class hierarchy diagram
4f94c73879 (py-comint-output-filter-function): Horrible kludgearound for making the de-queing of exec files work for NT XEmacs 21.0.
67906af811 In PyFrame_New(), don't set extras to something derived from code before code has been checked for validity.  Discovered by Vladimir Marangozov.
d35c255e44 (py-guess-indent-offset): Only print message about py-indent-offset when in an interactive session (suggested by B. Wiener).
02e5f69c90 (py-execute-file, py-execute-import-or-reload): Use a Python `raw' string in the argument to execfile() so a Windows temp directory named, e.g. c:\\tmp doesn't get interpreted as a file name with an embedded tab!  (given by C. Waldman).
f7d77009c1 Add two constants (with the same value) to specify the on-board CD input.
f4cbb9c7fa Added realclean and distclean targets to match ../Makefile.
4da55f0560 Add define of HAVE_STDDEF_H (to 1).  Suggested by Greg Stein.
5227f0fdcd Reworked it quite a bit.  There are now two classes: a base class, InteractiveInterpreter, which handles parsing and interpreter state but doesn't know deal with buffering or prompting or input file naming.  And a derived class, InteractiveConsole, which adds buffering and prompting and supports setting the filename once.  Also tweak the algorithm in compile_command() a bit so that input consisting of all blank lines or comments always succeeds immediately, and note the fact that apart from SyntaxError it can also raise OverflowError.
218eb75ba7 (py-block-comment-prefix): Remove trailing space.  Also explain that this string should not end with whitespace.
0238a25b20 Do the check for lacking sys.stdin.fileno() *before* testing for Windows.  If sys.stdin doesn't appear to be a real file (characterized by having a working fileno()), don't use any console specific methods -- go straight to the default.
ef0056ae1a When sys.stdin.fileno() doesn't work, fall back to default_getpass() -- don't just die.
5fb2631ff9 Explicitly document the fact that the search method returns a MatchObject. (Reported by Gary Herron.)
4ecd85aad7 After the previous changes, func_normalize() turned out to be redundant. This simplified some other places in the code.
b0a94c0549 Changes so that JPython can also use this version of profile.py. Suggested by Jim Hugunin.
f07029e4ba Get rid of the classes RModuleLoader and RModuleImporter -- these were only there to override reload() in a way that doesn't make a whole lot of sense and moreover broke since the latest changes in ihooks.
e3f8a64906 Comment out 't = t[0] + t[1]' in profiler_simulation() -- this function is only used when running the calibration code, and it turns out that recent changes in the timing code caused this statement to raise an exception.
469067800b Get rid of the test for non-NULL thread state in EventHook; it can be triggered in situations that are not an error.
1b236768e7 When we have siginterrupt(), use it to disable restarting interrupted system calls.
0db4c94d09 Enable the 'new' module by default.
6ac06b39b3 Patch by Greg Stein to document the 'P' flag.
10a7985565 re.findall():  Mark as added in 1.5.2.
78694d970f Patches from Greg Stein to support 'P' format in struct module's native format, as void* (translated to Python int or long). Also adds PyLong_FromVoidPtr and PyLong_AsVoidPtr to longobject.c.
43b655c0ab Get rid of 'ppp' that accidentally crept in.
91b5bedf1c Added optional mouseregion parameter to WaitNextEvent (which is now manually generated).
6442116029 Richard Wolff's changes, documenting his changes to pdb.py.
fc076d4ce2 Untabified and applied Richard Wolff's changes (plus my own reflowing of some paragraphs).
3a98e78a6e Richard Wolff's additional changes; some layout nits, and change the alias delimiter to ';;'.
1d2e9d19fe Duplicate the decls for PySys_WriteStd{out,err} here so the VC++ compiler doesn't grumble.  Greg Stein's suggestion.
e0bdf99c0b At Greg Stein's request, add PyLong_*LongLong entry points.
b00d252586 Define SIZEOF_LONG_LONG (as 8) at Greg Stein's request.
743d17e3aa In load_inst(), when instantiating an instance the old way (i.e. when there's an __getinitargs__() method), if a TypeError occurs, catch and reraise it but add info to the error about the class name being instantiated.  This makes debugging a lot easier if __getinitargs__() returns something bogus (e.g. a string instead of a singleton tuple).
0c92000b7a Ignore the TclError exception raised when deleting the registration for callit, used by the after() command.  This can happen when the callback deletes the window.
98b6246c0c Several changes that Python carry on in the face of errors in the initialization of class exceptions.  Specifically:
d24d3fcd03 Added the mainloop() call.
5fae9e8b86 nannified
8d5bef7fb8 There was a confusion in my checkin of the code to support list() with and without a message number argument: the argument was called 'msg' but the code expected it to be called 'which'.  In line with the other methods, I've renamed the argument to 'which', and adapted the doc string not to refer to 'msg'.
4117e5428b nannified
f9a6d7d494 Print serious errors to stderr instead of stdout.
bc3760b09d #Code rearranging to quiet byte-compiler
caf9fca35a nannified
e7e632ab6b Nannified.
a53f30babc nannified
4e96ec6a4e nannified.
7944ea523e Patch by Marc-Andre Lemburg: use re module to compare test results. This makes it possible to accept that on Linux %w returns "01" instead of "1", for example.
09eea82005 Utility to replace CRLF with LF in argument files.
499a6e5fd4 Utility to replace LF with CRLF in argument files.
ce85827ac1 Utility to untabify stubber results.
dcd038ff84 nannified.
a0f0a33d05 Mac-specific mod to enable aliases on import paths. (Jack Jansen and/or Just van Rossum)
ce11393136 Remove some unused variables from gethostbyaddr_ex and gethostbyaddr, discovered by Marc Lemburg.
065ce5a4b7 Undo victim of careless global substitute ("long long_hash" was changed to "LONG_LONG_hash" in the list of forward decls).  Discovered by Jason Harper.
4827aeb99b Don't remember...
f0a275d4db Richard Wolff's changes:
2424f855f3 Richard Wolff's changes:
d93643fe4a Richard Wolff's changes:
5fca6fd2d9 Richard Wolff's changes:
b7833d3c0c Add a \label to the section "Fancier Output Formatting" (it's referenced from the KOE docs).
d16d4981d1 Markup nits.
faff0bdcba correct bogus instructions 'ccoment out' -> 'uncomment'
d64a40dbc0 do_cmd_methodlineni():  New function, needed because the ref. manual now 	actually uses this markup.
9b134bf716 Added comment about support for rational numbers, and pointer to Demos/classes/Rat.py.
7a2f0668e4 Markup nits.
106a470da2 Fixed the words in the comment and error message about defining FULL_PATH. (It's not SCRIPTPATH!)
1deebabc77 include <string.h> to get prototype for strcmp
3494e4a31f Fix typo in URL; reported by Michael Ernst <mernst@cs.washington.edu>.
d21744a1dd Apparently on AIX when using gcc you need to call pthread_init() (which is not a POSIX threads call!).  Reported and confirmed by Brad Howes.
f9acc59c55 \itembreak, \itemjoin:  Remove obsolete macros.
7ca9a1a466 Fix a bug where comparison of a rational with a float failed because the difference got converted to float. Put brackets around the string representation of (non-integer) rationals. (Sjoerd Mullender.)
76d1f96fe2 Michael P. Reilly suggested this fix: makesetup wants to prepend "$(srcdir)/" before all source files even when is starts with "/".
a063303693 Patch suggested by Perry Stoll -- os.path.normpath(".//x") returned "/x", should return "x".
86ad567c2e Split tcl/tk libs out of other libraries (don't want to build these always)
48a9c3634b Mods by Just to allow aliases in sys.path entries
9819983994 Beh, new version must be edited in a separate file.
2053aa6cc0 Use SCRIPT_NAME (if defined) instead of hardcoding /cgi-bin/ when sending the cookie.  (Suggestion by AMK.)
a74d0e4c55 Correct typo in #ifdef: PY_THREAD_D4, should be PY_PTHREAD_D4. Reported by Jonathan Giddy.
746340d989 Should no longer surround PyOS_Readline() call with Py_{BEGIN,END}_ALLOW_THREADS macros.  Also get rid of the declaration for it (it's now in pythonrun.h).
b85c8479eb Easy optimizations of urlparse for the common case of parsing an http URL.
f6ae743cb5 Fix suggested by movits@lockstar.com (plus doc string by myself) for LIST command with msg argument.
c86b7c63e0 Make bind variants without a sequence return a tuple of sequences (formerly it returned a string, which wasn't very convenient).
164543607c Now that we have standard (optional) long long support, the long long support in this module can go.  The patch only deletes code (PyLong_FromLongLong() and PyLong_AsLongLong()).  By Sjoerd Mullender.
80c7bcf667 The previous fix was still broken; the Py_END_ALLOW_THREADS macro was never executed because of a return statement.  Sigh.
4d1874093f (py-in-literal): How'd this get through?  c-point => py-point
525d7024ab Ignore the generated README file.
2335a305e5 When building the tarball of the PostScript files, also generate & include a little README giving the page count of each file when printed.
7c86c594ea Target to generate a little README file with the page counts of the PostScript files.
47f69067d5 Script to generate page counts of the PostScript files.
e1feb8f2dc Support long options that take arguments of the form --option=value as well as --option value.
d82575d5bf Markup changes in the section on disciplines to match method descriptions a little better, and produce better HTML.
8efa47b63e We now assume that PyOS_Readline() is called with the interpreter lock held.  It releases the lock around the call to the function pointed to by PyOS_ReadlineFunctionPointer (default PyOS_StdioReadline()).
44ee479427 Add a 'volatile' to the declaration of threadid in get_thread_ident(). According to Vladimir Marangozov, this is necessary for AIX, where high optimization levels inline this function and then get it wrong :-(
53195c1a83 Don't release the interpreter lock around PyParser_ParseFile(). It is needed so that tokenizer.c can use PySys_WriteStderr().
b9f48608f6 Changes by Richard Wolff:
de57030a1c Added a note about the buildlibs script.
4722da6ebf fix typo in keyword argument 'allow_frament' should be 'allow_fragment'
afd3daedde __file__ used to be always set to the .pyc (or .pyo) file, even if that file in fact did not exist or at least was not used.  Change this so that __file__ is *only* set to the .pyc/.pyo file when it actually read the code object from it; otherwise __file__ is set to the .py file.
90f827c67e Comment out the print statement about underflow.  (This only seems to happen when you use a non-keyword argument after a keyword argument, and in this case you also get a syntax error.  I fully suspect that the underflow is caused by the code that stops generating code when it detects the syntax error, but I can't find the culprit right now.  I know, I know.)
2d1ad39b81 Add the type of the object to the error message about calling a non-function.
6e73bf4032 Replace all calls to fprintf(stderr, ...) with PySys_WriteStderr(...).
47fbc4049e Add a version of PySys_WriteStderr() that writes to stderr, so we can use it in tokenizer.c.
d0dc5b06a2 Restructure the file so that it is never empty.  No longer needs Metrowerks specific #ifdef.
3293b07df5 Patch by Mark Hammond to support 64-bit ints on MS platforms. The MS compiler doesn't call it 'long long', it uses __int64, so a new #define, LONG_LONG, has been added and all occurrences of 'long long' are replaced with it.
859b407cf1 Ignore cruft generating by the test run for hello.py.
cfbaecc546 Y2K fix affecting asctime(), mktime(), strftime().
f5a80a4a88 Describe what happens when ``raise C, x'' is called where C is a class and x is not an instance of C (nor of a class derived of C).
dbf7956e52 Clarify Y2K behavior when a tuple with a 2-digit date is passed to mktime() and such.
baf0603493 New version, with contributions from Sjoerd Mullender and Mark Hammond. Sjoerd writes:
6c74fea07d There was still something wrong.  The original NOTTESTS are replaced by the new '-x' arguments, losing the previous items.  Thus, test_support, test_b1 & test_b2 are executed (and warnings issued). (Discovered by Vladimir Marangozov.)
5fdf85254c Patch by Chris Herborth (posted to comp.lang.python)to make it behave with tags that have - or . in their names.
607f802886 round():  Mark the second (optional) parameter as optional, since it's 	described that way.
c859350fa6 Added some cross-references to the end.
d0421dd448 spoking --> speaking
ab076fdb6f Ted Horst writes in psa-members@python.org:
747e1cade6 Should pass explicit arguments to findtests().  Should initialize 'nottests'.
f1536db2e7 Move an indented #define to column 1.
637af13dca There is no <ISINPUT> element, just <ISINDEX>.  ;-)
9a80e00cac The .subn() method wasn't setting _num_regs, which is used by the .groups() 	method, so .groups() didn't work inside the replacement function 	called by re.sub.  One-line fix: set self._num_regs inside subn().
f7039e29ec Update commentary.  For most stuff, point people to the web page
6dfbe5dcec (py-shell-map): New variable contains the keymap used in *Python* shell buffers.
a81fb33c6b (py-shell): comint-output-filter-functions is already buffer-local
3c96f6f361 (py-process-filter): Deleted this function.  In order to fix interactions with newer Emacsen, I've rewritten the way all the process filters work in the *Python* buffer.  We use more of the comint infrastructure, specifically the default process filter.  This means that scrolling is now handled by the default comint variables including comint-scroll-to-bottom-on-output.  Note that this is somewhat experimental change!
33d0093c8c All libraries have now been moved to their new location, with their new names. As everything is also under CVS this should greatly simplify the work to be done when a new version of one of the libraries we use is released.
128aae2ce3 A new project that builds cwgusi, tcl, tk and all image libraries needed.
fb37f89b81 Replaced all remaining BinHex files with their binary counterparts.
c590095a16 Binhextree doesn't binhex anymore, it just copies the projects around. This does make the name a bit of a non-sequitur:-)
158d5b5a7a I guess I'll have to commit this file occasionally...
6a474c5844 Define some things to 1 (in stead of empty) to be compatible with new PIL
dec99ef298 Various libraryies have been moved around and renamed, now that we have them under cvs too.
42db27fedc Added an example that uses signal.alarm() to time out an os.open() that     takes too long. This example relies on the fact that raising an     exception in a signal handler causes the exception to be re-raised     when the main line of the program resumes execution.  Is this guaranteed     in CPython, or is this something that just happens to work by accident?
ce4ba897be Raise the right exception (ValueError) for attempted I/O on closed StringIO objects; this makes the emulation of file objects a bit better, and the exceptions explain things a bit better.
71de6c6b74 Replaced binhexed version of project files by normal ones (in binary mode)
14e0a0a972 Updated for 1.5.2a1
eaced79bbe Replaced the hand-generated .hqx files by the binary resourcefiles themselves (in AppleSingle format, so should be readable with MacCVS Pro too)
cb5704e6a8 Initial revision
7cc5735ef2 Initial revision
1d6a6ea1a8 Putting Python-specific GUSI modifications under CVS.
b0195ec9c1 Putting TCL mods for Python under CVS.
0072bfb126 I give in (after all these years): renaming config.c to macconfig.c to forestall the continuous name conflicts which cause the wrong config.c to be found.
b93f52158b Support for freezing packages (Just).
201f46de2c Replace first sys.path entry with the directory where the script lives (Just).
93c88cca06 (imenu-example--create-python-index-engine): Fix nesting breakage when a method definition has args that span multiple lines; be sure to go to the beginning of the method definition -- but watch out for the match-data!
664dcd5b5e Clean up the HTML a bit; update the version number.
e7210dad6c Fix arguments for renames(); bug spotted by Oliver Andrich <oli@rhein-zeitung.de>.
a5aefbad5a Fix markup where C include files get named in <...> form; bug reported by Lorenzo M. Catucci <lorenzo@argon.roma2.infn.it>.
a0e4b78233 img_tag():  For \n to be interpreted as a newline, the string must use double 	quote, not single quotes.  Ugh.
d22e25002a Clarify wording in the description of re.split Simplify the patterns in the examples for re.split
ce616e4009 Enter Jim Fulton's latest version.  He writes:
7cfca6de2b Don't need these anymore....
062bc6e598 Do the magic to use the new buttons (with shorter names!) instead of the old ones.  Get the <IMG> width & height right.  New design for the navigation bars, including the document title as well as the navigation links/buttons.
31bb8cef2c Change interface to sendmail: if the destination address is a string instead of a list, turn it into a list containing that string.  This avoids an apparently common newbie mistake -- passing in a single string for the destination and have it treated as a sequence of characters.
54c52052ce Add l2hinit.perl to COMMONPERL.
ca69cf581d Insignificant change cause by saving again.
564e444a7c New icons from Christopher Petrilli <petrilli@dworkin.amber.org>.
21308243ca Better error messages when a sequence is indexed with a non-integer. Previously, this said "unsubscriptable object"; in 1.5.1, the reverse problem existed, where None[''] would complain about a non-integer index.  This fix does the right thing in all cases (for get, set and del item).
54047c84d1 Exit when a mv or cp fails (Sjoerd Mullender).
e6e8cdc748 Rebuilt everything with MSL 2.4.10, Compilers 2.1.1 and IDE 3.1.
4365cabf3c Add Tim Peters' test for long ints
0ba353608f Add DebugBreak() call to Py_FatalError() for Mark Hammond (only on Win32 in Debug mode).
541f241132 Need mytime.h for Sleep().
3a5a02f3da Second definition of popen2 should be popen3.
9f6f0da084 Improved some error messages for command line processing.
00c468b0c5 Added more informaton about the mkhowto.sh script.
78b8c3d0d6 Oops, the --text option wasn't documented!
c794c38187 Added a comment about not using a symbolic link to access the script.
ee60eb127b New tool: reverse grep (greps from the end).  Uses a fairly efficient strategy to read from the end of the file.
697c1c7325 Some minor updates.
eb7fe4f5a1 Massive cleanup:  Use Makefiles in subdirs properly, move most of the detailed build rules to the subdirs.  Allow pretty much every useful target to be built directly from the top dir (no change in output location).
07b12f2497 Re-written to actually perform the conversion instead of using a sub-make with the parent Makefile.  Will also force the auxillary files to be created if they need to be.
3069c976cf Update date & version number for release 1.5.2a1.
06098e45af New Makefile; includes ../paper-letter/Makefile and sets PAPER=a4.
d48d62cabd New Makefile, contains rules for building typeset versions.
3d865424a7 New makefile which only contains the source dependencies specific to each document.  The main Makefile will only contain rules and "system" dependencies.
4e02a97bd7 This commit was manufactured by cvs2svn to create tag 'r152a1'.
e03c050595 The usual.
887d072cc0 Get rid of mysterious bsddb.txt.
9b499d2a9c Define HAVE_STRERROR.
b034e1e2ff Delete CurrentVersion instead of setting it.
5bf2864fc0 Added dependencies between projects.
24edfbb61d Back out of a recent policy change (Mark Hammond disagreed). The registry always comes first and the default is always appended.
d10552379d Two fixes to find_class:
370f3c9eb6 Bump RELEASE to 1.5.2a1.
f832f4cd34 Clean things up just a bit.
15c417eb77 Helper script used in creating navigation buttons.
9f7adc4f22 Get the <IMG> sizes right for the navigation buttons.
0ceaada2da New contributor.
3d16d3e643 Fredrik Lundh's font wrapper.
b4750db3b3 Added coords() and identify() methods to Scale class.
a69ada66d0 Ok, blank.pbm is free to go.
1b9b210abf I think this is the last of them.
7aac918029 Gosh, there's a lot of them....
704be95237 More files never used here.....
27b3bc3fbf Reordered the news to make it more accessible.  Also removed some dups.
e528458155 Icons only needed if using the change control marks, which are bogus.
c83d7cac07 Remove files we never used; l2h would only use these if you use the special "html" package, which we don't and won't.
af06a0b4ee Use Perl's rename() function instead of system(); there's no need for two additional processes for each name change!
211f22c1b1 Added the test package under "Frameworks".
be21d98cee Use repr() on the filename in EnvironmentError.__str__().  This displays funny characters, like spaces or control characters, more clearly (one of my pet peeves in error messages).  Also only suppress the filename if it is None; display it if it is '', since that would be a genuine (illegal) filename passed in!
ee9306b610 Template file for \documentclass{manual}.
549cb6ea03 Added a module docstring (that's all this module needs).
0618f5e55b Added step 0: copy this file to <somedir>/lib<module>.tex, and edit the copy.
bd4009493e Updated to reflect recent changes.
6fa49e2418 Prepping for 1.5.2a1 release...
2f343eb5cf Moved to ../templates/module.tex.
1334147558 Relocating file to Doc/templates.
df23ef4763 Guess what -- BSD has bifurcated again. :-(
bd65706fe3 Added new files to the LIBFILES variable.
5bdf88a364 Removed now-documented modules from the list.
23f414c539 Added new sections.
e72e1e02fe Documentation for the compileall module.
4756bb3e54 Documentation for the py_compile module.
64c105d3d2 Added index entries.
0506a431d5 Patch by Just van Rossum that changes how we search for submodules of frozen packages.  (I *think* this means that we can now have a built-in module bar that's a submodule of a frozen package foo, by registering the built-in module with a name "foo.bar" in the table of builtin modules.)
bd3a527f93 Two patches by Jason Harper:
9279ec2504 On the mac, shouldn't change the creator+type of the *source* file!
f6b6bbceb6 Add a comment explaining that this script is probably not useful outside the standard Python documentation, since the mkhowto.sh script is.  Let there be no doubts....
4d46487fe8 Make sure the icons/ directory is created even if only one document is converted.
916f7c1e7c Better check in the date from the last magic-fix-release.  ;-)
6aa5d482fb Control when/where navigation bars will appear: top & bottom of each page.
ab9d6f0be9 Got all the 1.5.2 news that's fit to print.  Now we may need to organize it better...
bc74ca5203 Add a link to the Macintosh Module Reference here, too.
650e8a6db2 (imenu-example--python-method-regexp): Patch from Christian Tanzer: "3.67 fixes Imenu as far as classes are concerned, but some default values for function arguments are still not supported."
12c9294ea3 (py-compute-indentation): Changes to the `t' condition which affect indetnation of normal statements: The regular expression that searches for indenting comment lines has been changed to not require a space/tab after the first `#'.  We then explicitly look for py-block-comment-prefix depending on the value of py-honor-comment-indentation.
3da987c292 Checking in BeOS specific socket module.
2b427c74e1 Nannified.
27d445f59e Nannified, and re-indented with 4 spaces.
cc221c470f Fixed a few lines that tabnanny complained about (one space before the tabs).
2880f6ec95 Untabified and deleted trailing blank lines.
295da24eaf New section header style.
62e436955b do_cmd_moduleauthor(), do_cmd_sectionauthor():  Parallel the new macros.
b75c615389 \moduleauthor, \sectionauthor:  New macros to record attributions; no output.
c817e27501 New style section headers.
23329d41bc Some logical markup, some nits.
20392ccb87 # mention Porting in list of files
6ca3defcfa mini-faq on porting python
71c3adb7ec #Typos from previous checkin
41a05c75d4 Huge number of docstring changes, typo fixes, rewordings, GNU standard conformations, etc., etc. inspired and given by Michael Ernst.  These include error string fixes, moving of comments to docstrings, some other non-related typos, terminology standardizing (b/w TP and myself, and b/w myself and myself :-) although more can still be done. E.g. "outdenting" => "dedenting".
482e82a0f6 Corrected some spelling and one technical error.
e7f3953142 A script by Mark-Andre Lemburg to produce the PC/python_nt.def file automatically.
a9ca42daf0 Vladimir Marangozov's explanatory message.
d895749b61 New warnings to the uninitiated reader.
d741f4c48c Added a bunch of symbols detected by Marc Lemburg's script.
c3e3e6486f There's a bunch of files that shouldn't be included in libpython*.a!
37ea4107b1 # New version; not clear what happened.
43ff114d2b Sigh.  More restructuring was needed. Make an explicit test for whether the prefix is in fact the source directory, and then don't use the registry.
7fb668866d Get rid of python15.lib; add some incl files
3804d7ee97 Add PyEval_CallFunction() and PyEval_CallMethod().
3d109a0e6d Add missing prototypes for PyEval_CallFunction() and PyEval_CallMethod().
c4099e6b3c # Fix strange type (methonname instead of methodname).
b58dff553b Play games with version numbers; add lib-tk to path.
f4edff022c More files to be ignored.
c499572a98 This file's previous log message is bogus.  The real change is that when it gets the path from the registry, it no longer appends the default path to the end (which would mostly be a duplication).
be10c20adf Now include Python.h
639ccae5f6 This file's previous log message is bogus. The real change is that it now includes "Python.h".
67ab67218b Different version games: - MS_DLL_ID is now set to "1.5" instead of "1.5.x" so Mark Hammond's   extensions won't have to be changed. - FILEVERSION and PRODUCTVERSION are set to 1,5,2,1.   (The last number could be the build# or the alpha release# or so.)
e2d81cd4d7 Jim Fulton's patches to get rid of the class_map().
1a87be1422 Shouldn't include the lib pragma when building python15.dll itself!
444383039d Added _PyTuple_Resize to list of exported symbols.  Don't know how it could hide so long...
1b3442493a (py-execute-region): When temp-names are broken (Emacs 19.34), a serial number isn't enough to uniquify the temp file name -- what if two users are on the same machine?  Add in the (emacs-pid) to help further.  Should never be tickled on Emacs 20, XEmacs 20, 21.
4d10b43c26 insert_index():  Take two additional parameters: $columns and $letters.  Call 	buildindex.py appropriately.
077fffa874 The letter headings must be requested explicitly with --letters.
aa3f9fb7d5 By default, use a two-column index.
7cbf462acf Allow multi-column indexes to be produced.
449fdf1d76 The doc string for setDaemon() disagreed with the implementation.  The implementation wins.
66da9d69fc re is standard, not built-in.
ed9dcc10f8 Clarify that the Python interpreter lock need *not* be held by PyInterpreterState_New() and PyThreadState_New() -- but that you may use it to serialize calls to them.
cdf6af1233 Document gethostbyname_ex().
96e11029b8 Updated list of Library Reference files.
d89fa0c576 Add built-in string variables 'quit' and 'exit' that display a hint on how to exit (in a platform dependent way!).  We use os.sep to determine which platform we're on, since I expect that this will work better for minority platforms.
aee5e26f4b Add warning that mutable argument defaults are evaluated only once; with examples and workaround.  This keeps coming up, and I believe that this section in the tutorial may have been (in part) the source of the confusion.  While it didn't show examples with [] for a default, it also didn't emphasize enough why that would be a bad idea, and while it did say that defaults are evaluated at the point of function definition, the example was not relevant for this issue.
1a0b872665 At least mark the URL to the Packages essay using \url.
5ee808db51 Fix synopsis.
730d83797e Clarify that quit() and close() render the instance useless.
161edc29a6 Added file transfer to example.
0cb76200ef Guido's white background.
92a6ed9940 Minor refilling of a paragraph...
70da192f63 im_function --> im_func
60c3cafc24 In the example, make sure all the imports are done.
3700b6f94e Markup nits.
c18a6f3bfe Clarify xdrlib synopsis.
2d62395a8e Fix typo in binascii synopsis.
150ee43c64 Removed obsolete chapter header.
f44c4851e9 New organization of internet modules into protocols/support and data chapters.
29fe944787 New chapter headers for Internet Protocols and Internet Data chapters, which replace the existing internet chapter.
d795c5cbd1 Fix synopsis for multifile.
446f033e23 For Win32, added pragmas specifying the python15[_d].lib library.
2c2f731daf [Sjoerd Mullender]
1015be3812 [Sjoerd Mullender]
5ff1761d3f From: "Fredrik Lundh" <fredrik@pythonware.com> Date: Fri, 7 Aug 1998 13:37:12 +0100
a42c1ee21d Added note() message to Page class -- this was used but didn't exist. (The alternative would be to call self.checker.note() but since self.checker might be None that's not quite right.
399fea89cb Shorten the module synopsis.
72d157e998 Shorten the module synopsis.
9940bd717c Variant of AMK's patch to produce text versions of HOWTO documents.
6446212593 Time machine experiment.  Use '__name__' as the special key (always present) that refers to the section name.  Also added a (slightly) better InterpolationError error message, which includes the raw string.
f5475c95a7 Checkpointing news for 1.5.2a1...  (Not all done.)
23a163454a Markup nit.
1a3c2a0ede Markup nits.
56fa8a7e4b Marked makedirs(), removedirs(), renames() as added in 1.5.2.
4163e708ed On the Mac, use Internet Config to find the proxies (Jack Jansen).
4ff6d27319 Quote/unquote slashes in macintosh pathname components (Jack Jansen).
9c241ba014 Added declarations for Mac code resource modules (Jack Jansen).
0f84a349bb Added handling for Mac code resource modules (Jack Jansen).
1127487972 Bump MS_DLL_ID to 1.5.2
78f6583c7c Put the CRLF back in.
0f586dacc0 Put the CRLF back in.
844ea7beab New project files...
40552d0857 Gack.  The module doc string is too long for VC++ 5.0. However two string literals concatenated are fine! Hope this doesn't break other platforms.
617bc19e3d In Win32 version of listdir(), when FindFirstFile() returns ERROR_FILE_NOT_FOUND, return an empty list instead of raising an exception.
954e3cab0a Removed unused variables.
de23cb0e7e Bug in how an except statement was written (submitted by Piers himself).
d807879b31 Make getversion.o dependent on ../Include/patchlevel.h as well.
b2395ebd51 Upgrade patchlevel to 1.5.2a1.
c531270b72 New version of makefile for Windows 3.1 from Jim Ahlstrom.
cc93d9568c New version of VC 1.5 makefile from Jim Ahlstrom.
eb891ae045 Get rid of obsolete setup_nt subdirectory.
bc160b50c5 Getting rid of this ancient stuff.
41b4f3875b # Removed .pyc file that was accidentally checked in.
debafb9d84 Added SIZEOF_INT and SIZEOF_LONG
227cf764b2 Undo a silly effect of a global substitution: the macintosh panic() function had a reference to vPySys_WriteStderr(...) -- turn it back into fprintf(stder, ...).
11300cc71e build_html():  Simplify, so there's only one version of the latex2html 	command line.
1ca8fdc446 Remove modified setting of $ICONSERVER; this isn't the right way to do it.
a690394cae New meat.
fc8f5d1a7f typo (pwill -> will).
bcc207484a Changes for BeOS, QNX and long long, by Chris Herborth.
1a8791e0b8 Changes for BeOS, QNX and long long, by Chris Herborth.
7d896ab1bb Added gethostbyname_ex(), which returns the same kind of data as gethostbyaddr().  (Plain gethostbyname() returns only the IP address.) This moves the code shared by gethostbyaddr() and gethostbyname_ex() to a subroutine.
45f2601cf3 get_chapter_id():  Separate two aspects of string replacement to allow the 	need for each to vary independently.
f54556efae Fixed wrapping on some long lines.
ec95c7bd2b Changes for BeOS, QNX and long long, by Chris Herborth.
d8eb2119b5 Adding the BeOS port.  More checkins to follow.
3f7b6fcea0 Ok, we'll try this again: update the release date.  ;-(
228e31eef9 Update the documentation release number in RELEASE.
da4d6daa4a Support case insensitive treatment of os.environ keys on Windows and DOS (as well as OS/2).  I presume that making a call to putenv() with a lowercase key will actually do the right thing.  I know this is so on Windows/DOS, and I expect it is so OS/2 -- but the old OS/2 code didn't assume this.  (I don't know if the person who provided the OS/2 patch was clueless or just didn't care about DOS and Windows.)
7f875ef749 parser__pickler():  Use Py_DECREF() when reference is known to be non-NULL.
fcfb6323fb Latest version by The Dragon, who writes:
5053efc2c4 In BUILD_LIST, use PyList_SET_ITEM() instead of PyList_SetItem(); and get rid of redundant error check.
c96417980c Patch by Jody Winston (with my changes) to add some of the "wait status inspection" macros as functions: WEXITSTATUS(), WIFEXITED(), WIFSIGNALED(), WIFSTOPPED(), WSTOPSIG(), WTERMSIG().
923fece5bd Better error messages when raising ValueError for int literals.  (The previous version of this code would not show the offending input, even though there was code that attempted this.)
ac6a37ae55 Fix a potential problem in PyLong_FromString(): could fall through the for loop with z==NULL but continue to reference z later.
df3d8756b7 Better error messages when raising ValueError for int and long literals.  (The previous version of this code would not show the offending input, even though there was code that attempted this.)
152d8173a3 Fix a memory leak -- the cached values of __getattr__ etc. were never freed.
f6fc1ec462 Jim A's new versions of these
84c6fc9653 Patch by Ron Klatchko: fix invariant in _unread().  Also fixed readlines() to behave like it should (return lines with "\n" appended).
6fd83b7b38 Generalized so it's useful for testing other packages, by Andrew Kuchling @ CNRI.
3357561476 Added randrange to list of exported functions.
187f154243 Introducing randrange([start,] stop [,step]) -- same as choice(range(start, stop, step)) but faster.  This addresses the problem that randint() was accidentally defined as taking an inclusive range (how unpythonic).
490ec9c877 Use buildtools where appropriate. Build BuildApplication applet too.
b44f1cca6c Build a full standalone application from a python script (Just)
015b70ec93 Common code used to the buildtools module (Just)
b5ae378c84 Implementation of freezing from shared libraries, without source. (Just)
813c997b76 Common code for BuildApplet, BuildApplication and fullbuild (Just)
87440e44d8 Extended replacement for scripts:cfmfile.py (Just)
871fad2641 Added has_key() method to IC object. Removed a debug print.
a7a7df0666 New about box and a few other fixes by Just, and everything got rebinhexed again.
87c485c1ad Initialize the program name before adding shared library resources (Just).
2e6445caa6 Don't add the library file to the resource file chain if it is the same as the application file (Just).
7e1fb7c92d New about box, with the version mesage filled in in a text item, and PLstrcmp() fixed. (Just)
017e0ff1a0 The PYD resource should now contain 2 strings: one for the ppc fragment name and one for the cfm68k fragment name (Just). Also, some unused variables removed.
abdf93c6dc Re-indented properly (Just).
5fdd119aba Clarify the + and b mode characters for open() a bit.
b35631587b Pass paper size to dvips explicitly.
8f7abed9d4 Update.
d05177fa84 tohtml():  Use a table instead of a definition list for module synopses.
d19b9d6c07 Fix two remaining references to all-pdf and all-ps to only use pdf and ps.
9f86b662d1 Update to use a separate page for front matter.
e574405eff Update the HOWTO template to use a separate page for front matter, with comments.
514cd87d40 do_cmd_maketitle():  No <hr> at the end of the "title page".
1e4973be73 Define stuff to allow simple HTML-only selection using TeX's \if<foo>...\fi stuff.  \ifhtml ...\fi for HTML only.
efc17bd968 Added ref/ref.tex to REFFILES.
61c7728cc9 Make sure all chapters, sections, and subsections have a \label to give them semantic file names in the HTML.  No more node#.html files!
020f8c0139 Make sure chapters, sections, and subsections all have a \label to give them semantic file names in the HTML version; no more node#.html files.
1a7bab05e8 Don't use raw_input() to ask for the password; this puts the password in the GNU readline history buffer which is not such a great idea.
ec8c8c2ef2 fix __str__ method of EnvironmentError (base class of IOError): was using "%d" % errno to print out IOError exceptions -- but urllib.py raises exceptions where the errno slot in the exception tuple is a string.
ee7fd697bf Fixed the gzip synopsis.
a30e469fda Added the popen2 synopsis.
54327c4c05 Added the calendar synopsis.
edf6b1f431 Added the bisect synopsis.
9030b0f053 Added the dumbdbm synopsis.
08caa964c4 Added a synopsis.
9643c6706f Fix the synopsis.
b44e75339a Mark the new & changed items.
6481ba6251 Update the release date.
53af049499 do_cmd_localmoduletable():  Cause the child links table to be dropped when 	there's a local module list.
897d12bb87 do_cmd_versionadded(), do_cmd_versionchanged():  Support for new macros.
af958c7be2 \versionadded, \versionchanged:  New macros.
9ad9c9be03 Convert operator precedence table to the new style markup. Added lambda to the table. Call "**" exponentiation instead of power.
6f5bf8d59a Minor tidy.
28700c464a Use Py_GetPythonHome() instead of getenv("PYTHONHOME").
8b2b3ce4be Two changes:
76310fcc47 Make sure that at least one digit has been consumed in atoi().
f7685d79e2 Fix up the synopsis table stuff so it gets things right at each chapter, instead of stringing it all together.
b3a3ed8f72 Update @INC so we can 'require' modules in Doc/perl/.
a0f4c94af6 Added module synopsis support with one (big) caveat:  All the modules are listed in each chapter that has a \localmoduletable.  This will be fixed, and everything else seems to be working fine.
2903d03e2d tohtml():  Make module names anchors.
a1cce714d0 Converted some {tabular}s to use {tablei*} environments.
30e52653e1 {tableiv} environment:  Four-column table.
aca61a43dd Removing all references to FrameMaker
6a2fe26861 checkpoint before I throw this away
579c8453c3 Checking in uninteresting changes (mostly window resizes :-) before I remove all this cruft.
2babd7b151 Document getsize(), getmtime(), getatime().
2bc1f8f07e Added getsize(), getmtime(), getatime()
89a79d19b7 Document makedirs(), removedirs(), renames() -- ESR-inspired super-versions of mkdir(), rmdir() and rename() that make or remove intermediate directories as well.
4def7de7c6 Add makedirs(), removedirs(), renames() -- ESR-inspired super-versions of mkdir(), rmdir() and rename() that make or remove intermediate directories as well.
7313b03469 My first Perl object.  ;-)
246837d0f5 Fix markup of an \indexiii --> only two parameters were given.
2a502d8304 Use 'S' format character for the optional constructor argument, so we get a decent error message when it's not a string (instead of confusing errors when trying to use the thing).
d540509682 Changes copied from the FrameMaker version.  Hardly anything (but then this is the shortest chapter.)
5399d68c4b Changes copied from the FrameMaker version.  Not too much.
56c2013d15 Changes copied from the FrameMaker version.  Also documented some previously undocumented features.
34116ba933 Remove all-<format> targets in favor of just <format>.
7c0240f112 e.g. -> e.g.,
c2aa9fbad9 Remove use of the avant package; Helvetica isn't as pretty, but works for acroread.  The problem this solves is likely dependent on font availability, so keeping things simple is a good solution.
b193c95165 Document Ellipsis (not much of a documentation snippet, but at least it's mentioned.
1eb200d360 Added 3 missing types: ComplexType, SliceType, EllipsisType.
78a6ddbdd1 Move files around in a different way, so CVS picks up all the changes.  ;-)
3f8a59f146 Reflect file renamings for the Python Library Reference.
64e3b43583 Move files around to get the names to match the module names except for case.  Two modules (SocketServer, BaseHTTPServer) still don't match; those names are just too long!
889f53d4e0 Reduce the number of levels in the Table of Contents by one, mostly for the Python Library Reference.  The other manuals do not suffer.
13529c41e4 Remove item about one section === one module; done.
3a0ad6089b Changes copied from the FrameMaker version, and some new stuff (complex numbers, power operator).
5420f3321d \textunderscore:  Re-define with a width that's more appropriate for the 	courier font used in Python code.  This still isn't *good*, but 	makes the width about right in most cases.  (Exception: it's now 	a little wide in \var words.)
cf0fb8bfee Document the 'p' format character.
c457ca7ede Fix up Barry's markup, which didn't pass the latex test.  ;-)
da00c878bd Added descriptions of EnvironmentError and OSError; updated IOError to reflect its new place in the exception hierarchy; fixed typos, etc.
eef2cd14c9 Updated the description of os.error to reflect the fact that it is now equivalent to exceptions.OSError.
27467e4b7e Logical markup.
b18a93b4c8 Changes copied from the FrameMaker version (hardly anything original).
3bd9ab0ef3 Use the new module synopsis syntax, even though we don't need a synopsis table for this chapter.  This protects against backend changes for \declaremodule.
8cab549c0a use_latex():  Hack to pass .syn files though uniq, so that the last module 	in a HOWTO document isn't listed in the synopsis table twice.  This 	will do until the real bug is found (low priority!).
465a42a58e Added targets dvi, pdf, and ps, to make all of the documents in those formats.
b91e934cf1 Adjusted to use the new module synopsis support macros.
fe7f3bc2aa Adjusted to use the new \declaremodule \modulesynopsis \localmoduletable macros.
dfb658c386 'name space' -> 'namespace'
a488f30627 Lots of new stuff for "module synopsis support."  Public interface consists of three macros, one which replaces some of the current conventions used in the module sections:
2fcadb2ffb \py@ModSynopsisFilename:  New macro; gives names of the .syn file.
1cc6d53f65 \py@ModSynopsisFilename:  New macro; gives names of the "current" .syn file.
c31cc38106 Ignore the new ".syn" files used to handle module synopses.
83b2f8ad3d Lots of changes copied from the FrameMaker version.  Also documented some previously undocumented features.
d58d7647f3 Several changes to support inclusion of filename in relevent exceptions:
52ddc0e756 PyFile_FromString(): If an exception occurs, pass in the filename that was used so it's reflected in the IOError.  Call PyErr_SetFromErrnoWithFilename().
97d951533e PyErr_SetFromErrnoWithFilename(): New function which supports setting an exception from errno, with a supplied filename (primarily used by IOError and OSError).  If class exceptions are used then the exception is instantiated with a 3-tuple: (errno, strerror, filename).  For backwards compatibility reasons, if string exceptions are used, filename is ignored.
2dfe4de614 Added support for including the filename in IOErrors and OSErrors that involve a filesystem path.  To that end:
d086a1a864 Added support for two new standard errors: EnvironmentError and OSError.  The EnvironmentError serves primarily as the (common implementation) base class for IOError and OSError.  OSError is used by posixmodule.c
62a21a2ebe New global variables: PyExc_EnvironmentError and PyExc_OSError
be260101cb # Oops, correct Latex errors.
0af2f63056 Document how to make a POST request with urlopen().
810a3396d1 Speed up the implementation of quote().
d81fc3cd64 - Added a function MoviesTask, which is the same as the method but with a null movie (giving time to all active movies) - Made the graphics world parameter to SetMovieGWorld optional.
2116bcaec0 Remove the MOOV filetype from the StandardGetFile call, so we can also open MPEG files, etc.
1f00eed8b5 Feature added by Harri Pasanen (at my suggestion): .py suffix on filename may be omitted.
1ee36ffca0 (pause_doc): Sun CC complains about newline in string literal
b4db1944c4 When comparing objects, always check that tp_compare is not NULL before calling it.  This check was there when the objects were of the same type *before* coercion, but not if they initially differed but became the same *after* coercion.
052969a602 Don't use calculations on values gotten from tell().  Also use a slightly different way to test for the existence of unread.
897b9f0b0d Add new syntax for specifying filenames on break and clear commands.
136a112bf1 Untabified.
f60e8e8108 Update the documentation.  Get rid of the section "how it works" (which is not very relevant when you're in the debugger :-).
b5699c7240 Added support for specifying a filename for a breakpoint, roughly according to an idea by Harri Pasanen (but with different syntax). This affects the 'break' and 'clear' commands and their help functions.  Also added a helper method lookupmodule().
c612681b20 Fix another bug in ESR's changes.  In order to work properly, onecmd(line) must return the value returned by emptyline() or default(line).
d623d20e7d6 Complete the addition of libthreading.tex.  (Isn't it annoying that you need to edit four files in order to add one section to the manual?)
0aec9fb183 Add missing initializer for self._backupfilename.  Due to Ralph Butler.
3a8d1f5a6b Modest speed improvement to escape() by Piet van Oostrum.
7333c4cafc Patch by Piet van Oostrum to avoid calculating with the result of fp.tell() -- that won't work on Windows.
a9f445cd8d Add libthreading.tex to LIBFILES.
16440e63be Added libthreading.tex ; this is mostly the contents of threading_api.py,  with LaTeX markup added, and some small rewrites to improve the prose.
bd9f093fcd Measure performance of sub(), split(), findall().
1a78553093 Add test for failure of the getattr call in pcre_expand() -- it used to core dump if the first argument did not have a "group" attribute.
0e5ab17ad3 Get a 3- to 4-fold speedup for sub()/subn(), split() and findall() by not calling self.search(); instead, call self.code.match() directly and interpret the list of registers it returns directly.  This saves the overhead of instantiating a MatchObject for each hit, basically inlining search() as well as group().  When a MatchObject is still needed, one is allocated and reused for the duration of the scan.
c364cf8228 Added tests for findall(). Added test for m.groups() with default. Added a few prints announcing various tests in verbose mode.
dfba2fbfd0 Eric Raymond documents two already-existing functions (bmp, png).
7589b71c4a I_getattr(), O_getattr():  Added read-only access to the closed attribute, based on comment 	from Michael Scharf <Michael.Scharf@Rhein-Neckar.de>.
7f1d3aa3d9 Add tests for array self-assigns.  (This one has no relevance to JPython.)
affd77f71e Add tests for list self-assigns.  (Sorry, this should have been here before JPython 1.0 came out.)
0fd00334c6 Avoid using calloc().  This triggered an obscure bug on multiprocessor Sparc Solaris 2.6 (fully patched!) that I don't want to dig into, but which I suspect is a bug in the multithreaded malloc library that only shows up when run on a multiprocessor.  (The program wasn't using threads, it was just using the multithreaded C library.)
93d1fe1c56 From: Nicolas CHAUVAT <nico@caesium.fr>
98c92c83a5 Show how to do switchable panels.
182c590869 Tk.__init__():  In computing baseName, add ".pyo" to list of dropped 	extensions, and include the "." in ".pyc".  Still need to get 	_tkinter.c:Tkapp_New() to use baseName....
43ff8683fe Temporarily get rid of the registration of Tcl_Finalize() as a low-level Python exit handler.  This can attempt to call Python code at a point that the interpreter and thread state have already been destroyed, causing a Bus Error.  Given the intended use of Py_AtExit(), I'm not convinced that it's a good idea to call it earlier during Python's finalization sequence...  (Although this is the only use for it in the entire distribution.)
69a79bca68 Better RFC 821 compliance (MAIL and RCPT, and CRLF in data) by Carey Evans <c.evans@clear.net.nz>, for picky mail servers.
5c44027d8a Added a delete() method to menu entries. Only the last entry of a menu can be deleted, but that's good enough for things like a "Windows" menu with the dynamic list of open windows at the end of the menu.
f22e67dcb5 Added prototypes for the code resource routines, and for Pstring (which was missing, for some reason).
ac82b6a041 If the preference filename resource is empty don't try to open or create the preferences file. This is so that frozen programs don't interfere with an existing Python installation, or leave turds in the Preferences folder.
1e2260fcb4 All import-related code has moved to macimport.c.
f2f3e9bc43 Added macimport.c to various files
eefc1a3f97 Add an empty PYTHONPREFSFILE STR resource, so frozen applications don't try to open/create the preferences file.
5dba9e8aef Add special case to PySequence_List() so that list() of a list is faster (using PyList_GetSlice()).  Also added a test for a NULL argument, as with PySequence_Tuple().  (Hmm...  Better names for these two would be PyList_FromSequence() and PyTuple_FromSequence().  Oh well.)
fa4ac71dd6 Small changes to map() and filter():
bfc725bf64 Changed PySequence_List() and PySequence_Tuple() to support "indefinite length" sequences.  These should still have a length, but the length is only used as a hint -- the actual length of the sequence is determined by the item that raises IndexError, which may be either smaller or larger than what len() returns.  (This is a novelty; map(), filter() and reduce() only allow the actual length to be larger than what len() returns, not shorter.  I'll fix that shortly.)
df901dfdea Added a function SetUserItemHandler: this takes a function(dialog, item) as parameter and returns a handle suitable for passing to SetDialogItem as a user-item redraw routine. Note that you can only make one of these, for now.
ba0d0611e7 Add macros for direct access to the members of CFunction objects.
d4ba73c75b Move the definition of PyMethodObject to classobject.h, so it can define macros for more efficient access to the fields.
9223351617 Marc-Andre Lemburg's patch to move the typedef for PyCFunctionObject to the .h file and add macros there for inlined access to the fields.
eeb64287f1 (1) Added a sys.exc_info() emulation.  (It returns None for the traceback.)
f029548ac2 Added item about index item/subitem separation.
5da5a68325 Fix suggested by Lorenzo M. Catucci <lorenzo@argon.roma2.infn.it> to keep the large letter at the top of each index section with at least the first entry for that letter.
fa00e958fd # In case BINARY_SUBSCR, use proper PyList_GET* macros instead of inlining.
7859f87fdb Marc-Andre Lemburg's patch to support instance methods with other callable objects than regular Pythonm functions as their im_func.
bb71ab68f9 Reindented some OS/2 and hpux code that looked ugly or at least inconsistent.
7ba30431ec Recompute the special getattr/setattr/delattr cache slots after changing __dict__ *or* __bases__.
b77a68e6b1 Rewrite to support multiple suckers, each with their own thread.
125700addb Instead of printint, use self.message() or self.note().
0fd9408c40 Needed.
5e32a77fcd Minor change for windows; set extensions_c later and set frozendllmain_c at the right place.
b84ef9bc61 Put back the call to report_unbalanced() that was lost when parse_endtag() was restructured in parse_endtag() and finish_endtag().
d94c2dc5e8 # Bump version because of checkin to faqwiz.py. :-(
0922a56965 Don't add <...> around mail addresses; they may already be there.
e79cf323c7 Added hints about building your own DLL.
233f4b54d3 Two error messages still used the old name of the functio mkvalue() -- which is now Py_BuildValue().
c821d1ecc0 Add a cast that a picky SGI compiler found was necessary.
9f29990a90 Fix a benign problem found by a picky SGI compiler (unreachable break after a return).
04e00a4cf4 Fix benign problems found by a picky SGI compiler (unreachable break after a return or goto).
c69bac539c Fix benign problems found by a picky SGI compiler (unreachable break after a return).
eaa1ed6b42 Fix some problems that a picky SGI compiler reported.  Two were benign (unreachable break after a return) but one was a real bug: ReadFrames() was getting a bogus framecount because of a missing '&'.
e32d1537f0 Sigh.  The hack to enable special treatment for errno on SGI machines must be enabled here, otherwise the errno we set on overflows is not the errno that's being read by compile.c.  Wonder how many other files that do their own "#include config.h" need this too :-(
6b3d77e6a9 Guess what...
f867812288 Fix two unrelated problems in the same area:
82a5c66a51 Added copious docstrings, plus two minor layout tweaks.
a4289a79f8 In the example iterating over sys.argv and opening each argument, change it to iterate over sys.argv[1:].  Suggestion by Gerry Wiener.
7c29b2328b (py-beginning-of-def-or-class, py-end-of-def-or-class, py-mark-def-or-class): Integrated Michael Ernst latest patches. Primarily, it allows functions that search or mark defs/classes based on programmatic specification, to take an 'either flag value which allows searching for both classes and defs (stopping at the nearest construct).
003932a508 (py-comment-indent-function): A replacement for comment-indent-function's default lambda value (in simple.el), this version finally kills this nit: auto-filling a comment that starts in column zero with filladapt turned off would cascade the #'s to the right.
9d865e1a30 Get rid of some obsolete opcodes.
7bda89f694 Rewritten a bit to address some criticism in the newsgroup.
5f574aace9 Added back the description of the exec statement.  It appears that I accidentally cut it out when removing the access statement!  Added a paragraph on __builtins__ and other possible manipulations of the key space of the dictionaries.  Added some index entries.
9f2b524385 The permissions ('mode' flag) should default to 0666.
8ba4036a40 The _fromlinepattern was a little too restrictive -- some sendmails don't put the seconds in the time!
b3bf2cd64b # The variable total is never used somehow.  I think I had plans for # it but can't remember what.  Get rid of a comparison that breaks.
6bbd1d0f0e According to Robin Dunn, at least one FTP server returns 200 instead of 250 on a successful delete.
1717ba498f Normalize markup.
579d366458 Normalize the markup.
3f6034dcce Added index entry.
91e5211bbf Added \deprecated to exit_thread() function. Reflects Guido's revision.
d20781b518 On Windows, put the select file descriptor arrays on the heap. This is because they are huge and the stack is limited on Windows. Other platforms keep declaring it on the stack.
030eb11823 Gotta have an __init__() method -- pdb.py calls it!
bfa3f6b673 Several changes:
b68cd421e1 Fix two smal memory leaks discovered by Vadim Chugunov.
f811dcab78 Disable malloc debug in frozen programs.
d674163a0b The init routine for MacOS had a non-standard name. Changed to initMacOS().
a5a49818aa Convert \n to \r in strings that are displayed in the dialogs.
8e54abe92e Fix the \kbd definition so it didn't leave the courier face on.
3240dd2bc2 Mark the actual SMTP commands (HELO, etc.) the same way FTP & NNTP commands are in the appropriate sections.
108943c216 Added a section to the chapter on modules, describing the package system. The text is almost completely from GvR's essay on packages; some introductory paragraphs have been removed, and everything after the 'Details' section in the HTML has been dropped (seems too technical).  A paragraph has been added after the sample package layout stating that there must be a file called__init__.py in a directory to make it a package.
0b3b43ca6f New blood.
7011504e27 Improved test set for int() and long() string conversions.
7e0e9555b7 Get rid of the lock; it's no longer needed.
0dd010a9e4 # Be more definite about the MIPSpro compiler bug being fixed in a # later release.
cf51dacfb8 Document __copy__() and __deepcopy__() methods.
5b68362a3a Use the real name of the module: "smtplib", not "smtp".
8ec619f60e Note that readline returns '' on EOF, not "EOF" (whatever that may be).
472b9a3f06 Clearly I was to quick with the previous commit...
97ea116472 Documented the pop() method for lists.
9c59ce9b5a Documented os.linesep (line separator).
bf0db032cd Add pop method.
3dd7f3fef0 Added doc strings for methods and a new pop() method.
cd90509d58 As suggested by pson@pson.pp.se, correct the docs for head(), body(), article().
0f91183b1a Fix the comments describing the return values of the head(), body(), article() commands.
52a79e8e1c Changed URL to crypto page.
a25969620a Fix by Sjoerd Mullender to support symbolic links and make a backup of .mirrorinfo.  Fix by me to call string.lstrip(filename) to cope with a bug in strop.strip() in Python 1.4.  Additionally, I changed all print statements that print filenames etc. to put them in backquotes so that it will be more obvious when there's a funny character on one of them (such as a space...).
6c373f758f Document new default arg to groups() and new functions/methods groupdict() and findall().
8ea9f4d10a Fix a stupid little bug: len() of an unsized returns -1 and leaves an exception waiting to happen next...
16926bd75e Add PyImport_AppendInittab() an PyImport_ExtendInittab().
8b3282be9f For completeness, add a dummy load_package() method to RHooks.  It should never be called, so this isn't really needed, but this signifies that rexec now supports packages -- because ihooks does.
9f5c36fddb Support loading of packages.  (I had this coded up for a while but didn't want to commit until it had been tested.  I presume that it works in Grail.)
be0b62cab4 Added findall() to RegexObject -- return a list of all matches in a string.  Added groupdict() to MatchObject -- return the named groups as a dict.  Added default argument to groups() to specify what to return for unmatching groups; groupdict() also has this.
80884075f0 Improved by Eric Raymond.
716b78474c # Make tabnanny happy.
3ad9dd559a Improved by Eric Raymond.
950ff2923a Experimental feature: add default argument to getattr().
39ef2274a3 Unsigned 1 and 2 byte sized formats shouldn't result in long integer values!
c94f16f156 Oops!  Of course, Tim is right -- when the item is not a hex number, the '%' should be put back in.
52e86ad05b Speed-up unquote(), inspired by post from Daniel Walton.
002f7aae08 Note that no .pyc/.pyo files are created for script files.
f9cfb173cd Now cmd is documented too.
a40d643cdc Documented smtplib, multifile
8ddbe9119f Documented cmd, smtplib, multifile
f78a52c1ae Added cmd, smtplib, multifile
8668e8e49c Contributions by Eric Raymond: documentation for modules cmd, multifile and smtplib.
911ec188c8 # Added missing semicolon (was #ifdef'ed out in edit on Windows).
1d8fb2d894 Added doc strings.
a5e1b008a9 Windows-specific hack to make sure that when LoadLibrary() is called, the filename contains at least a rudimentary pathname. (The bad part is that we need to call getcwd() because only a prefix of ".\\" is not enough -- we prefix the drive letter.)
0ef577b966 Added doc strings.
d2264bb5c3 # Remove an extra blank line from a doc string.
c3bc31e249 Added doc strings.  Maybe the doc string for the module itself is a bit long, but it sure helps!
8a92c627d9 New feature: if the object's type has a non-NULL tp_doc field, that is returned as the object's __doc__ attribute.
73d8bff44d Document optional kwargs argument to start_new_thread().  Also document new LockType and reverse the preference for exit() vs. exit_thread() -- exit() is now preferred and exit_thread() is obsolete.
a70d160095 Define new macro Py_InitModule3(name, methods, doc) which calls Py_InitModule4() with appropriate arguments.
75e9fc31d3 Added doc strings.  Also export LockType from the modoule, and give it a doc string.
f9d9c6c5d2 Added doc strings.
d9b5208e90 In raw_input(prompt), make sure that str(prompt) really a string object before using it.
1bb26872f5 Slight rearrangement of some code to make it faster, by Vladimir Marangozov.
fb721cf03e Added build.macfreeze to the "special" folders.
46603af87f Config file for frozen binaries.
d969061744 Initial documentation on freezing.
1118c44369 Template project, bundle file and config.c file for frozen applications.
ecf960fe18 A well-known example for freeze.
144fa678d2 Mac version of freeze. Uses standard freeze modules where it can, augmenting them here and there. For now, it works more-or-less similar to unix/windows freeze, generating a config.c file, but storing modules in PYC resources. A template project is also copied.
fa68b07526 Print message when we load a PYC resource, if verbose import flag is on.
1cd4d52f2f Remove RCS and #! cruft at top.
88b63b8d30 Allow binding a Tcl command (given as a string) as well as a Python function.
e5836d9811 Mark the 'whence' parameter of the file object's seek() method as optional; it's already decribed that way in the description.
01852838f3 Treat "HEAD" same as "GET", so that CGI scripts won't fail.
2349015a87 Rewrite the (test) main program so that when used as a script, it can retrieve one or more URLs to stdout.  Use -t to run the self-test.
b1f0812be7 Piers' latest version, labeled 2.11.  This time he integrated my changes, and made only a few minor changes.  No changes of my own this time.
95e6f7089a Eric Raymond added support for ESMTP protocol and corrected some typos in comments and doc strings.
323bf5e1f7 Ignore Windows case check for ALL CAPS 8.3 files
a93b848e33 Subsume the interact() function in a class.  This should make it possible to use this in PythonWin, and to replace Fredrik Lundh's PythonInterpreter class.  Fredrik is credited with the class' API.
d9d2625dbd "if match(x) >= 0:" smells of regex matching; should use "if match(x):"
4d40b0a165 Patch by Eric Raymond: add an optional 'seekable' flag to the MultiFile constructor, and only do the posstack bookkeeping when it is true.
2d4a54da32 Removed loading of shared font stuff from howto.cls and manual.cls, moving it to pypaper.sty.
44c413b05e Make the large letter at the top of each section use the sans-serif font, like any other header.
8e7c82648f Added texinputs/pypaper.sty to the list of manual style files, so that the .dvi files are properly dependent on it.
5430b432e6 Bugfix to ESR's code reported by himself: should use hasattr() to test for presence unread, not getattr()!
65b7863efc Fix unclear wording pointed out by Tim Peters, about the interaction between     ^ and the pos argument to re.match(). Also, fixed a typo in libregex.tex.
a8a1b9bc65 There's no point in mentioning F6 as an alternate EOF on DOS -- it doesn't work on modern Windows systems, and Control-Z works everywhere.
a7874d1505 Revert the change of revision 1.30.  While it's in general a laudable goal to use isinstance(x, y) instead of comparing type(x) to y, it doesn't make sense to change this in the example code for the type() builtin...
e67629774f Add check in long-to-int conversion for at least one digit.
3b2b34790f Fix the tests for various anomalies in the string-to-numbers conversions.  Formerly, for example, int('-') would return 0 instead of raising ValueError, and int(' 0') would raise ValueError (complaining about a null byte!) instead of 0...
f57736e77a Translated to use re instead of regex.  Also replaced one use of L.append(a,b,c,d) with the correct L.append((a,b,c,d)).
1b0ff2c32f eval() example:  Removed final interpreter prompt; other examples don't have the empty prompt.
59160706b3 Somewhat updated, but not checked for everything (just the stuff I was using).
251c9fc60a Added Py_{Get,Set}PythonHome.
4c704131ca Added {Get,Set}PopupData calls to get at the data for popup menu controls.
cef4c844df Turns out that 'winfo id' returns the id as a hex string, with 0x prefix. The int() function (aliased to getint()) doesn't handle that, so we must use self.tk.getint() again...
268824e089 Different trick to get the _test() window to pop up.
5cd70f4f66 Added <ctype.h>, needed for Windows.
40ae0e93cd Added _locale
f766e23f63 There was an error check in a loop in PythonCmd which called PythonCmd_Error() but failed to return.  The error wasn't very likely (only when we run out of memory) but since the check is there we might as well return the error.  (I think that Barry introduced this buglet when he added error checks everywhere.)
7b7f6688d2 Added a stronger warning about changing the dictionary returned by locals().
eda960a1dd Piers' latest version -- authentication added by Donn Cave.
faac0136f4 # Untabified the example :-(
bca1207ac8 Documented that by default the output goes to stderr, and that a file keyword argument can be used to direct it somewhere else.  Also documented all the other functions in this module, and even added a little example.
e50b0a44cb In class _Subfile, make sure read(n) can't read beyond EOF.  Also allow negative numbers to specify read until EOF (like for a regular file's read() method).
777dcc6b21 Change the description of input() -- it is exactly equivalent to eval(raw_input(s)).  The statement about breaking a long expression over multiple lines is no longer true.
4281258b5f Minor cleanup by Tim after my changes:
81d10b479e Add __getitem__ to AddressList object, to make it a sequence.
872948350f Some extra notes, and describe a new class (AddressList), all by ESR.
4d4ab9245f Some extra comments and docstrings, and a new class (AddressList), all by ESR.
4c4e7df755 Tim's latest, with some of my changes (also a TP suggestion) added: instead of testing whether the list changed size after each comparison, temporarily set the type of the list to an immutable list type.  This should allow continued use of the list for legitimate purposes but disallows all operations that can change it in any way. (Changes to the internals of list items are not caught, of cause; that's not possible to detect, and it's not necessary to protect the sort code, either.)
32490824b6 Fixed the UDP server -- this never worked.  Ray Loyzaga deserves credit for complaining about this and for testing these changes.
76ec53c64d Subject: Bug in PC/import_nt.c From: Dan Pierson <dan@remote.control.com> To: "Mark Hammond (E-mail)" <MHammond@skippinet.com.au>,     "Guido van Rossum (E-mail)" <guido@cnri.reston.va.us> Date: Mon, 8 Jun 1998 17:25:07 -0400
60f2f0cf8e Lots of changes to get this in sync with the Frame version. Added raw strings, imaginary literals, assert and exec (!) keywords, a table about Resererved classes of identifiers, and more.
0bd3795d6a Two small additions to make it identical to the obsolete Frame version.
dc1dab18a5 NewNew abstract, copied from the obsolete Frame version.
0a13f7f23a # This is a new module I wrote over the weekend.  Again, you missed the # checkin email because my PC doesn't have the "Mail" command.
5e97783c8f # Note: a previous checkin message was lost because I can now use CVS # from my PC at home, but it can't send email :-(
e3bd82117f Primitive GUI for websucker.
d328a9b5f4 Fix the way a trailing / is changed to /index.html so that it doesn't depend on the value of os.sep.  (I.e. ported to Windows :-)
6eb9d32c43 sort the urls in the todo list
62320c9b9b # (My first checkin from Windows NT using remote CVS!)
ad4db17552 Fixed the EventHook() code so that it also works on Windows, sort of. (The "sort of" is because it uses kbhit() to detect that the user starts typing, and then no events are processed until they hit return.)
d458faadc3 In completer(), return None instead of raising an IndexError when there are no more completions left.  (This for compatibility with Donald Beaudry's code.)
b3f9f4b729 On Windows, make the pipe() call return Unix file descriptors instead of Windows file handles.  Now it is at least compatible with itself on Unix!
e0fdf6f1a8 Keep Microsoft's compiler happy.
c3da02e904 Don't catch interrupts in getpass() -- the finally clause will reset the tty and the caller can deal with the interrupt.
e7c4193755 In tcsetattr(), first initialize the mode structure by calling tcgetattr().  This seems to be the only correct way to cope with platform-specific structure members...
ae9ee7329d Use the getpass module instead of having platform-specific echo on/off code here.
c8f859a487 Jonathan Giddy:
590fc2c4fa Jonathan Giddy:
69256612d7 With the recent change that makes numbers compare smaller than anything, the outcome of the test for max has changed.
08636f08ed Now that test_MimeWriter is untabified, do the same here!
a3eebe60dc Add warning about use of lowercase/uppercase with maketrans().
08d6be4871 Add timegm to list of functions tested, for Marc-Andre L.
d92fb16d57 Oops, bug in release date!
cff311aa37 Be more careful than the previous patch.  The default content-type should only be set to application/x-www-form-urlencoded when the method is POST.  E.g. for PUT, an empty default (defaulting to text/plain later) makes more sense.
e894fc0ea3 Support new overridable method, isheader() (ESR).
444d0f87c9 Eric Raymond: added doc for isheader(); improved docs for constructor.
1299100324 Document the changes I just checked in.
c7bb8577c7 Some changes suggested/provided by Eric Raymond:
3e5fe422cc Document several variables that were previously undocumented, including the new __stdin__, __stdout__ and __stderr__. Also moved setttrace around to its proper place in the alphabet.
1f40cd6314 Add the __doc__ string from the original module on copy_none().
929bd0e02e Added notes about epochs, the year 2038, and a small Y2K disclaimer (all with index entries!).  Also update the list of functions that take or yield a time represented as a 9-tuple.
dd47ec98e2 Default content-type to application/x-www-form-urlencoded at the top level of a form.  This means that browsers that omit the content-type header when sending a POST command aren't penalized so heavily.
e614fb12a0 Changed runs of 8 spaces to tab -- to satisfy the tab nanny.
068ad97330 Untabified -- to satisfy the tab nanny.
5a43e1a90c Get rid of tabnanny's last complaints.
aa2a7a4ae6 From: "Tim Peters" <tim_one@msn.com>
cd5a5f627a When comparing objects of different types (which is done by comparing the type names), make sure that numeric objects are considered smaller than all other objects, by forcing their name to "".
5d23758be7 Added docs for strptime().
87ce7bbc39 Added strptime, if it exists.  Modified after a patch by Jesse Hallio.
52481484e6 Clarify the type of the signal handler.
4a0144c0de Should check that PyObject_Str() really returned a string!
fe02efdbf4 getint() now raises ValueError, not TclError, on errors.
795a4bc666 Added a line to process SGI_ABI.
a45cb45965 When unmarshalling, add test for negative lengths on strings, tuples and lists; if the size is negative, raise an exception.  Also raise an exception when an undefined type is found -- all this to increase the chance that garbage input causes an exception instead of a core dump.
a63eff6e6a Allow assignments to special class attributes -- with typechecks, and not in restricted mode.
fe216b7937 A few minor updates on Emacs mode section
5542449875 Remove the doc string -- it doesn't tell the truth.
0da45c4089 New demo -- Perl style regular expression matching. Slightly more featureful than regexdemo.py.
13c8ef62e6 Say a bit more about .pyc  and .pyo files.
3c46234e5e Remove Emacs and #! cruft.
d659693b5b Improve the self-test code a bit: read a host from sys.argv[1] if set, and list the host name when prompting for the password.
a119c0dd5e Tim's revision of the previous patch.  He also added some sparts to the median-of-three code to get a few percent back.
cc20b76ad0 Add comments explaining thread unsafety of this code.
d03e1197cb Make gauss() semi-thread-safe.  It can still give duplicate results, but it can no longer raise an exception when called by several threads simultaneously.
b39e461b89 Two places where _time() should be used said time.time(), which doesn't work of course.
6884af706b Piers Lauders' latest version, with some of my own changes reapplied.
ed6219b116 Fix a whole bunch of error return NULL that should be return -1.
9396673a58 Remove a few unused locals (I love VC++ for this!).
3c8c5981b1 Sorry, the initializer for ob_type must really be NULL, else the damn thing won't compile on Windows :-(
d3ab101fac Quick fix -- define SIZEOF_LONG and SIZEOF_INT.
3600beefea Moved from PC
cd3462f1f7 Moving to PCbuild
2a5119b680 On Windows, need #include <windows.h>; and it's MS_WINDOWS, not MS_WIN32.
e4e021bf21 Release the interpreter lock for calls that may block: _locking(), _getch(), _getche().
00d93066b0 Changes to make it possible to write multi-threaded programs using Tkinter.  This adds a separate lock -- read the comments.  (This was also needed for Mark Hammond's attempts to make PythonWin Tkinter-friendly.)
7e7912f2ca Protect all uses of the random generator with a lock. Particles break out of their loop when the main loop exits.
3d3a52aa3a An example of a multi-threaded Tkinter program.
1ad00717fb Patch by Lars Marius Garshol:
ae621ff7b7 Guard against changes in the list size during a compare or sort.
578de30fd7 Some systems (e.g. Linux) use enums for some symbols (like IPPROTO_IP) so that our #ifdef test has the wrong effect.  Substitute hardcoded values for some important symbols (but not for the whole range -- some are pretty obscure so it's not worth it).
617c1b0116 Uses PyErr_ExceptionMatches() instead of comparing PyErr_Occurred().
08570decb7 Uses PyErr_ExceptionMatches() instead of comparing PyErr_Occurred().
41e825a8f4 For ControlWindow there is a new method do_rawcontrolhit(), which gets control before TrackControl is called. The default implementation calls TrackControl and then do_controlhit().
848250c15b Allow an (optional) tracking function (or -1) to be specified to TrackControl. TrackControl is now manually generated (too much work to explain this to bgen).
d3dbb38e98 get_long():  Use PyErr_ExceptionMatches(...) instead of PyErr_Occurred(...).
bebc97fcd7 t_bootstrap():  Use PyErr_ExceptionMatches(...) instead of PyErr_Occurred(...).
764b984db5 Use PyErr_ExceptionMatches(...) instead of PyErr_Occurred() == ... in two places.
2b9d029308 add handler for JPython's org.python.core.PyStringMap object, which walks and quacks like a dictionary.
f638d1c9dd Fix some comments; move 'import random' to top.
90ce848848 On SGI, we need to define _SGI_MP_SOURCE before including errno.h when we are threading, otherwise accessing errno doesn't work right.
9be628338d Tim's quicksort on May 25.
16653cb273 Add Tim's worst case scenario. Revert to using whrandom so it will work with older versions of Python.
7462942b69 Added some tests to make sure that long->int conversions near sys.maxint and near -sys.maxint-1 work correctly.
f753181272 Subject: Buglet in PyLong_AsLong From: "Tim Peters" <tim_one@email.msn.com> To: "Guido van Rossum" <guido@CNRI.Reston.VA.US> Date: Sat, 23 May 1998 21:45:53 -0400
2028dd0423 Replaced the VC++ 5.x instructions with a pointer to ../PCbuild.
9c1bc5b1f6 Moved VC++ 5.x files to ../PCbuild.
15b239f785 Moved VC++ 5.x stuff here.
1c096b7289 Mark Hammond writes:
0f1e1fc3fa Don't die if win32api doesn't exist.
55b40b06d2 Fix a dumb typo in the revparse() regular exception: {1-4} should be {1,4}. Now you can click on revisions and diffs again!
a58e9edbef Document missing functions: xor, not, truth, countOf, indexOf, and (new!) contains.
7bf15648a4 Use a different implementation of EventHook().  The new version registers an input file handler for stdin with Tcl and handles Tcl events until something is available on stdin; it then deletes the handler and returns from EventHook().
6a50ba82ce Minor grammatical correction:  "This module perform ..." --> "This module performs ...".
5b34ec1b14 Fixed spelling in comment:  "RFC", not "RFX".
832f6d2890 Add an alias (and preferred name) "contains" for "sequenceIncludes".
e9387ea773 introduce a new platform-specific variable: os.linesep is the platform's line separator.  \n on Unix, \r\n on DOS, OS/2 and Windows, \r on Macs.
fa0b6ab01a Address some gcc -Wall warnings (e.g. include <ctype.h>).
26fd98201f Change the last 4-space indent into a 1-tab indent.
7ef2a1de9b Shouldn't use newdir.dir(), which no longer exists!
b88679b2a4 I think there was a tiny bug in new_function() -- the 'defaults' argument was initialized to Py_None, but later checked for NULL. Consistently use Py_None.
c8498dc604 Add PyErr_PrintEx and PySequence_Contains.
0dabacee16 Make function objects somewhat mutable -- the members func_code, func_defaults and func_doc (alias __doc__) may be assigned to.  For the first two, there's a type restriction to code object and tuple, respectively.
b1ed9c5295 PySequence_In() -> PySequence_Contains().
7df115de65 Make sure that no use of a function pointer gotten from a tp_as_sequence or tp_as_mapping structure is made without checking it for NULL first.
1c4f458099 In PyObject_IsTrue(), don't call function pointers that are NULL (nb_nonzero, mp_length, sq_length).
7e33c6e896 Moved cmp_member() to abstract.c, as PySequence_Contains() [with swapped arguments].
09df08a105 A bunch of functions are now properly implemented in abstract.c, and the code here becomes much simpler.  In particular: abs(), divmod(), pow(), int(), long(), float(), len(), tuple(), list().
44e4d5a6fd Renamed PySequence_In() to PySequence_Contains().
cea1c8ca22 Completely reformatted, standardizing indentation as well as programming style.
c9132066e7 knownfiles:  Add the default installation dirs for Apache 	versions <= 1.2, >= 1.3.
adf0e437cb Trivial little change: when setting a member to an object, hold the old value in a temporary and XDECREF it only after then new value has been set.  This prevents the (unlikely) case where the destructor of the member uses the containing object -- it would find it in an undefined state.
885215c3da Added support for AMK's {definitions} environment; thanks for the reminder!
3bf7865a20 Added {definitions} environment, which has \term to define indivual terms. Similar to {description}.
6c3a2cbc52 whrandom -> random
b26a1b4e2b Use random instead of whrandom.
33d7f1a76c Add Interfaces to replace remaining needs for importing whrandom. # XXX TO DO: make the distribution functions below into methods.
750c8cee7e Add LDLAST to the list of variables processed by the sed script.
a88c5f30c7 Correct bug doc string (discovered by Berthold Hoellmann): get_line_buffer() does not take an optional argument.
0bd5433cf8 Get rid of nearly all clals to self._do -- turns out self.tk.call can be used just as well, so this saves one Python call in many cases!
29892d848c Use whrandom instead of rand.
15527e98cd Protection agains non-existing subdirectories for clean and clobber targets.  On some platforms this would cause an infinite Make recursion.  Also remove "Doc" from the SUBDIRSTOO variable, since it no longer exists in the standard distribution.
110f3652d6 Additions for Mark Hammond's Win32 specific hacks.
e194beb829 Don't use a separate node for footnotes; see if people scream.  ;-)
e87ab1fbf2 Fix definition of release_version (global).
7c68ab2f2b Added entry for mimetypes.
806a1bf34f webcheck target in this Makefile wasn't used.
79c0f0efc4 Fix the webcheck target so it checks the right files....
3bfed5b6b1 (py-ask-about-save): New variable used in py-execute-import-or-reload.  Same semantics as compilation-ask-about-save.
1d0364b2dc (py-execute-string): Bind to C-c C-s, and put on menu
751f4931d8 (py-stringlit-re): Another ME patch to recognize SQTQs and DQTQs (single and double quoted triple quoted strings :-) with embedded single like-quotes.  Also recognizes raw prefix.
820273d6d1 More ME patches:
ab0e86cbcc (beginning-of-python-def-or-class): Renamed to py-beginning-of-def-or-class, and defaliased for backwards compatibility.  ME patch to add optional second argument, count.
4941341858 guess_extension():  Revise documentation string to be more clear.  If not 	inited, call init().
5f4fb913a2 Test that "import sys.imp" fails as it should.
9c0afe5dc7 Fix a curious bug: statements like "import sys.time" would succeed, because the path through the code would notice that sys.__path__ did not exist and it would fall back to the default path (builtins + sys.path) instead of failing).  No longer.
edde150127 Add mimetypes documentation to library reference dependencies.
b818b46b38 Add section documenting mimetypes module.
ebc7b7ac45 More ME patches:
145ab1ce9d #Documentation and comment typos patch given by Michael Ernst.  More #of his patches to follow.
e35c60156b Add a feature to support specifying an additional search directory for packages.  (Mark Hammond)
ce5988b3d9 Remove Emacs cruft.
f1b5a0e3aa Add a feature to support specifying an additional search directory for packages.  (Mark Hammond)
5109ffd607 guess_extension():  New function.  Performs a reverse mapping from MIME type 	to filename extension.
67133e25a2 Neatify the _timezones table and remove a misleading comment about inaccuracies in mktime_tz().
3130b7a2a9 Fixed typo in docstring:  suffixes_map --> suffix_map.
4658682205 Subject: bug fixes for imaplib.py From: Piers Lauder <piers@staff.cs.usyd.edu.au> To: Python List <python-list@cwi.nl> Date: Mon, 18 May 1998 09:51:53 +1000
7beaad4e75 Add file extension .xml, mapping it to text/xml.
6b077878a5 Remove use of RTLD_GLOBAL.
c85be6a0ff Fix another oldie (item (b) only):
b9d9d72ae0 Install config.h. Adapt to new build conventions (get rid of Release directory).
fccfe89753 Another veeeeeery old patch...
837d8bf1d7 Change the output names.  Do away with the Release and Debug subdirectories.
859b16c847 In debug mode on MS Windows, DLLs are called foo_d.pyd or foo_d.dll.
3d9a0585e1 Add some symbols.  Remove the LIBRARY statement at the top (and the commented-out CODE/DATA statements).
e593b6213a Small change to the l2h target allowing the output dir, $(HTMLDIR), to be a sibling of the html/ directory in the distribution.
a4565b0796 Update to use latex2html 98.1p5.
8dbf46a79e Update to use latex2html 98.1p5.
e0a0fcd552 Update note about latex2html version required.
cdbd391415 Add support for the Macintosh Library Modules document.
5b73cdfe60 Revise comment about \let support a little to more accurately reflect the support that's offered.
13b1f43851 Ignore the mac/ directory....
d637406df1 Update to use the output names used by latex2html for the Python Reference Manual; the old FrameMaker names no longer apply.
7a4ad0fc83 Extend handling for \let a bit, to also allow \let\something=<character>.  We still don't support things like \let^^M=\something, where ^^M could actually be any active character.  Print a decent warning if we find one we can't handle.
8d1b3384c3 Remove debugging echo.
e16f6798ae do_cmd_let():  Simple implementation to allow \let to be used to establish synonyms for macros.  This supports:
532246ef55 Improved version of patch for HPUX from David Arnold.
d07868ae52 Added support for \developer, \developers, \developersaddress.
6df93ef9dd Added definitions for \developer, \developers, \developersaddress.
df825a10fc Fix the fix to allow the .tex document sources not live in ".".
25d4e2873c Mostly spurious change to ensure that everyone's version of this picks up the execute bit.... problem discovered by Guido.
f4fc476885 Don't run tools/toc2bkm.py unless we're building PDF.
5c07d9b028 Updated markup style (got rid of \verb@...@, mostly).
2094e044c7 Add pointer to Misc/HPUX-NOTES.
203b4f1a25 Add an index entry.
fa1fb7df31 When a .o file is an absolute pathname, assume it's a file for which we have no .c source.
4ccda15cd3 strop_replace(): balk if the pattern string is empty.
ed33a3f415 whichmodule(): remove redundant PyErr_Clear(); add explicit setting of error when sys.modules isn't there.
02759c03f1 Don't delete glmodule.c on 'make clobber' (it's a checked in file!).
09cae1f8cd New APIs for embedding applications that want to add their own entries to the table of built-in modules.  This should normally be called *before* Py_Initialize().  When the malloc() or realloc() call fails, -1 is returned and the existing table is unchanged.
ba7cc0cfba Remove unnecessary PyErr_Clear().
234e260d5e Since PyDict_GetItem() can't raise an exception any more, there's no need to call PyErr_Clear() when it returns NULL.
e23eb57f08 Since PyDict_GetItem() can't raise an exception any more, there's no need to cxall PyErr_Clear() when it returns NULL.
474b19e2ab Make sure that PyDict_GetItem[String]() *never* raises an exception. If the argument is not a dictionary, simply return NULL.  If the hash() on the key fails, clear the error.
4180cf1649 Remove a redundant statement from halfbinop().
ee918cb487 Fix bug reported by Harri Pasanen: gzip + cPickle doesn't work.  The problem was a couple of bugs in the readline implementation.
ed7adcff73 Tim's quicksort on May 13.
b7057640d1 Tim's quicksort on May 10.
01fc65d92f From: conrad@cgl.ucsf.edu (Conrad Huang %CGL) To: python-list@cwi.nl Date: 13 May 98 18:33:11 GMT
1f05cb007a OK, here's a different way to implement the same thing -- this version also supports filenames with multiple spaces in their name :-)
aeeda5b276 Support filenames with spaces in their names (for non-Mac ftp servers).
2e4c899e2d DELETE_FAST should issue an exception when the local variable is undefined.
1a87e9d708 Add comments about release status.
dc8a3cb06d Add Bill Janssen's notes on configuring threads.
b41addf6a6 Replace all calls to fprintf(stderr, ...) with calls to PySys_WriteStderr(...).
a890e68807 New APIs to write to sys.stdout or sys.stderr using a printf-like interface. Adapted from code submitted by Just van Rossum.
bf6a9b165a Add    PySys_WriteStdout(format, ...)    PySys_WriteStderr(format, ...)
597ac20708 Trivial little change: timer tokens shouldn't have a Print() function, they should have a Repr() function.
b298a300dd Reduce memory requirements.
e34ab30a3f Switch to .tgz instead of .tar.gz to appease Windows users.
72dd58d90e Use .tgz instead of .tar.gz for the output file name.
d2af396dd5 Change ignored extension .tar.gz to .tgz.
2f61cd4dcc Ignore intermediate files.
ba1700c7bb Set the right page size in the PDF output.
d5d473fd5c Add --letter option, similar to --a4.  This is a no-op, but can be used from a Makefile:  mkhowto.sh --$(PAPER).
8981fdf16e Add the clean, clobber targets here for this directory.
a4c640e142 Reverted the last change; the extra cruft is harmless for formatted versions, and allows the info to work through this section.
58ff112e7f Don't be so ugly as to use "set -x" to get the executed commands printed.
4190fae02a Added a section about documentation for the Mac modules.
1a3541c29c Oops, better add it to the usage message!
3504952781 Add easy-to-use support for A4 paper.
efad443351 Remove the tarhtml target; not useful from the sub-make.
29cabd4cd7 Pass the release number to the tools/mktarball.sh script.
f2fa1e2afe Accept the release number on the command line instead of hardcoding it.
323dc70de5 Don't be so ugly as to use "set -x" to get the executed commands printed.
2e7edb80e3 do_cmd_kwindex():  Re-implement now that \kwindex is used again (ref man).
d69e2c4f33 Update some of the comments.
41814bc51f In package Override, use the getcwd() function from the Cwd module instead of the one from Override.pm (part of latex2html).
099b76c3bd Changed some comments.... no longer mention FrameMaker.
ed3da23e44 parser_compare_nodes():  Corrected a minor type error; eliminate one GCC 	warning (at least under Linux).
03e35c548f Add a few doc strings.
ea176b663e benchmark for list.sort()
1e162d3753 Implement round() slightly different, so that for negative ndigits no additional errors happen in the last step.  The trick is to avoid division by 0.1**n -- multiply by 10.0**n instead.
ae94cf292b Fix by Sean Reifschneider:   - When facility not specified to syslog() method, use default from openlog()     (This is how it was claimed to work in the documentation)   - Potential resource leak of o_ident, now cleaned up in closelog()   - Minor comment accuracy fix.
27c225e826 Add the specific sed statement to recover the second output file to the comments.
b1b4f94527 Make Tim O'Malley's requested change: in FieldStorage.__init__(), when method='GET', always get the query string from environ['QUERY_STRING'] or sys.argv[1] -- ignore an explicitly passed in fp.
b9838d97ad Fix a comment.
9447e592d9 No longer needed.
a5d80564af Remove unneeded line.
02379fab61 Use \ldots, not \dots.  The info process doesn't know about \dots.
8ffa21c7aa Adjust to new file layout.
47fd8fed7c Move the rules to build the info files here.
230b530a6a Relocating file to Doc/info.
821a5e42bf Added URLs for zlib's home page and the Windows DLL's home page .
7b0c9d8a07 exec is a statement, not a function!
445cfd339c l2h target:  Do the "right thing" regarding the paper-*/ subdirs as the other 	"big" targets.  Fix is to set the TEXINPUTS on the command line of the 	sub-make.
f4166a478a Some versions of latex2html don't automatically append the .tex extension to the name of the main .tex source file if it's not in the current directory.
df68e3dd6d $(KPSEWHICH):  Use the older style of calling kpsewhich with the arg 	specifying *which* type of path to search.  This works for both 	teTeX 0.4 and 0.9.  This is what we call portability these days!  ;-)
4a9129c7e8 /bin/sed works on both Solaris and RedHat Linux; /usr/bin/sed does not.
566d20951d Oops!  Must have deleted a word by accident before the last check-in of this file; "make" (the 'all' target) became a no-op!
19c7c84db8 Be a little more robust handling filenames.
8923c72c8f Ignore the webchecker turd.
0a96cca7ec Added the webcheck target here.
f295113f1f Cleaned out some more cruft.
a34f7e6a5d Some cleanup, added clean & clobber targets.
bf332696a1 Add support for a --pdf option to cause a PDF file to be created instead; most of the processing is the same and has to be done anyway.
f8e4415578 Markup consistency.
47b0ecd580 Small updates.
8530ef625a Add check to conjugate() that there are no excess arguments.
dda6696be6 AMK's revised version of the previous patch.
0ef1b079a2 Preliminary convenience Makefile.
106fe12ebf Better go ahead and remove some cruftiness....
9cdf08797e Support the new directory structure.
46ed208b46 Relocating file to Doc/html.
fa615bfee1 Ignore .tar.gz files in this directory.
4383e6e24f Don't ignore the html/ directory.
8920156d04 New script to drive HTML generation.
4c9542b271 Ignore subdirectories if your name is "cvs".
60515f49b8 Sub-makefile that can be used to drive the HTML conversion from this subdir.
89df70bfbb Support HPUX 10.20 DCE threads.
b93a86297d support hpux pthreads
2cb5660da1 Get rid of test for -lsun (very old IRIX); add test for -lm (needed on enough platforms).
0072b8d994 An applet with Popt and GUSI preferences but without alis resource didn't work, because the resource file chain was incomplete when we tried to open the preference file. Fixed.
4775d0a353 Relocating file to mac.
0a52bdfd4f Relocating file to Doc/ext.
cda63cc875 Relocating file to Doc/lib/
bbe33c5594 More changes to support the new directory structure.
5360879740 New helper script to build the .dvi for a Python manual; usable for the api, ext, ref, and tut manuals.  The Library Reference requires too much special index processing to make it beneficial to extend this to support it.
8e6c6b2645 Relocating file to Doc/ref.
64958d593c Relocating file to Doc/mac.
2880beb3d9 Relocating file to Doc/api.
56727e2b70 Relocating file to Doc/tut.
99a5c087c6 Change the set of subdirectories to ignore.
ffe9b459ab Ignore intermediate files.
f24b3a3c7c Ignore temporary files.
0d162d0eb6 Modified version of ../texinputs/pypaper.sty that specifies A4 paper.
dde91f000a Fix a bogus \code@...@ to be \code{...}.
744a662f36 Relocating file to Doc/texinputs.
f666917ab7 The Python Reference Manual.
a6bb39622c First cut at welcoming the Python Reference Manual back to the fold.
0cabff904f \itembreak, \itemjoin, \kwindex:  Revived definitions to support the Python Reference Manual.
83b851885d Adding Tim Peters' ndiff utility. This is handy for comparing plain-text documentation files, since it displays intra-line differences.
073b829021 When a file name is selected ("OK" button, <Return> in the filename entry), and the "key" keyword parameter was used to invoke .go(), use the directory of the selected file as the stored directory to return to when the same key is used again.  This is useful since the user may well entry at least part of the path in the filename box instead of doing a lot of clicking around in the listboxes.
bb6193c553 Added a PopupMenu class.
e7b6e396fc New files from Thomas Gellekum
4a114313a8 After variable expansion, what was formerly a single word can now contain multiple words, all of which may have to be joined with the path of the extension directory. (Sjoerd)
e10053b881 Remove Emacs cruft at end.
d618c91f14 Added table of WSA error codes.
1ed70366e3 Version for 1.5.1
4bfe2c7840 Final projects for 1.5.1
845264f081 Mods by Just
f7ffa92ce3 Fix typo in example found by Anthony Starks <anthony_starks@merck.com>, reported to me by Piers Lauder <piers@cs.su.oz.au>.
91aaa92c88 Ugly band-aid to work around a bug in Linux ftell().
a58153e8bf Avoid using cut; sed can do this just as well...
c594baa552 Avoid using dirname; sed can do this just as well...
e0c0da98d8 Patches to make the proxy code work again.  (Why does that always break as soon as I change things even just a little bit? :-)  Even works when accessing a password-protected page through the proxy.  Prompted by complaints from, and correct operation verified by, Nigel O'Brian.
a986bb7e5c Take out the check for AUTH-LOGIN or AUTH=LOGIN in login() -- some servers support LOGIN but don't advertise it.  If it's not supported the protocol will respond NO.  Approved by Piers Lauder.
b485224d82 REMOVE samefile(), sameopenfile(), samestat() -- these cannot be made to work reliably (at least I wouldn't know how).
e365a590d4 Change the names of all methods in the Wm class: they are now wm_title(), etc.  The old names (title() etc.) are still defined as aliases.
a5e54d02a0 Use (void) to throw away a function result, not (void *) !
0132f69c2e Another optimization, probably of negligeable effect: instead of calling self.tk.getint() and self.tk.getdouble(), call the globals getint() and getdouble(), which in turn are just names for the Python builtins int() and double().  (Making them globals actually save a dict lookup compared to using the built-in.)  The corresponding methods of class Misc have been changed similarly.  (Note that getboolean() hasn't been changed because there's no Python equivalent.)
cc8e1a4ed7 Add some help for AIX.  (Konrad Hinsen)
dc59340646 In _bind(), found a way to test for break without a temp variable.
f975699c07 Save a tiny bit of time: self.tk.call takes a tuple argument so it's not needed to say apply(self.tk.call, t); self.tk.call(t) has the same effect.  This cuts down tremendously on the number of apply() calls made.  No measurable effect, but at the very least it saves the lookup of apply() in the globals!
f0c891a2b2 Import MacOS at the top instead of insize Tk.__init__() -- the latter repeats the I/O for the failed import on each interpreter creation.
c9b8a57040 cleanup():  Remove *all* the temp files related to index generation!
302be44e96 When following symlinks to the real executable, use a loop so a symlink to a symlink can work. (Jack)
91eeefdee4 Work around lack of support for \if... in latex2html.
89a1d4ad3a Set $TEXINPUTS='' to make l2h pick up the right thing from the environment.
212643f199 Still somewhat experimental speedup.  This appears to speed up the most common interface to Tcl, the call() method, by maybe 20-25%.
9d1b7ae65b Add a new method of interpreter objects, interpaddr().  This returns the address of the Tcl interpreter object, as an integer.  Not very useful for the Python programmer, but this can be called by another C extension that needs to make calls into the Tcl/Tk C API and needs to get the address of the Tcl interpreter object.  A simple cast of the return value to (Tcl_Interp *) will do the trick now.
06245ac2fa Fix documentation based on comments from Sean Reifschneider <jafo-9804@tummy.com>.
7e6d18c1c0 Replace all calls to acquire_lock() and release_lock() with acquire() and release() instead.
268397f513 Made lint a bit happier.
9fab3aa52e Move a bit closer to HTML generation without depending on the temp files being in the current directory.
310094ccce do_cmd_sectcode():  Obsolete; removed.
b5aa3de118 Remove extra cruft for texi processing.
2a3ab4fac1 Do better hiding of internal names.
08c5dfc5a4 do_cmd_key():	Obsolete; removed.
24340ea583 Fixed \code so word wrapping is allowed.
ca6b4fe36b Section for bisect module.
188a8471b8 Moved popen2 entry to make more sense.
125024a87d Updated.
e32907df67 Get rid of the unused ifdefed-out old sort code.
2ea1c94b9a On the Mac a call to TkMacInitMenus is needed. Also, we pass appropriate events to Sioux so the console window remains functional. (Jack)
19efc5fb80 Add a declaration for strdup() for the Mac. (Jack)
5c069fd4b1 Generate the clear() method manually (calling __GLclear(), another name for clear()). This fixes the name clash with curses. (Jack)
239a218bac Type casts, and added a strdup() declaration for the Mac. (Jack)
9b00dfae75 If USE_STACKCHECK is defined use PyOS_CheckStack() in the repr and str routines. This catches a slightly different set of crashes than the recursive-repr fix. (Jack)
f2044e1a71 Enable ftruncate() on the Mac. (Jack)
92f01c54d4 accept * in return value type and convert it to _ptr after the typename, as in argument types. (Jack)
db9a7b9ef6 Style and StyleParameter are two different types. (Jack)
8b3c30c0eb class ByAddressType, a simple Type but passed by address even on input. (Jack)
57a0661cb8 On the Mac, create the Temporary Items folder if it does not exist yet. (Jack)
9c93a69335 Put quotes around the filename, so spaces in filenames work. (Jack)
50cc04ee03 Mac CodeWarrior has faulty declaration for hypot, which we hide with a #define. (Jack)
53117ae82a typo in error message (fname vs. file). (Jack)
b86ba124ea Support byte-swapped dbhash (bsddb) files.  Found by Ben Sayer.
2aefe8d7c0 Document changed semantics -- open() now guesses the db type and error is now a tuple of various and sundry exceptions.
fc1f64d90d Oops, I had 'n' and 'c' mixed up in my mind.  Get rid of the comment that wonders what the difference is and explain them properly.
a5c0998242 Inspired by Ben Sayer, rewritten the code and some of the comments to be more intelligent when the database already exists (use the module for the existing file, according to whichdb).  Noted in the doc strings that there doesn't seem to be a different between 'c' and 'n'.
f8d50bfdb0 Hook in the calendar and popen2 sections.
1c127e74af calendar module section for the library reference, by Drew Csillag.
6afad3792d popen2 section for the library reference, contributed by Drew Csillag, with some reorganization.
2a1cc3e171 Use of \key and \kbd were isolated to one instance each in this file; normalize to \kbd to allow removal of \key from the document class.
82e6a8f80d Quicksort retuned by Tim Peters.
bee64533d6 Use a try-except so that the pickle file is written even when we die because of an unexpected exception.
e86271af72 When setting the event structure fields, don't die when the widget name is not registered; simply use the string.  This happens for tear-off widgets (e.g. if you've registered enter/leave events for the menu).
1f41f846a3 Instead of calling mktime(), which has all sorts of unwanted side effects, simply zero out the struct tm buffer before using it; this should take care of the BSD folks' concern just as well.
d30dc0a55e Clear the error condition set by ftell().
0eae8fba81 Feeble attempt at making urlopen more robust -- don't call splituser() when splithost() returned no useable host, to avoid calling splituser() on None.
d0ddb66c84 Updated for 1.5.1
804fdc80f9 Use dialog auto-placement whenever appropriate.
7a32fa1551 Fixes by Just: - Upped version number in about dialog - Use auto-positioning of dialogs (a sys7 feature I had never heard   of, _very_ useful).
29bfea9b76 Argument type for SetPort was wrong (WindowPtr in stead of GrafPtr).
2d7850f9ef Added FOUR_CHAR_CODE define
aa70234c6b New versions from Just.
d38dc64a8d Regenerated with FOUR_CHAR_CODE defined
cf70b8422f Mention the Mac:Contrib folder
5073b376fb Added Just's printing demo code.
4f31694d37 Document transfercmd(), ntransfercmd(), delete(), rmd(), size().
9291d271fb parse150():  Simplify RE used to parse the message a little, taking advantage 	of using re instead of regex.
8c8e814992 Add link to Anthony Baxter's enhanced version.
23916e78d0 clean target:  Remove intermediate files from creation of outline in PDF.
724473fbe5 Load the options from the pypaper.sty file before setting up the "base class" for the manual documents.
b4929a794e Paper size / font size configuration file.
8805354bbc Simplify how some options get propogated.
3af9f2514f Added libpoplib.tex to dependencies for the library reference.
a468404dda Added a section for the poplib module, contributed by Drew Csillag.
e28fb67c2c Add entry for poplib.
446898ff4a Use hex() when outputting the various checksums so the test output is the same on 32 and 64 bit machines.
a937d14898 Fred's right -- we need PyList_SET_ITEM().
7b7a2c2e11 Added new folder types
0ec0e63928 Added FOUR_CHAR_CODE define
e180d99280 Grmpf, a lot more routines have gotten a "Mac" prefix for their declaration, probably so the universal headers are useable on windows/unix too. Have to think of a more definite workaround later, for now we manually declare the old names in the *edit.py files.
6a508aef7d Use the (new) standard script #! line
dc1c970b0f This script appears to no longer be in the toolchain for Python documentation, so it has been moved to ../../Tools/scripts
507338e5ca In-line the code in range() to set the list items; there's really no need to call PyList_SetItem(v,i,w) when PyList_GET_ITEM(v,i)=w {sic} will do.
bb189dbcb0 Small corrections to comments that were cloned from aifc; moreover the description of setparams() was wrong.
1740b8d2f7 New test sample -- "Nobody expects the Spanish Inquisition!"
690119621e Purported fixes for 64-bit platforms with help from John Jorgensen
115f517f77 Tiny patch for zlib 1.1.2
e26132cf5e Move unified findfile() into test_support.py
0d27d08790 Don't override the default $ADDRESS.
d757165df9 Change the default $ADDRESS.
a9c2d7a87c Add new spares to the end of the type object struct.
a937afd363 Freeze assumes that all built-in modules are part of the Python core. This is not necessarily the case.  It is possible to create a Python binary which contains built-in extension modules.  Therefore checkextensions should be used for all unknown and builtin modules. (Sjoerd Mullender)
1abfb9c0f5 If freezing with the -O option, the optimized  bytecode files are used.  It is useful to implicitly set the -O flag in the frozen application. (Sjoerd Mullender)
df1940717d When using extention modules, relative path names that occur in the Setup file are fixed so that they will work from the freeze build directory.  However, relative path names in liner -L and -R options are not fixed in this way. (Sjoerd Mullender)
f8830d1de5 Convert recent additions to use new, "logical" markup.
5fd90684a9 Run the self-test (test.test_MimeWriter) when invoked as a script.
2ad816f47e Add test for MimeWriter module
e87ed5f6d4 Add writelines() method to Compare class.
41dc72fa1f Regenerated with FOUR_CHAR_CODE defined
b2006395b7 Added support for the horribly complex TimeRecord, so we can position movies, etc. TimeBase objects have also been slightly modified for this (for instance: the DisposeTimeBase call shouldn't be done in the __del__ routine, the timebase might belong to someone else).
7f725e4061 SetPort was missing, and the defs file needs the FOUR_CHAR_CODE define.
bbf4be2c2f Incorrect argument for PyMacBuildwide()
301b5bea3f In method & function tables, added a cast for the function pointers to keep compilers happy.
565798d493 Be less naive about null characters in an object's repr().
031a68fe5f CW Pro 3 FC8 projects. Checked in because of ColorPicker and Printing modules, mainly.
4447513e94 Filled in some more blanks, with the help of Drew Csillag.
955a2f5328 If there's no comment for an error we use the symbolic name as the error message. Not really fantastic, but "reqAborted" is better than "MacOS error -1105" at least.
cf89f6fc7d Removed unused import of addpack
bca57e60c0 Moved some code around: occasionally the SetCreatorFileType didn't work because the finder got there first (at leats, that's what I think happened).
66691ba748 Updated for Python 1.5.1: version number, preference filename, etc
d58cd630eb Added PyMac_{Get,Build}wide. These should support python longints at some point in the future.
1c4e614627 Re-generated from new (3.1) universal headers
02facaf90a Added ColorPicker and Printing modules, donated by Just. In config.c they're dependent on the WITH_TOOLBOX define.
4e126636a2 Regenerated from new (3.1) universal headers
36659fef2a Re-generated with slightly more intelligent script
0dca75229b Add (temporary) PyMac_{Build,Get}wide
4f2936e368 Add HAVE_MKTIME
ee21f418b0 Remove bogus CCSHARED for cc on IRIX 6.x.
2621637835 Add #ifdefs so Tcl_Finalize isn't referenced when it's not defined.
23cff3170e Shouldn't import addpack!
255284b42a Fix problem for the Library Reference where high-numbered sections of high-numbered chapters took too much space for the section number in the table of contents.  This makes the section number and title not overlap.
42de185a77 Added \label to subsections which didn't have one, since this module has subsections listed in the documentation index sidebar.  (Why?)
a933f6a53d Fix vonmisesvariate() -- it now returns an angle between 0 and *two* times pi.  Got rid of $math$ here and in one other place.
9a34523e19 As Tim Peters points out, ``from string import *'' should not set re to None. Also rename safe_env to _safe_env.
476412a918 cleanup():  Get rid of module index turds.
daf71fca54 Ignore the mac/ directory where latex2html spits out HTML.
a2890b0986 Make the intro section explicit, so that latex2html puts it on a separate page from the table of contents.
7984256f4d build_ps():  Fix flags to dvips.
5ccf330e4c next_optional_argument():  Don't include the square brackets in the return 	value.
4f6d6e487c Fix things.  Blame Andy Eskilsson <andy.eskilsson@telelogic.se>.
4f5155817b Mark TMPDIR correctly.
0c4d947eac Replaced addpack by handcrafted code to find the bgen stuff.
b36b83011a Removed reop
bdbdb80b0b Separate the Mac-related files from the library reference files.  The new variable isn't used yet.
1d9fb63293 Remove commented-out Mac chapter.
12f842e33e Adjust to allow both general and module indexes.
60961c561d Python HOWTO document that replaces the old Mac section from the reference manual.
b51429a145 Adjust so that it works as part of a HOWTO-based manual.
d579ed8239 Shift (re-)definition of \theindex to the document classes so that it doesn't break HOWTO documents.
300775d222 Hide \varvars from "public" interface.
08932054e9 New helper functions to help deal with parameter parsing.
64bdc24301 Code cleanup, some syntax modernization.
6b303b4bdd Signature for dir() omitted the optional argument.
de2f708299 Fix regexp for attrfind; bug reported by Lars Marius Garshol <larsga@ifi.uio.no>.
77d1fce2f6 (py-compute-indentation): Use forward-comment to skip over all whitespace and comment noise.
ac36c6403f Open wave files in binary mode.
bf88c3830e Fix the broken PDF links, really this time!
a2c2a836d7 Fix the broken PDF links, really this time!
a88d681255 Change the form of the name given to each page of the PDF from "page.%d" to "page.%dx"; this works around an acroread bug that causes targets not to be recognized if their name is a prefix of another target in the file.
d671e8fb87 Added dependency on the tools/toc2bkm.py script for the PDF files.
b8fd1f18ab Tabnanny fixes
c84cb9511b Added declarations for mac{set,get}filetype
8fa02d934c Added Sndihooks
75c5ef978b Module with hooks for sound input
a239a92e10 Reindented some of the C code
df3c6ab416 Last projects before 1.5.1
ae3407a01b Added Sndihooks module
3c4378bd9b Some patches by Drew Csillag; plus a few of my own uncommitted changes.
12d9fc94f4 Use shorter labels; using long labels creates problems on the Macintosh.
95638f5b0f Added entry for Tkdnd.py.
2f6c878a14 This commit was manufactured by cvs2svn to create tag 'r151'.
0332578a3a Oops -- Lib/Test should be Lib/test, of course!
64d036c8fe Add connect_ex to list of methods.
4b601ae381 Missing symbols reported by Andrew Loewenstern.
f61ee63a35 Update version.
e3ae5198a3 Update to use the new release number.  Will generalize in the next round.
f5013f1f0c Add RELEASE make variable; this gets the entire release # ("1.5.1").
974f295dd4 Some more new stuff.
68fede768a Added item in Misc. for getpass module.
4d2996d473 Fix version number.
7c33095b6b Typo in usage message.
ee0a63bec5 Move 'dict' struct member to end of struct.  This ensures binary compatibility for shared libraries.
fb9b7fd5ee Be nicer to systems that have neither termios nor msvcrt.
a16e2753ed The usual edits...  Updated some stuff about the mailing list.  Ready for 1.5.1 I'd say.
916d8f8733 No more threats, just list the new methods under "AST Objects".
503d8d66cc The documentation threatened it would happen -- the functions that should have been methods now are!  Still available as functions for compatibility.
9238f23c50 Two more, for beta testers who reported real bugs.
cef113c524 Don't allow unescaped newlines in doc strings.
b19e2a383c Whoops!  Add a missing 'instantiated = 1' to load_inst(); otherwise it would still try to call the class...
c4f1ca1967 Add a note that pickling is supported.
43f8f9b894 Added support for pickling ast objects.
3e7a48e0d9 Revert markup around list of display fields from the disassembler; it doesn't look at good in print, but doesn't break the HTML.
1f74016735 Support for OpenBSD :-(
3ad125e611 Fix bug in little-used markup:  don't forget to pass the source text along!
7238988657 Fixed example to load the startup file from a script (didn't test for the file's existance).
003d8da779 Typo: (and often severly limited) -- severely Typo: (but not to the tuple or list into which the item it put!) -- is put
b85fbec83b "ZeroDevisionError" --> "ZeroDivisionError"
a608febd5f Fix typo.  (What I get for trying to fix bugs at home and running conversions at work....)
ae9bc67e0e Don't append () to the name of an object attribute in the index.
6250205166 Use {methoddesc} instead of {funcdesc} for object methods.
898601bf8f Add cPickle to the list of modules in the chapter.
d6d88ffaf9 Add cStringIO to the list of modules in the chapter.
c303e67f3c The built-in exceptions are not still strings, so make no claims about them.
c94d9348ca In descriptions of Py_GetPrefix() and Py_GetExecPrefix(), make sure the "--" at the start of the configure options isn't collapsed to "-" when the HTML is generated.
1072e46263 Added a simpler, working {verbatim} support that generates legitimate HTML. (2 lines, explained by 6 lines of comments....)
b73bc31e39 Removed partially broken {verbatim} support.
ee60191d1d Lighten up tables.
17e564042d Change order of \seemodule macros at end of pickle module section.
9463de2092 Document cPickle and cStringIO.
10032ebb48 Module docstring indicated seek() isn't implemented, but it is.
fab2f34538 When the text of a table cell should be wrapped, used a "p" column.
7e9383ab59 Add a comment to indicate the methods of the StringIO are being discussed...
111c20b992 Reject empty module names -- otherwise __import__("") does something weird!
70c460c84d Remove imaplib from the undocumented list.
a38a2867d0 Include () after function name.
0d213d3497 When the text of a table cell should be wrapped, used a "p" column.
2b8c95e4ed Minor housing cleaning in HTML that gets generated.
34672dbb38 Remove over-active replace-string turds.
eb90946978 Some robustness checks in Py_ReprLeave() in the unlikely event someone has messed with the dictionary or list.
8f6b958fdb Use {memberdesc} to mark the instance attributes.
7dba8e2ab4 Hmmm... better add some \label macros for logical addressing while I'm at it.
2a37455967 It's "Lauder", not "Lauders"!
9d4b6c52c3 Update the module index support to use the changed field separator for the input file to buildindex.py.
e5cf53ad89 Formatting nits.
eb4ed15be8 Shift index entries around a little so the HTML doesn't have weird spacing.
1e0f8bfea9 Add imaplib to appropriate lists.
36751b0ed2 Remove obsolete module soundex from list of modules.
c48b772a77 Remove obsolete module rand from list of modules.
89de314cfc First cut at documentation for imaplib.  Based on original documentation by Piers Lauders.
756a9e87b1 do_env_memberdesc():  Fix argument parsing for {memberdesc} environments.
be14e69742 New revision -- sometimes it's AUTH-LOGIN, sometimes AUTH=LOGIN!
5c7e8cd267 Avoid using the obsolete rand module; and improve the randomness of the boundary chosen by choose_boudary() by using milliseconds of the timestamp.
5fb2b61c64 Set version and title to Python 1.5.1.
52f4915269 Oops,  ".\DLLs" should be in the default path now.
38d8f4e1c2 New version doesn't require REV1 capability.
c74521acc4 Oops -- remove some debug print statements!
cecadc469b Move #include <sys/param.h> to before osdefs.h (Donn Cave).
8766a7797e Comment out a label on an #endif.
fb376dee55 Use Py_Repr{Enter,Leave} to display recursive lists in finite space.
255443b720 Use Py_Repr{Enter,Leave} to display recursive dictionaries in finite space.
8661036cb8 Add implementations of Py_Repr{Enter,Leave}.
26d4ac30be Add prototypes for Py_Repr{Enter,Leave}.
730806d3d9 Make new gcc -Wall happy
1109fbca76 Make new gcc -Wall happy
bb3649e2ba Make new gcc -Wall happy
39b0f8976c Address warnings issued by the MSVC++ compiler
462a5495fb README ready for 1.5.1
cfb798e708 Delete reopmodule.c
4a7d701f00 Delete references to initreop().
63096d48fa Add HAVE_MKTIME.
9cd9fbb72a Change the example of what's in scripts/.
5d30e740f5 Delete reference to reopmodule.c.  Add comment about soundex' obsolescence.
b53dc43769 Delete this obsolete module.
204751b127 Add dict struct member and PyThreadState_GetDict() prototype.
ede0439cd8 /* An extension mechanism to store arbitrary additional per-thread state.    PyThreadState_GetDict() returns a dictionary that can be used to hold such    state; the caller should pick a unique key and store its state there.  If    PyThreadState_GetDict() returns NULL, an exception has been raised (most    likely MemoryError) and the caller should pass on the exception. */
c45cf02938 Added changes from 1.5 to 1.5.1.
07c44c7ad5 Document -x too.
560e8adef7 Translate E_INDENT to the clearest error message I can think of.
bba92ca555 Add -t option to set the Py_TabcheckFlag flag.
29d465bef7 Document -t flag.
6135df6626 Declare and use Py_TabcheckFlag here.
c095200783 Add dummy Py_VerboseFlag now that it's referenced in parsetok.c.
13aa5cedcb Jeff Epler
bd8341eeeb Catch exceptions in final self.destroy() call.
bd24eb447e We no longer check for libsun.a.
c296651e10 Add image_types() and image_names() as methods to Misc class.
a16a509dfc tabnanny stuff
ce73acf5e6 Tim's version 4, with my mods
c9ea7572e9 Set the patch level to 1.5.1.  (I'm not going to release this as a beta -- if there are bugs, I'll post a patch page and release 1.5.2 sooner.)
4d856ee652 Added Tabcheck flag.
327aff7864 Added Frozen and Tabcheck flags.
4cee3c49c2 Another easter present.
ea609c18a0 (py-toggle-shells): Added a message in the minibuf.
c542bc79c8 Support raise with no parameters.
a239880a22 Quick and extremely dirty hacks to toggle between using CPython and JPython interpreters.  This implementation may suck.
7f5013a9a9 New Java-style threading module.  The doc strings are in a separate module.
bb08066053 The usual
c6a681a57d remove C++ entries of the form Class::method
d295f120ae Make first raise argument optional
926f13a081 Add checking for inconsistent tab usage
e77a992a0d Add E_INDENT -- new error to check for bad indentation
e2bb8bb90d Tons of new names...
4f199eaa6e Threading speedup patches by Christopher Lindblad <cjl@infoseek.com>.
b5903ac9fb Another new utility: getpass() prompts for a password, with echo off. Also contains getuser(), which returns the username (not prompting though). These work on Unix and Windows!
f2da4ed48b Add $(LIBS) to the pgen link line.
007bac3b0b Added smtplib.py (thanks, Guido!).
2cb824cbf9 Don't use \samp when \code is better.
5cca42e0b7 do_cmd_lineii(), do_cmd_lineiii():  Fix markup style conversion to HTML tags for first column. 	(The endtag wasn't formed properly.)
99c185e787 Add not_ and __not__.
c3d3f9692d Add PyObject_Not().
6b529ae0c0 Remove @webchecker.pickle in the "clean" target.
45c634ecae Work around a small (& annoying) limitation of the latex2html support for \seemodule.  This is far easier than figuring out the real problem, but it works.
8a254b5967 Removed misleading comment about GNU software.  This module and the zlib library have no relationship with GNU software other than implementing some of the same algorithms and file format.  (The zlib module is more general.)
45084ed52a Added note about current status of info generation.
253328104f Many markup changes (to \regexp, mostly) Clarified text on 8-bit cleanness, complemented sets like [^5], and {m,n}   qualifier.
02a8e6b600 Update release number and date.
20ca9171c1 Don't assume that \version expands to the 3-character major.minor number; it is the full release version name ("1.5.1beta1", for instance).
29e5f5d81f When getcwd() doesn't exist or raises an exception, don't fail but fall back to using os.curdir instead; if it is fine, don't use os.curdir at all.
c09e6b1c0a Clarify that put *blocks* when the queue is full.  Add some blank lines to doc strings.
363ab1a613 Comment out the soundex section.
eeec0af307 Piers' new version (but I unfolded a few doc strings).
2de75ec245 Don't assume that \version expands to the 3-character major.minor number; it is the full release version name ("1.5.1beta1", for instance).
9da38814a3 Use the correct URL to AMK's regex-to-re HOWTO!
54c3947fbc Updated URL to AMK's regex-to-re HOWTO.
5406e7071f Added reference to AMK's HOWTO on the topic.
223395c0a0 Added imaplib.
c2c07fa10c Piers Lauder's IMAP module.
03774bb5ea Version with docstrings and some other changes, by Piers Lauder. (Adapted by Just, I believe.)
b8efda01e6 Update URL to the related HOWTO document.
bd400881dd Add section for ni back in, but comment it out.
eac469ca3d Commented out sections on obsolete & Macintosh modules.
f1b72ddf82 Reduced description of the obsolete method Stats.ignore().
3217be9395 Relocating file to Lib/lib-old.
153165ca3d Restore ni as an obsolete module.
058068d992 Nearly a complete re-write.
166abbabf9 Remove option to strip out <tt>...</tt> from index entry text; this is now left to the buildindex.py script.
ae2be7144d Correct definition of CTIME.
685fe839a9 This really needs python 1.5 now...
3f3c25fc03 Set flag to remove <tt>...</tt> markup from the index entries; it just ends up looking really bad in popular browsers, mostly due to vertical size differences between the roman and monospaced fonts.
2764dd33cf Separate sections on anydbm and dumbdbm.
8e729ec31a Caught a few more spurious \setindexsubitem macros....
5ab5503b8a Use {classdesc} and {memberdesc} where appropriate.
a3f5c32f18 Removed unnecessary \setindexsubitem.
1ce3604cfd Separate UserDict and UserList documentation into separate sections.
df0e3fcb63 Markup nit.
c708605f4f Added a reference to the discussion in Knuth's "Sorting and Searching", and noted that the original algorithm produces 4-character results rather than the 6-character results provided by this module.
41565f66b6 Data attributes of objects should not be indexed with trailing parentheses!
396b827a93 Minor markup nit.
82d493fb96 Fixed some index entries.
6b9ff7257b Added entry for wdb.
810349b685 Fix the formatting of the list of fields in the disassemble() function.
272fb3aaa4 Added poplib.
484772d472 Dave Ascher's pop client code.
71543e13db Give in to tabnanny
8053d89f7b Add usage message when no arguments.
f4b44fa6ef Tim's latest version (supports old and new tokenize modules)
5d97ebf2ac Got rid of redundant copy of telnetlib.py
986abac1ba Give in to tabnanny
36dfbcf323 Version 1.0 is official!
72dc60ca92 Untabified, for tabnanny.
e4e41062f5 Reindented without tabs and with uniform 4 space indent.
1ae297ae8b Remove some long obsolete files...
f62cf61548 Give in to tabnanny.
5810297052 Correction to vonmisesvariate() by Magnus Kessler: it should take and return something between 0 and 2*pi.  Also added a reference to the literature.
56c04b8376 Restructured the event_* calls slightly -- there's really no need to use the default root, and instead of string.split, use splitlist.
af370ea254 Move a short paragraph outside the description of ASTType.
3179fe03ca (imenu-example--python-class-regexp): Fix to recognize Module.Class in inheritance list.
3a0351cf85 Remove all uses of \sectcode; we can now use logical markup everywhere.
e7957184d2 Change \sectcode to logical markup.
fc57619811 Remove obsolete \setindexsubitem macros.
71c1e502f0 Moved some things around.
13beac1289 Removed obsolete \setindexsubitem macros.
85ea68b2a2 Added index entries.
81acc2e988 Remove obsolete \setindexsubitem macro.
61f45c7cb5 Remove obsolete \setindexsubitem macro,
b208f128b4 Added index entry.
82143348aa Remove obsolete \setindexsubitem macro.
858f787a02 Fix index entry for HTMLParser class.
41788db3e2 Logical markup.
9b28fe285d Logical markup.
e14dde2117 Fixed description of similarity between m[name] and m.getheader(name), reported by Samuel L. Bayer.
d275de985a Remove obsolete lines like this:
4bde97f190 Add fileinput section under Misc. Services.
ea2f2b9409 Use new index style for makeindex.
35ca0d69e1 Document fileinput.
a8e262b0b2 Use the new index style when running makeindex.
10ad52e8af Minor cleanliness.
0a2eb138e7 Style specification for building *.ind from *.idx.  This is needed to avoid wrapping of long lines, which tools/indfix.py doesn't understand, and needs to to handle collapsing of entries which can share a common emtry and just be short entries themselves.  We get the added benefit of nicer formatting.
bdc61b1c7b Relocating file to Lib/lib-old.
a351f89a94 Relocating file to Lib/lib-old.
f7d590c93d This was the reason a numeric array to a real power was not working.
88c6bdf042 posix->os.
8430c583da AMK's latest
07bcd99873 Start at updating the template a little bit.  There's a lot of stuff that's just not here yet.
47cfd03dff Increase space between the end of a regexp and the little right floor symbol used as a closing quote.  At AMK's request.
042ff9eb3a AMK's latest
104be4a4a7 Use %.17f to format floats/doubles
bf02fb28d9 Make sure that the message "Error in sys.exitfunc:" goes to sys.stderr and not to C's stderr.
6deac7a105 Make calls into ../PC/frozen_dllmain.c on MS_WIN32.
f015e18d9d Add primitive test for frozen package.
fe03e81aa5 Removed line of obsolete markup.
791468f731 Some clarifications of out-of-range group indexes/names
a50547e0c0 Track changes in tokenize.py
18586f4c48 Add optional argument to help().
1d5102cac1 Explicitly close rfile and wfile in StreamRequestHandler.finish() -- mostly for jpython.
a90c78b918 Differentiate between NEWLINE token (an official newline) and NL token (a newline that the grammar ignores).
fbe63de37d UnixMailbox: don't be fooled by lines that begin with "From " but otherwise don't look like headers at all... Also robustify the test code a bit.
7e07b3845b Sjoerd's latest.
0454b51282 Oops, pulled over by the tab police :-)
b5916ab065 Change by Sjoerd (with minor reformatting):   guess the mime type of a local file.
fcc6c68e11 Export MPZType -- the type of mpz objects....
61885924b1 Lots of markup consistency nits.
6251c169c6 Small nits.
8efde2197b Several minor markup nits.
9f6aec870e "alternative" is a noun, use "alternate" for the adjective.
14c198b146 Talk about some minor nits...
395e8e4860 Capitalize "Python" for consistency.
7932a6bf8c Small markup nits.
d59db4f974 Small consistency nits.
2123774287 Capitalize "Python" for consistency.
e6cedb362c New index entries.
3f1c4720b5 Use {methoddesc} as appropriate.
5dabeed4ea Index entries.
d0a40cb4cf Added comment crediting Sue Williams with this documentation section (the ACKS file should be checked....).
55e3cbd115 Fix one typo.
74810d5abb Nits.
c3486318e0 Add index entry for GzipFile class.
d678cb7a6c Logical markup.
9fee071ab6 Markup consistency.
5bfe4850cf Consistency:  Don't use module name when referring to functions defined in the same module.
2cfc835b7b Minor nits.
4e6688747c Consistency nits:
76547c5631 Minor nits.
dff21a6b93 Minor nits.
16a19c46a9 Mention the --help option to tools/mkhowto.sh.
5bd7fccef9 Minor nits.
a594bafde7 Normalized case rules in section headings.
7e9d3148d1 Capitalize "Python" for consistency.
6a79be8db8 Capitalize "Python" for consistency.
930f134fc9 Logical markup.
dd1f52b0c4 Use {seealso} environment to refer to the struct module.
5a52519a6e add_idx():  Restore message to stdout when formatting the general index.
2b8093ab96 Match python.sty a little better.
537149707b Removed an obsolete hack that's been commented out for a long time.
1191692d3d Lots of little nits.
75d92c1864 Added a __delitem__ to the Message class. (Still no __setitem__, until I get a request to add it!)
58b2bfd0bf This fixes a (minor) problem discovered by AMK when you don't want any special markup for the first column of a table using {tableii} or {tableiii}. In LaTeX, this requires using "textrm" as the formatting function, and this is needed to remove the bogus "<textrm>" that gets generated otherwise. There should probably be a more general mapping of specified markup to useful markup, but that doesn't appear needed at the moment.
3a18f3ba38 Hyphenate "built-in" for consistency.
5204b4a984 #Oops, I lost the CVS/RCS $Revision$
dc40904a32 Hyphenate "built-in" for consistency.
da70ee1fae Use methoddesc and memberdesc, as needed.
182bd2d176 Use methoddesc instead of funcdesc to describe the only method.
2351c80747 \bifuncindex:  Fix so entries combine correctly with those of the built-in 	functions section.
0a73d4db51 Removed reference to ni module.
9ac80cb5bd Removed references to ni.
b401637bd8 Markup nits, index entries.
674e0fd7a8 Be more specific about where in RFC 1421 to look, since it's not at all obvious when taking a quick look.
b789c70d05 Minor markup nits.
f14e2f8a04 Fix one remaining internal use of \code{} that could use the simpler form.
9e9c89e67c Some nits.
ac8f91ada4 Added --split for AMK; control split level of the HTML output.  Use --split 1 to create a single HTML file.
a0dbddfcc0 Markup consistency nits.
c6fa34e4d0 Markup consistency & nits.
e9625e86b8 AMK's version from the latest pypcre distribution.  This clarifies a few things and adds docs for what happens to escapes in replacement strings.
391564f10f Small markup nits, a few grammatical fixes, and a clarification of the binary mode for files under MacOS.
1a7af3959b Implemented one more special markup item.
454a4fb018 Added some comments.
92166d9a75 (py-compute-indentation): When looking at a continuation line inside an open paren, do a better job of reindenting the line.  For example:
585f733b39 Two patches for Emacs 20.2 compatibility:
b1062fc9d2 Correct dumb typo found by kjpylint (stack should be self.stack).
599174f74d Correct a definite typo ('mem' should be 'memo').
9ab75cbaab Tim Peters' program for checking whether a program's indentation is sensitive to tab size.  Uses a different strategy than tabpolice.py, but has compatible usage.
a6bb6be95f Strip argument to atol and atof to match what strop does better.
a08fabad72 A few lines were indented using spaces instead of tabs -- fix them.
117a5a8138 Return the name of the Tcl command defined by _bind().  This can optionally be passed to unbind() (or you can apss it to deletecommand()).
982d91fb51 Change $ICONSERVER to conform to the value AMK & I have discussed for this; doing this here may prove to not be such a good idea, but we'll see.
8fe533e6a0 Use the new {methoddesc} and {memberdesc} environments as appropriate.
ec56109a0a First (rough) cut at HTML index generation in Python.  Not very pretty, but easier to work with than the Perl code.
19e2ce58bf Add support for mapping internal labels used from the index.
48a16bf6b5 \tableofcontents:  Add support for some warning reduction in python.sty.
6cb71491de Add comments about several of the environments.
235e6b1428 Some cleanup.
8821ecb9cc Added note about weird sequencing of <PRE> & <dl> around {verbatim} sections.
6355bd43e5 Clarified some comments about the requirements on the TeX installation.
42b31a5536 Lots and lots and lots.....
f76abb51ef Make sure both hyphens of a long-option show up in the HTML output.
548703a1b8 The usual.
65e5399081 Don't write "if self.dict: self.dict.close()"; just write "self.dict.close()" and ignore the exception.  The "if self.dict:" part would be calculated through len(self.dict.keys()), which is very expensive for a large dictionary...
3ec38f0ee4 A few lines were indented using tabs instead of spaces -- fix them.
45e2fbc2e7 Mass check-in after untabifying all files that need it.
9ea7024754 Delete this unused relic.
7e7ca0ba17 A few lines were indented using spaces instead of tabs -- fix them.
8ca842066c A few lines were indented using spaces instead of tabs -- fix them.
fa6e254b34 Mass check-in after untabifying all files that need it.
1847d06493 Reindented with tabs only (seems fair to the Windows crowd).
07af9a7ddd Add a sleep(0.00001) call to make sure all threads run.
2830dcc15c Get rid of the Emacs cruft now that Python-mode guess the desired settings!
41360a4696 Mass check-in after untabifying all files that need it.
cd0f59ea08 Get rid of the Emacs cruft now that Python-mode guess the desired settings!
97df7f8679 Add -q option that *just* prints the filename.
70c7f48b9b Get rid of the check for -linet -- recent Sequent Dynix systems don't need this any more and apparently it screws up their configuration.
f9b99f4375 (py-postprocess-output-buffer): Return t if an exception was found, otherwise return nil.
512af04b35 (py-execute-region): Watch out for shell-command-on-region killing a zero sized output buffer.
69c70a2fd1 Support 'whence' parameter to seek().
55730316c9 Don't use the fncychap package for HOWTO documents; appendices break.  Still use them for manuals.
050be83da9 Python HOWTO template document, with lots of help from AMK.
f6b55106a7 Update.
c0b2e453ae Change uses of \pdfinfo and \pdfcatalog to use the new syntax from the latest pdftex.  (Which we have here at CNRI.)  This makes the PDF targets work again.
f558e3188e Make $MYDIR absolute -- bug reported by AMK.
ed5b3d8b3c give in to tab police
3db0e3713c Report first line with inconsistent tab usage.
031c6315e2 Check for boundary errors in [r]find -- find("x", "", 2) should return -1.
c8d36284f3 Give in to Timmy's Tedious Tab Theorem.
c457048744 Give in to the tab police.
6f73c1a2ac The Tab Police watches for possibly inconsistent indentation.
78fc3634cb Big changes by Mark Hammond to support freezing with DLLs on Windows.
11af5a4469 Mark Hammond's main program for a frozen application.
beef9e73c3 Removed all the mixed indentation face stuff.  It's not as helpful as it at first seems.  I think we've got a good idea of what to do, but it'll be a bit of work... for later.
8ca702823d (py-tab-face): => py-mixed-indentation-face
e908b6ba57 (py-in-literal, py-fast-in-literal): New functions (mostly) stolen from CC Mode.
b6c1f1f927 #minor change to eval-while-compile so that it must both find #custom.el and have an up-to-date version (i.e. one that defines #defcustom -- which Emacs 19.34's by default does not).
0d2805b771 (py-tab-face, python-font-lock-keywords): Color all tabs at the start of a line in py-tab-face to aid in seeing mixed tab/space indentation. This face defaults to the `default' face so it is unobtrusive until you `M-x customize-face' py-tab-face to something obnoxious like "Yellow".
677bedab0c Fix indent of one line in mkarg(), that got indented badly by the recent reindent!
2543769ca5 Use "/usr/bin/env perl" for the #! line, and change the -i option to:
1125488b24 build_dvi():  Make sure we run latex enough times; this now matches the # 	of times pdflatex would be run, which is correct.
240c35aac0 Subtle fix in the read() code which could cause a read broken up in several pieces to fail...
3f0666c4a2 Add obvious needed else clause to format_exception().
2e6938f167 Fix bug in islocked() -- it would always return 0.
a341fc3bf7 update while dragging defaults to 0
ee6d8a5b45 No update while dragging still tracks the arrows
96c07fefa9 Prefer clock() over times() for timer function, except on the Mac, where we use GetTicks() -- its clock() is a crock, with only 1 second accuracy, I believe.
685ef4e604 According to Tim Peters, there should be 'print' statements in one particular example.
cce1090d49 Change "\," to just "," in function signatures.  This is easier to maintain, works better with LaTeX2HTML, and allows some simplification of the python.sty macros.
c9a4438c16 Coding cleanups.
13210ed55f Get the index working at least partway again.
bd2796e972 Update....
f3aa0e0627 Revert the index stuff to work better with LaTeX2HTML.
396a7cfb94 Reverting some the index stuff to use tools/newind.py again; this works better with LaTeX2HTML.
a2be9881f0 Reverting some of the index stuff to work with LaTeX2HTML better.
af5c0fc65f Logical markup, consistency.
467950065f Added PyErr_NormalizeException
abae22fa5e Get rid of Entrywidget
627857e957 Add option for no updates on typing
70787ed8ae Add option for no updates on dragging
a114eb5bd3 Use the new PyncheOptions widget
639eea670c (py-smart-indentation): Updated docstring for new policy.
e603cb1073 Revive newind.py.  -sigh-
d98329cdf0 Logical markup.
ae25be2e4d {classdesc} environment:  Index as "Foo (class in foolib)" instead of 	"Foo (in module foolib)".  Is now independent of indexsubitem.
1a855fad30 Markup nits.
abdea226dc Adjusted an index entry.
52405c899a Added an index entry.
7bf5e0828f Use {classdesc} consistently.
c9808b3af2 Logical markup.
5f874d618f Markup nits.
ebce37087d Logical markup.
f90dbc9c87 Logical markup.
bd9ded8190 Logical markup.
434493b207 Logical markup.
a891230688 Logical markup, using {classdesc} as appropriate.
f9e1f658ed Logical markup.
2e495c93b0 Logical markup, using {classdesc} as appropriate.
be2b6d7f42 Logical markup.
ff79a21119 Logical markup.
cdea8a3c60 Logical markup.
0f51fff57e Logical markup.
8f74571596 Use a faster way to check for null bytes in the string argument for int(), long(), float().
677fc843ea As Mike Fletcher pointed out, a __deepcopy__() method should be called with the memo as an argument.
8046befce7 #(py-smart-indentation): Small fixes for clarity in the docstring.
9e9968859e (python-mode): Removed vi vi vi hack for setting the tab width from a magic comment.  Now Guido only has to worry about the northern Wisconsin Braces Freedom Fighter Militia.
55f0aabe88 example output is different
0eae830dec Typos in the docstring fixed by Detlef Lannert <lannert@uni-duesseldorf.de>
742a5116d2 (py-smart-indentation): New variable which controls the automagic setting of py-indent-offset and indent-tabs-mode.
fc16e78f3c Bring this up to date.  Some things still don't work right.
94fac130bb \regexp{}:  Rewritten to look like Freidl's book.  Too rip-off?
3b5da76182 Logical markup.
2dde74c778 Logical markup.
51375ae07b Use {classdesc} instead of {funcdesc} for HTMLParser.
6d4d1c2a25 Added support for "data" URL, by Sjoerd Mullender.
fb34c92628 Added URL for UK
844e664e9d Added a hack to deal with common practice 'uk' for United Kingdom
6ef871ce2f Logical markup.
7be8fcb42a Use \envvar{FOO} instead of \code{\$FOO}.
4e7e11abe5 Use \withsubitem{} for indexing extra-module functions.
371ecc0c1b Use \withsubitem{} for indexing functions from other modules.  This fixes things in the index.
0ee9f727c9 \withsubitem{}:  New macro.  Change indexsubitem temporarily for another 	macro.  Intended usage:
6a1eefe535 Logical markup.
a2e9818467 Logical markup.
c71585e069 Logical markup.
38d3fe012e Add LINKFORSHARED and LDLAST as in the main Makefile.
4912beb9d8 Add copyright statement.
521b8e1cd8 Use RCS revisions
c0b965b81b Updated the docstring
d2c210df62 Added reverse lookup
664b36ff59 *Sigh*
dbc879e949 Allow the user to operate the script in debugging mode (-D), which just does a "set -x".
c9f2c14d49 Somewhat more direct way of locating the file, using __FILE__.
bc8ad5bdeb Replace lists of attributes for code and frame objects with a reference to the Python Reference Manual.
fdbd51db8b Logical markup.
60ba44750f Logical markup.
295eaa84b0 Logical markup.
e42f595e5c Logical markup.
db9693ec97 Logical markup.
75aae9ad89 Logical markup.
e2e904f303 Script to format HOWTO documents.  Currently only tested on the "Using Kerberos from Python" HOWTO (this will change shortly, I hope).
db34a1e2d8 Use the location of the initialization file to augment the style-specific .perl file search path, rather than making assumptions about the current directory.
eff1f7622a clean_title():  Remove debugging prints.
ac77b79df6 clean_title():  Clean a little more carefully.  Still does funny things with 	underscores.  Might this be a fundamental PDF limitation?  Hm, could 	still be a TeX thing.
45e564dd78 In the source dist., don't include:
b30d0164bf Logical markup.
4ef3329259 Logical markup.
8aee0e0356 Add some more labels for logical addressing.
d883ca1dcb Logical markup.
816671c666 patch for re.sub bug, by AMK.
193338afeb Logical markup.
2cb1074937 Use a {datadesc} environment to describe errorcode.
92f31f1260 Logical markup.
a44d74086c Logical markup.
c4f15af7de Logical markup. small nits.
5bfac8d7fd Integrate with OptionsWindow... need to hook into Tab key
f67575d69d Integrate with OptionsWindow... not sure it should be modal
31ac518dd7 Cosmetic
520f8bd9b7 Ok, remove dependency on the obsolete tools/modindex.py.
97c73c83ed Remove \newif relating to index support; no longer needed.  Index control is now shared and located solely in python.sty.
7d20ffe245 Adjust the index inclusion for the new index support.
568113a75b Obsolete.
8bc965785e Adjust index file resetting; just remove the files.  The new index support doesn't fail if the files don't exist.
b390daf704 Adjust the index support a bit to make it easier to deal with module index.
8fcad7beb1 Don't generate a \label{} here.
2eda4ca4df Markup adjustments.
cd14a87c02 Mark the journal title.
23bc85a8a6 Correct spelling of emdash.
7ddd043191 Moved solitary "see also" paragraph into a {seealso} environment, and told why the reader should see also.
013ad9869e Cleaned up some remaining markup nits.
8fab8cf211 Logical markup.
b991f8d2e0 Some logical markup.
b55f9d3dfc Small nits.
cc444e39e5 Nits.
bccc64020e Logical markup.
0c2af2bef6 Spell emdash with three hyphens.
266b4c1506 Logical markup.
c07ae9f4d2 Some logical markup.
0fd72ee369 Logical markup.
580eb26044 Logical markup, a couple of index entries.
2c954fa411 Remove info targets from "world" and "tarballs".
473a90e831 Allow the user to specify the "biggest" section type from the command line; default is "chapter".  Use 'python toc2bkm.py -c section' to use with Python HOWTO documents.
cd05ca9762 Remove unnecessary blank line in long code sample.
1c8d0e0579 Never, NEVER try to recover a screwed up file by carving a chunk out of an RCS ,v archive!  And certainly don't check it back in without testing it.
2addd2a6da Add quotes around some variable definitions; add a "clean" target.
cef85a29f7 Adapted to the new situation.
a0e18357e7 Rearrange some stuff so that the warning for unknown modules is also issued on Windows.
31d53ed93c When writing the Windows Makefile, don't forget to strip some filenames of their output directory prefix.
6663b22198 Oops; file copy error somewhere along the way....
47e09c43fd Change the date to March 6, 1998.
1e9be5dbdd Relocating file to Doc/texinputs.
e4837a1671 Revised Makefile to handle the new directories correctly.
361ee6582a Utility to help create outline information for PDF.
1546fc3e10 Relocating file to Doc/tools.
4074896a1e Add reference to the copy_reg module in the See Also: section.
ebcb658248 Revise some of the PDF support to get at least preliminary outline support.
8f9728b8da Ignore *.bkm files.
dbe132c7ac LaTeX class for Python HOWTO documents.
6f7398b97b Relocating file to Doc/perl.
b3c9bca242 Misc. revisions to LaTeX2HTML support.
bc7101dff0 Relocated .latex2html-init to l2hinit.perl.
bc772f466c Moved & renamed to perl/l2hinit.perl
2023d38a58 Relocating file to Doc/tools.
0b0e7b5686 Got rid of the last tab character in this file.
ab045f952c Always set the __file__ attribute, so dynamic link modules are indicated.
b7da642e2e Fix typo -- -e takes a flag, -h doesn't.  Somehow the colon and the h got transposed.
60cd813810 Check for HAVE_MKTIME (if you don't have it, some tests will fail, but at least the build will now succeed).  For Sony NEWS-OS, BSD 4.3 based.
1809975a29 Added mktime to checked functions
f8b4de02a4 When we have no setvbuf(), make the file totally unbuffered using setbuf() if a buffer size of 0 or 1 byte is requested.
22ffac1b1f Don't use setvbuf unless HAVE_SETVBUF is defined.
859c797a48 Fix the URL for the regex-to-re HOWTO.
8a6dba3562 Clear class_map in constructor so that when it later detects an error and the destructor is called early, it doesn't DECREF garbage.
88b02cf346 Use a better way to bind the checkext instance variable to a check button widget, not involving a __getattr__() method but a callback on the widget.
2135117542 Oops, I *thoughT* I had seen a better address for Andrew....
8b8eae3e68 Updated URL & email addresses related to the PCT.
2c0ef4d625 Corrected citation markup in first paragraph.
55a7cf3ee7 Update documentation release date.
c113745498 For verbatim text, don't bounce down a size.
56896dd5bb Setting LINKFORSHARED for IRIX was a mistake.
aa54e2db84 Move the change to ending the abstract from python.sty to manual.cls; it is not appropriate for the howto document class.
e61d7af4db latex-$(VERSION).tar.gz, tarlatex:  Create the source distribution.
2888bf6cb9 Build a tarball that extracts to Python-$VERSION/Doc/ instead of Doc/, at Guido's suggestion.
2b5ca00305 Some changes because gcc on SGI doesn't support '-all'
e0394259b0 Unfold some lines that were previously folded but don't need to be now we're reindented.
541e783664 Reindented, removed tabs.
3c51cf2b69 Oops, bug omission: also scan internal code objects for imports!
912a14c028 Reindented, removed tabs.
1e07403bbf Some nits...
a5568d349b Support for frozen packages, matching the revamped Tools/freeze. Frozen packages are indicated by a negative size (the code string is the __import__.py file).  A frozen package module has its __path__ set to a string, the package name.
75dc4969ab Added support for packages. We have a whole new module finder that uses the actual Python parser and scans the bytecode for IMPORT_NAME and IMPORT_FROM. This requires some support in import.c (that hasn't been checked in). New command line options for this: -d, -q, -m.
3455edcbc8 Create the module index only if a conditional is true.
54b03b85f7 Define a new conditional, use this to control creation of module index data file.
28f1391051 Improve separation of document class and python semantic constructs.  This will allow us to have a class of smaller documents as well.
f888350dec Untested changes to make the '-s windows' option work on Windows.
c7e76c885b Remove item on migration to LaTeX2e document classes.  Done.
85551a38f3 tarballs:  Ok, we do support info for the moment, so add that to the tarballs 	target.
b1cd7710ef pdf-$(VERSION).tar.gz:  If ref/ref.pdf exists, include it in the tarball 	along with the others.
71472a5f20 Update URL to get Perl.  (Anyone want to re-write LaTeX2HTML in Python? ;)
cefcb33d4e Oops, remove some debugging prints.
b98cd39e20 changeit():  Added support for \deprecated{}.
34d6f5b0be Preliminary LaTeX2HTML 98.1p1 support.  Includes patch from Ross Moore to get some funky quoting of ']' in \item[...] to work right without having to do really ugly things to the documents themselves.
2da947af87 Comment out the attempt to get index-related stuff processed in the right order.  LaTeX2HTML just doesn't do things the same way as LaTeX, and this wasn't the fix.
3fe985fc28 Simplify some of the escaping around ']' in \item[...] markup in light of a fix to LaTeX2HTML from Ross Moore.  Yeah!
12577abe2e For each of the l2h??? targets, remove the sed hack that rips out a comma; it no longer appears to be needed.
dcb5e7f389 Of course, I shouldn't have used lseek() to find out the file's position in new_buffersize(); the correct function to use is ftell(). Thanks to Ben Jackson.
d65911b3f3 Oops -- overuse of dabbrev-expand introduced a strange bug, where instead of 'locals' I was passing 'lock_import' to import_module_ex().
986c100735 Perish Evil Revelry and Lamentation.
75acc9ca1c Add a single Python-wide (!) lock on import.  Only one thread at a time can be in PyImport_ImportModuleEx().  Recursive calls from the same thread are okay.
7853570651 Raise ValueError: "unconvertible time" when ctime() returns NULL, instead of dumping core.
1aca4d803d Doc strings added by Mitch Chapman.
3e79c4492e Doc strings added by Mitch Chapman.
49d9b620a1 Obsolete.
bfc49e8c75 Doc strings added by Mitch Chapman. Also got rid of some inconsistent change log comments near the top.
6659c30b67 Convert LaTeX support to create a new class of documents.  HTML generation now requires LaTeX2HTML 98.1p1 or newer (& and is still in progress).
53525379da Logical markup.
5c1d2297ea Instead of 'import mac', use 'import os' -- this way, the path syntax manipulation routines can be used on non-Mac platforms (e.g. to manipulate pathnames in a Mac specific archive).
69f65801ab Misc changes for AIX: install the python.exp file, and properly use $(srcdir).
34eefe59f2 Overhaul.
40e72f7fbd Fix typo.
4ad89bfe68 Nit for \refexmodindex{} (reference to extension module).
791f2ae1fe Simplify the parameters passed to node2label.pl.
d7bb3032c1 Marked reference to the Python Library Reference with \emph{}.
fcf275e0be Script to create a source distribution.  See comments at top.
f611d37647 Ignore tarballs.
74a43470b1 Looks like mention of http://quest.jpl.nasa.gov/zlib/ got added but not checked in, so i'm doing it.
9e43adbe78 Initialize adlist variable in getrouteaddr(), so an illegal address doesn't cause a traceback.
9bdc436aaa Added msvcrt.
1301f2bc18 __file__ now sometimes refers to the .pyc file
a4f0309282 Added WEGetTabSize and WESetTabSize, at Just's request
f7cfb9a7a7 &replace_verbatim, &replace_verbatim_hook:  Clean up a little, avoid long lines.
d8c5b8c90f Typo (coestring -> codestring) discovered by Mark Hammond.
0829c754bb Fix the handling of errors in Py_FlushLine() in a few places. (Basically, the error is cleared...  Like almost everywhere else...)
10026de6a3 Make the title page include all the interesting information.
ec9200a2fe &do_cmd_deprecated:  New function.
05073e99ab Update.
92e31944f4 Deprecate the read() and write() methods.
26c73b7841 Added semi-structured support for feature deprecation.
f9fd4e8828 Put all the indexsubitem stuff together.
7186783f56 Make table column headings bold.
8a13525274 Updates by AMK.
4f56f2d646 When "declaring" a module using \*modindex{}, and * doesn't start with "ref", set up the indexsubitem to "(in module #1)" automatically.  This reduces the amount of markup needed in the module docs and, more importantly, makes it o.k. to leave out in simple sections.  \setindexsubitem{} can still be used to change or reset it.
13452644d5 Sjoerd writes: When a multipart message is incomplete, mimify crashes.
8fa5eb8784 Logical markup.
c865eb0587 Nit to prevent empty node in formatted version.
e65bb4e914 Reformulate how the info stuff is ignored.
4f4e920889 Use a Python script to create "empty" indexes.  This solves Guido's corrupted file problem and avoids the shell escape interpretation portability problem.  ;-(  See comments at top of newind.py for an explanation.
bdab730cf3 Update....
f39ed67fa2 Added \label{}s for logical addressing.
6c2176eea7 Added \label{}s for logical addressing.
e817930a7b Adjusted to work with the newer version of LaTeX2HTML as well.
3da06a69b9 Marked references to the other manuals as \emph{} in the abstract.
6e73af723c New version of tb_lineno(), this time *not* using try-except, to avoid disturbing the current exception, and returning tb.tb_lineno, which is the line number of thr traceback, rather than the current line number. By Jim Hugunin.
2474d68548 Fix up description of 'S' format; as Dave Ascher pointed out, it was ungrammatical to the point of saying the opposite of what it should say.
74a11e59a2 Do a little bit more work on a table-driven basis.  A little cleanup.
20ee206500 Add support for some of the newer commands, a little cleanup.
46c86bbca9 A working version of the 'args' command (it prints the current values of the variables known to hold arguments, but that's as close as I can get, and generally it's close enough).
d151d34ebd Add test for core dump -- make sure it doesn't come back!
c88aa3594f &do_cmd_bcode, &do_cmd_ecode:  Removed; no longer used.
044b9dc1d7 Add back some safeguards on the index elements that were lost in the last patch.  Dave Ascher found a case that dumps core without these:
2f32fbba34 (py-execute-region): Simplified calculation of temporary file name. When running synchronously in a subproc buffer, be sure to pop-to-buffer so the output is visible.
6c6db0a073 (py-temp-directory): Minor docstring nit.
7266496b00 Tweak the tb_lineno() function to be compatible with JPython, which has no line number table etc.
50b3eb6a9e (py-master-file): Fixed some typos in the docstring.
628f59814e Make sure the ']' in the content of the \item[] isn't used as the ending ']'.
52b38b795b Support for sound input added. The interface is even worse than the sound-output interface, so this needs a Python wrapper shortly.
e742a82067 Regenerated because of confusion with Style/StyleParameter and Char/CharParameter
d6b6d88505 Regerated: Style and StyleParameter are different beasts
bfb77a07cb Oops, this wasn't checked in yet: part of the AE structure for the new universal headers.
0e4033a680 Module to use Mac serial port as a communication link
0aa9782d17 Helper routines to create standalone Python applications.
f7d8f45414 Hack to get at string buffer address changed
0db61d163d Helper file for version-checking
a2139fef94 Added (minimal) documentation on how to build standalone applications with Python.
b92dce38e7 PyFile_FromFile() description:  make sure the closing brace for the arguments 	comes after the arguments are complete.
540e13dd1e Derive the name of the modules .ind from the jobname.
888dfa90f3 Change quoting of the "echo" commands yet again.... why can't shells agree?
9cf4bbd630 Make this work better with a4 paper.
21df8f5dc4 Typo: baseWidht -> baseWidth.
d10d0faaa5 Logical markup.
eb9b83104a Add support for hyperref package.  This builds the PDF outline, makes the ToC and index "hot", etc.
4d3b2a2717 clean:  Remove *.out (hyperref's internal files for building outlines for PDF).
f6dabaa57d Ignore hyperref's *.out files (used in building outlines for PDF).
906f7ea429 Change quoting a little bit to avoid problems building it at CNRI.
78f6aac73e Clean up some stuff in the {seealso} at the end.  This avoids a little nit (which causes processing to fail) when using the LaTeX hyperref package.
557f446618 Patches from Jack for new Apple headers
a705da7aa0 Marked the unmarked AttributeError.  (AMK)
71f894ad56 "streans" --> "streams"	(AMK)
eb72a275b4 Add a period to "Written by James Roskind"
5ad78f39e7 Changed way *.ind are forced to exist; the files are now reset to contain an empty index instead of touched.  Note that for modindex.ind, this also includes "\label{modindex}" so that the modindex.py script doesn't change the set of labels in the document.
d028ca989a Fixed and extended the example; the original example contained some bogus code.
0e13da904c Add slightly more explicit warning about running "make clean" when changing the --with-thread option.  I'm doubtful this will help though...
3ffb715032 Added two subsections with extra hints and details, even for extensions and embedding programs.
1a7eae919a Adapt to new webchecker structure.  Due to better structure of getpage(), much less duplicate code is needed -- we only need to override readhtml().
00756bd4a6 Major overhaul.  Don't use global variable (e.g. verbose); use instance variables.  Make all global functions methods, for easy overriding.  Restructure getpage() for easy overriding.  Add save_pickle() method and load_pickle() global function to make it easier for other programs to emulate the toplevel interface.
1ee492e5d4 The list of module descriptions should be a {description} environment, not {itemize}!
ed3515d541 Removed two items, correct one spelling error.
d0f432b840 A bug in PCRE could cause core dumps in patterns such as '((a)*)*'. Andrew Kuchling posted a fix to the string-sig.
ff170fbbb5 Default button on main window wasn't set correctly
73c804a3cd Added some debug prints (if enabled by setting DEBUG)
8554e302a5 BuildApplet will now also update old applets
ebe914af7a Current ("1.5b4") projects, with new UH toolbox modules and such
5e302dbfdf USE_PRECOMPILED_HEADERS renamed to MSL_USE_PRECOMPILED_HEADERS
efaada75e4 - Universal Headers 3 mods - Started on menubar-restore code (but it still doesn't work 100%)
21f96872f2 Regenerated from Universal Headers 3.0.1. Some new calls are blacklisted, because they are not available in classic 68k programs, and bgen doesn't have a way to put #ifdef/#endif in the generated code. For now we only implement calls that work on all three models.
cbe6a53d1f Fixed double-dispose of splash() dialog
2369a98eb9 Updated for Waste 1.3
40bd770690 Add fstat() if using GUSI
c2952bcbb2 Universal Headers 3
1b5b37f616 Updated to Universal Headers 3 constant names
5e58bcdb7a Regenerated from Universal Headers 3.0.1 (which are changed substantially from previous releases)
7c2fddf423 Updated to Waste 1.3
7b56aad2e1 Break circular reference on menus upon cleanup
64da169f43 Added CHECK_IMPORT_CASE Added HAVE_HYPOT, except for 68k (where you get 10-byte-float hypot, sigh...)
dee6d02736 Removed incorrect weMonoStyled from initialization
0188172559 Fixed bug in explanation of how to run test.autotest, and warned for out-of-memory condition
5c19c7bade Tell TeX about a pathological hyphenation case (BaseHTTPRequestHandler).
2c8aa650a8 Added \label{}s for logical addressing.
d67e12e65c Added \label{}s for logical addressing.
7baf3d4ea7 Fixed typo reported by Vladimir Marangozov <Vladimir.Marangozov@imag.fr>.
f7f2e70fd4 Don't ignore makeinfo errors.
9c7c6bec98 Clean up name->name conversion a little, *make sure it happens in all the right places*!
414f261166 Revert to the old (indented) form of @DGUX_IS_BROKEN@.
357428567c Different way to suppores the DGUX rule
64a1090d1b Change default RCS bin directory to /usr/local/bin/.
1c0d31565d Delete the 'exit' command from the Tcl interpreter -- it would allow users to exit Python without the normal precautions.  (The can do this using os._exit() anyway, but at least that's documented.)
0001a11986 Fix bug in trace_vdelete(); should use master's delete command.
2fc4d581ba Added debug statements to report data actually sent and received on the socket.
b1908846af Fix for literal null bytes -- these must be replaced by the four characters \, 0, 0, 0.
72c2e1b56e Fixed a bug in the gauss() function.  The bug was reported by Mike Miller, who complained that its kurtosis was bad, and then fixed by Lambert Meertens (author of the original algorithm) who discovered that the mathematical analysis leading to his solution was wrong, and provided a corrected version.  Mike then tested the fix and reported that the kurtosis was now good.
9824509d3e Add rmd() (remove directory command); fix comment in parse257.
0d530cedd7 Faster implementation of normcase (using string.lower( string.replace(...)) instead of a for loop).
505d80b39d Jeff Kunce writes (and he is right):
ef146222db Revise comment about the {fulllineitems} environment to be accurate.
42a9744d5f Fix some outdated comments (mostly by removing a large comment block that was only causing confusing).  Add free(userpath) and free(machinepath) statements to prevent some leaks.
6eb1f6b251 Improve support for logical node names.
f4aeb84bc6 Enable CHECK_IMPORT_CASE on Win32.
0cf0cfbaa9 Adjusted \label{} for *consistent* logical addressing.
05f9dce34f Moved clear_carefully() to _PyModule_Clear() in moduleobject.c (modified) and use that.
bd36dbaaa5 Make backup copies of stdin, stdout, stderr as __stdin__, __stdout__, __stderr__.  These will be used by the import cleanup.
f1dc0615e9 Add internal routine _PyModule_Clear(), which does approximately what clear_carefully() used to do in import.c.  Differences: leave only __builtins__ alone in the 2nd pass; and don't clear the dictionary (on the theory that as long as there are references left to the dictionary, those might be destructors that might expect __builtins__ to be alive when they run; and __builtins__ can't normally be part of a cycle).
c83db33781 Added \label{} for logical addressing.
bde6ff7984 Vladimir Marangozov' performance hack: copy f_builtins from ancestor if the globals are the same.
3da3fcef96 Check ferror(), not errno, for fread() error.
9168328572 Add missing files to $(LIBFILES).
c3e4549012 Added \label{} for logical addressing.
83efb54562 Added \label{} for logical addressing.
af9b6e6607 Added itemized list of Macintosh modules, similar to the other chapters.
cea0e7350d Added \label{} for logical addressing.
83c1a39c4b Separate chapter and section.
baa04a1c77 Make sure the general index and about nodes get labels assigned, so they get real names instead of node#.html names.
1aabe5e4d1 Separate binhex and binuu documentation from binascii.  Support better module addressing in HTML.
05ce570e8b Remove debugging print.
1f0fdde4fb Bring date into line with the last documentation release.
526ebb4d97 Work on a temporary file, not the input file.
a799835460 Revised some targets to make better use of make "special" variables, to avoid repeating file names.
ef058037a5 Support environments {fulllineitems} and {classdesc}, more of the new logical markup.
c92740708d Adjust grouping for the "b(reak)" command syntax description.  This is required to get the info generation back in operation, yet again.
20e01966f5 Logical markup.
ea8006a865 \nodename{} must immediately follow \chapter{} to be handled correctly; adding the \label{} broke that.
75bfb0f7bb {fulllineitems} is now an environment; use it as such.
802a202d0d Logical markup.
fb5e54d497 Mostly LaTeX style cleanup.
c02fbe52b2 breakable_re:  Fix the RE so that module definition entries don't prevent 	combining.
a73033fcc2 Feature added by Bill van Melle: when no timezone is present, assume local time -- that's better than failure.
ce0e175554 &do_cmd_url, &do_cmd_email:  Adjust to use a font similar to that used in the printed 	representation.
026d9626df Consistent spelling: "time zone" -> "timezone".
4186cd3df2 Add named destinations for \label{} in the PDF.
8ff4b8b05b Add new files from the Mac user interface breakup.
b4efb6c8cb Separate Mac user interface modules into separate files, to better support bookmarkable module sections in the HTML.
2e7a32046b rrggbb_to_triplet(), triplet_to_rrggbb(): Improvements given by GvR
4435d5a8d8 Very modest improvements
49c5b0d1be Get rid of commented out, slower versions
4c2fab51ed Implementation using TCLPROC loaded into the Tcl interpreter
aeca79b0f6 Small patches to the DJGPP version of check_case().
9caa110141 assure a consistent assignment for nodes with multiple labels
b866020f66 Added a number of items....
dd94676865 Added libsymbol.tex, libtoken.tex to dependencies for the libref.
b0df567897 Separate the parse, symbol, and token documentation into separate files.
710c035c05 Added \label{} for logical addressing.
31ecd50d02 Added \label{} for logical addressing.
af0bfbee46 Added \label{} for logical addressing.
1f3ab1cb6c Added \label{} for logical addressing.
55fca54ebb Added \label{} for logical addressing.
12918af83e Added \label{} for logical addressing.
ddf03bf8e1 Added \label{} for logical addressing.
9acafa8bb5 Don't make backups.
0c17d661e0 \url{}:  For pdflatex, make the link active & make it blue.  If anyone figures 	out how to make the border go away completely, please let me know!
1931c0c961 Add normpath().  Clarify normcase().  (Note -- this doc section probably needs more work, describing new functions and the differences between unix/mac/win.
daa2d5d4ea Patch HREFs in html files, replacing nodeXXX.html with label.html.
16a0bc278e (1) Change normpath() to *not* also call normcase().
8cf94e608e Add mktime_tz().  Add () to a function reference in parsedate_tz().
00455b77a6 Fix sign reversal in mktime_tz discovered by Bill van Melle.
d7300f8f56 __modified(): Make sure `rgbs' is a tuple
f67a50c2e1 Several optimizations:
8d3e5ee552 Cache conversions from triplets to rrggbb's and vice versa.  Wasteful on space, but improves performance.  Also use map to calculate triplet_to_pmwrgb().
a219e7976f main():  Include a \label{modindex} in the output so latex won't let us re-use 	the name elsewhere.  This is useful for the logical filenames project, 	since the "modindex" label is hardcoded into .latex2html-init.
45a40930e7 &do_cmd_textohtmlmoduleindex:  Get the modindex key added to the label->node 	association.
57b5e42c0c Added \label{} for logical addressing.
552ac1795a Added about dialog
e2f194b57d Use \manpage{} markup for referencing a UNIX man page.
8ecc705ba4 Added comment explaining the only warning produced by makeindex, since there doesn't appear to be a way to fix that's reasonable.
326e19700f Remove Macintosh ligatures item.  Solution:  Update your Times fonts.
81f4b663b4 Started a TODO list with the latest bug reports.
5fd242b085 Clarified comment about the PS generation when using the all-pdf target.
30d17825ac Add magic to make PDF generation use maximal compression.
ddae414cb5 Added all-formats target:  use this to get both PDF and PS files; using the "alternate" rules for PDF generation doesn't ensure the PS files get generated since distiller isn't used.
5c4e648731 Updated date for interim documentation release.
5374045271 If generating PDF, include the author and title information in acroread's "File->General Info" dialog.
e8b46132e2 Massive changes.  Fewer warnings from the Python Library Reference.  Still messy, but the thing seems to be working without bombing completely today. Formatting lib.texi with TeX doesn't seem to do too badly, either!
bc6893062a Added chip selection stuff, strip label
93737b2da8 Added method to set selected color to nearest.
7154d382c3 Update indexsubitem for file attributes correctly.
a200faac55 \nodename{} must appear immediately after \section{} for the info conversion.
06e1664c77 Indent {verbatim} environments like in the printed version.
76183c0ed8 Move optional package inclusions to the top, to make them easier to find. Code elsewhere in this file tests for the inclusion of the package and does not need to be uncommented.  Comments explain what they do and how to disable them.
9ac9a26f08 Oh, well, various miscellaneous changes.
54758fa8ca Swap two statements in the dedent check loop.  This makes absolutely no difference, but avoids triggering an optimizer bug in the AIX compiler where the loop unrolling does the wrong thing...
fac431e7d5 NNTP.xgtitle() description:  Add a missing ")" from the response value 	description.
009ab92c12 Made the area for wildcards in the description wider, so we don't invade the left margin.
75fc045bf5 Fixed formatting of the program name for crypt.
ad51192a4f In the example file name, use the current Python version, not a hardcoded value.
2705e801d9 For the lists which describe the regular expression syntax, increase the width available so we don't run into the left page margin.
b0f77d65db Use \version to get the current Python version number, where possible.  This can only be done in the running text, and not in {verbatim} environments.
7506298dfb Mark up filename extensions consistently.
3b26eeddea Added rule to generate the PDF format using pdflatex.  Commented out since this is still experimental software.  See the comment.
35685240a9 Fixed the bug in searching for triple quotes -- change the 'quote2' variable from a pointer to an index, so a realloc() of the buffer won't disturb it.  Problem found by Vladimir Marangozov.
9d20ac36a9 Removed various "(New in 1.5a?!)" constructs.  Other notes pertaining to versioning remain intact.
70d289d04b Break up some long lines in the generated header & footer.
358473c1a2 Andrew Kuchling writes:
1aedbd8b0a "--" --> "---" in two places.
4de05a90be Place C typedef for Py_complex after brief description, to be more consistent with the other example of a structure description (struct _frozen).
53fb7723ee Added index enties for the Python built-in functions, where appropriate.
e058b4f124 Lots of nitty-gritty stuff:
f1a4150b70 Make sure indexes begin on odd-numbered pages.
36123aae0b Removed condition.py -- it was just sync.py without the mrsw lock and without 'condition' allocating a lock by default
4d1b3b921d Added DJGPP version of check_case(), by Pit Scrorpion (Hans Nowak).
b666c15c4a Normalization of markup.
6e99adb1c9 Don't capitalize identifiers at the beginning of the sentence; re-write to place them elsewhere so they get the right capitalization.
01dbb88831 Fix some markup so that the right characters are printed.
4a1efb63a9 Capitalize subsection title.
ab875b9a32 Make one paragraph wrap a little better.
a19bb9bbcf Capitalize first word in sentences, use periods at end.
86b5dcec86 Change {datadesc} environments with empty descriptions to \dataline{}s; this removes extra vertical space from the list of names, and makes the display more similar to that used in the socket module, where several constants share a description.
fc931ecf92 In description of sound_similar(), break up the markup for long \code{} at each embedded space, so that the words will wrap.  This keeps it from being too ugly.
2e965add30 __validate(): test for None-age, not not-ness
35ae864ab7 get arrow movement, and text updating.  also outlining of highlight
79a7879318 fixed the generators
2662e15f58 triplet_to_pmwrgb(): New function
315b5d8a7f In description of __import__, second paragraph, break up the markup for long \code{} at each embedded space, so that the words will wrap.  This keeps it from running off the side of the page, and is only slightly weird.
83bd081920 Minor stuff:
0980bd9233 Add case checking feature on import.
4c6896304b Fix weirdness with single-page table of contents, reported by Guido.
e60142f2c1 Adding output of test_xmllib.py
2549249f79 &do_env_datadescni, &do_env_funcdescni:  New functions.  These support the non-indexing variety 	of the {datadesc} and {funcdesc} environments.
fb74a463ad Add "Pretty Good Privacy" as well as "PGP" to the index.
c9c456ef69 In add_label_data() description, use "\samp{}" instead of "``\code{...}''" to indicate the interpreted letters from the format string.
7f6e2c45ec Use "\samp{...}" instead of "``\code{...}''" when showing markup fragments in the running text.
b441eb84d3 Use "\samp{...}" instead of "``\code{...}''" when showing markup fragments in the running text.
aebc6f399e Two new environments:  datadescni and funcdescni.  These are similar to datadesc and funcdesc, but don't add entries to the index.
00dcfb2bc3 &get_indexsubitem:  This now has a chance of working, thanks to:
8842e867af Remove \bcode / \ecode everywhere.
1e11a5c117 Remove \bcode / \ecode everywhere.
2a4646c660 Remove obsolete pagenumbering / pagestyle cruft.
1947991c2f Remove all \bcode / \ecode cruft; this is no longer needed.  See previous checkin of myformat.sty.
dc8af0acc1 Lots of stuff:
cffaebb621 parse_line():  Strip whitespace from the module name.
fe82acc3b1 Fixed typo in docstring:  "__ version__" --> "__version__"
6eab2fb0f1 Clean up some of the definitions related to info generation.
8a666e7c56 Fix a horrible race condition -- various routines were storing the most recently opened URL in self.openedurl of the URLopener instance. This doesn't really work if multiple threads share the same opener instance!
e5bc49785c "ASCII" --> "\ASCII{}"
04cf4dcf58 Added tarpdf target.
e5bf8b2c79 Reorganized a bit.  No changed content.
f44617d298 For sections describing the "Foo Protocol", consistently use the capitalized "Protocol" and not "protocol".
faa1afe2d7 Py_Exit(status) calls exit(status), not exit(0).
f7e4793660 fixed initial color
4b0d67d592 typo
29fe4ddd20 Added color strip widgets
9d882bc4de Initial revision
f64b4054af (py-compute-indentation): Several changes made to improve navigation over and around triple-quoted strings:
da62398139 Correct description of BUILD_SLICE.
63221124c0 Comment out the times package in the distributed version.
dd1f6cc402 Mark opcode arguments \var{} in the running text.
8a72a7e344 Use new \authoraddress{}; author's name and address are now separate.
71c1ef34bf Remove second index entry for UserList.
06f169bb7f \rfcindex{}:  Removed; no longer needed.
0e823d2abd New file.  Written by Ulf A. Lindgren <lindgren@ae.chalmers.se>; we have permission to distribute this without modifications.  This is the latest version, directly from Ulf.
692b87db15 Added \nodename; added index entry for UserList.
f6a7b443c2 Added entries for stat, commands modules.
6d659b3e51 Added entries for re, soundex modules.
38e0df330b Some subtleties suggested by Tamito Kajiyama, including an added \nodename macro for a section with a very underscriptive title.
f5370f4019 Turn the space in [\^ ...] into a hard space: [\^\ ...].
1c974db134 Split UserDict and UserList on two separate lines; added entries for modules symbol and token.
ee833cca7b Don't break a long line at an unpleasant point.
8b0927eddc Added missing entry for cmath.
c57aff20e3 Replace $math$ with \code{}.
c4452fd08f Swap ni and imp (so they are in the same order as their sections are).
34122fa99c Remove a spurious space from the title.
ed68854b40 "lists objects" --> "list objects"  (Section "More on Lists".)
8d486b1779 In the appendix, all sections were marked as subsections, and so had section numbers "A.0.#".  Fixed.
eab81a9247 Better conversion of command line given initial color
55d3ffa3c2 new interface to find_byname()
eb9b8af8fc __init__(): simplify, use tuple as key to __byrgb, lowercase __byname key.
37400e8943 Better dimensions
a6f591ac6b Interface changes, delegate chaining, type in widget addition
f4562a7a0a Simplification of conversion routines
4a445c689c #Layout looks good, as does validation, and delegate chaining
5d8f0edc33 Add copyright.tex and boilerplate.tex to the common dependencies for .dvi files.
a28eb3a8cb Mark the URL "ftp://ftp.python.org" with \url{}.
e32bf6ead2 Added PyImport_ExecCodeModuleEx(), which adds an extra parameter to pass it the true file.  This is used to set __file__ properly, instead of believing what the code object carries with it.  (If the pointer is NULL, the code object's co_filename is still used.)
fccb68ef2a Added PyImport_ExecCodeModuleEx(), which adds an extra parameter to pass it the true file.
4254363f25 &do_cmd_rfc:  New function.  Handles \rfc{}.
526467ce0a Removed all references to the \rfcindex{} macro; now only \rfc{} is used.
a94d21f44e Minor performance nits.
2e6c13f150 Initial revision
4be00713b8 Include indfix.py script in lib.dvi's processing.
dd244a0b9e Script to fix up the Library Reference index so it's less ugly.  The docstring:
1624a507e6 Oops, missed a \POSIX{} in an index entry.
88223904c8 Add some index entries; switch to logical markup.
65b32f7f74 Consistently use \POSIX{} to denote POSIX.  There were at least two different ways to do it previously (not counting module names).
41785fb864 Do the right magic to make \ABC{} get sorted correctly in the index.
19b97b13fa Do the right magic to make \UNIX{} get sorted correctly in the index.
c58912426e Use the new RFC macros wherever RFCs are referenced by number.  No other changes.
b16166e56f Add macros to insert RFC references much like the \manpage{} macro.  Also a macro to insert an RFC index reference.
8083c176a3 Add a note about rounding up of readlines()' sizehint to 8K.
6e91c6a344 Document getrefcount().
b37a395231 \itembreak, \itemjoin:	Remove unused macros.
1ad1b3f911 Forgot to return NULL in joinfields() when a type error was detected in one of the sequence items.
64608cfb86 Updated URL for zlib.
07e9fbf6b9 Register Tcl_Finalize as a Python exit handler.
40769dd073 Don't store the exception info from an unhandled exception in a thread in sys.last_*; it prevents proper calling of destructors of local variables.
919b83d522 Set Py_FrozenFlag, to suppress error messages from getpath.c.
131c92c069 - Use Py_GetPythonHome() instead of getenv("PYTHONHOME").
66d4b90791 - Add Py_GetPythonHome() and Py_SetPythonHome(), intended to allow embedders to force a different PYTHONHOME.
95c745b5fc - Add Py_FrozenFlag, intended to suppress error messages fron getpath.c in frozen binaries.
a61691e4e9 Ehm, three unrelated changes.
31c4ed75fc Remove commented-out \itembreak.
c660233cfb Update two of the \indexsubitem values to use singular rather than plural form of "variable": each individual variable should be identified as a single variable and not a collection in the index.
d76732918a Added rmtree(), to recursively remove a directory tree. Code by David Ascher (docstring by me).
a0fec2b5df Two more refinements of the cleanup process.
8ee4a60c70 (py-scroll-process-buffer): Default value changed to nil to act more like default shell-mode behavior.
8e1e68de49 Add ref to errno module, and change ref to posix.error to os.error.
f499e09f94 Add ref to errno module.
f1b3e89800 (py-parse-state): When looking for landing inside triple-quoted string, don't check for indentation at column zero.  This will falsely hit a line inside a docstring that starts at column zero but ends in a colon.
8f972b762a (py-python-command-args): New variable, allows user to customize the arguments past to py-python-command when invoking the Python shell.
afcd589027 Retract the statement that all functions called by Python (even method defs) need to be declared extern "C" -- it seems to have no basis in truth (any more?).
03710d2a40 Two suggested features by Sjoerd:
c5d8fed261 (1) Use matchobj.groups(), not matchbj.group() to get all groups.
c213078e1e Fixed bitmaps; added include files and libs; moved DLLs into their own directory (and added it to default path); install zlib.dll in SYS32; fixed location of help root.
6b7fc6f267 Add *.pdf files to the clobber target (same target as *.ps).
baf700f398 Tell CVS to ignore PDF files.
b6e5032d9c Added description of "D" format for PyArg_ParseTuple(), including example use with function name provided as well.
126d840d1a Use implicit rules to perform DVI->PS and PS->PDF conversions.  PDF conversion requires "distill" from a FrameMaker installation.  ;-)  Would probably need to be different for Windows/Mac.
b19274704f \modindex{}:  New macro; index module without declaring it "built-in" or 	"standard".  This is mostly for documentation of modules outside the 	standard library.
8aad4c80b3 Added missing "{" for "\code <?stuff?>}".
48b1cdea45 Fix typo in format for strftime() used by cookie code.
ad37e9e77d Clarify that capwords() removes leading/trailing whitespace.
f7c1e5a6a3 Moved toplevel widget to PyncheWidget.py
fefbf79ea4 Initial revision
9f4d73a9cf BadColor: new exception class
bfbe67f47f Better implementation of nearest().  Not faster, but better
2406b1d40a Initial revision
b6db1b94c5 mered Greg's suggestions, added docstring
7080a7f69e Initial revision
c45c2f3dc1 Add S_ISBLK().
c9aef03af4 Make this test work when imported from the interpreter instead of run from regrtest.py (it still works there too, of course).
fc40a8316a Sez The Dragon: 	Ok, I fixed the quotes, along with a bug or two. 	Also added another exception.
bbe323e52c SMTP client by The Dragon De Monsyne <dragondm@integral.org>.
02505e4850 New version of xmllib from Sjoerd. The main incompatibility is that the error reporting method is now called as  parser.syntax_error(msg) instead of  parser.syntax_error(lineno, msg)
44f5c75f43 Add Piet van Oostrum's name to the comments.
dd918a990a Add simple Unix socket example by Piet van Oostrum.
5b8b8cd6c0 Fixed typo reported by Grzegorz Makarewicz <mak@mikroplan.com.pl>.
b16a3b8450 (This fix is really by Jeremy)
7570669a08 Add a note explaining that multiplying a sequence with a negative number is the same as multiplying it with zero, and yields an empty sequence.
516f18993f Initial revision
abe2a457de Unpickler.load_inst(), Unpickler.load_obj(), Unpickler.load_build(): Fixed problems when unpickling in restricted execution environments. These methods try to assign to an instance's __class__ attribute, or access the instances __dict__, which are prohibited in REE.  For the first two methods, I re-implemented the old behavior when assignment to value.__class__ fails.
5da0f504ba get(): Fixed a bug in the merge order of the dictionaries.  This makes a copy of the defaults dictionary and merges the section's dictionary into it so that sections can override the defaults.
c6c921a4de Py_AtExit():  Added brief note about the constraint on cleanup functions not 	      calling the Python API.
25f1722dd7 Paint demo by Dave Mitchell.  There's clearly a demand for such a demo, so here it is.
16f88454f1 Use \url{} to mark a URL.
ff3f0d0a5c Use \url{} to mark URLs, \email{} to mark an email address.
ca6567fb3f Use \url{} to mark URLs.
301ad2ee63 Fixed indexing of {datadesc} environments.
0f02628dce \seemodule{}:  Use logical markup for the module name, to ensure it picks up 	any changes introduced there.  Also ensure a little more space between 	the module name and the parenthesized comment.
7c418ed89c Added descriptions for log() and log10().
bceaf35a63 Add support for the new macros, including hyperlink generation for \url{}.
ed79783bb2 Converted to use new macros.  This example demonstrate \method{} and, more importantly, \url{}.
55f4492859 Converted to use semantic markup.  This is an example of how many of the new constructs should be used.
dd28d57fd0 Revised new macros after discussion with Guido:  Always use full names of semantic concepts.
f06777dd7c (py-outdent-p): When looking at the previous line, watch out for continuation lines.  This fixes this bug report, reported by Frank Stajano.
9ec9fbc355 (py-goto-initial-line): Shut up the byte compiler.
82aecb9d66 (py-mode-map): Add a binding of C-m to py-newline-and-indent.  This is a religious issue: RMS decrees that the Enter (RET) key should just do a newline and a LFD (C-j) should do a newline and indent (i.e. the python-mode version of this).  Almost everyone I know disagrees and finds that RET should do newline and indent.  Almost everyone hacks their modes to do this, if they know how.  Because it's hard for newbies to figure out how to do this, and because most DOS keyboards lack a LFD (leaving users to the more obscure C-j), I think it makes better sense to add this default binding.
0f35495563 Add entry for copy_reg module.
6eb9f10063 Removed entry for copy_reg module.
251fed3e56 $(LIBFILES):  Added libcopyreg.tex.
2d754437d4 Add entry for copy_reg module.
1abf0df5b4 Simple documentation of the copy_reg module.
d1cc9c2b92 Update comment about relative URL internet draft to reflect current RFC status; index references the appropriate RFCs.
c210e69981 (py-compute-indentation): In the most common case, where indentation is based on the line above, watch out for landing inside a triple quoted string.  In this case, use iterative search + parse-partial-sexp backwards to find the beginning of the string.
c0ecb53194 (py-master-file): New buffer-local variable which can be set in the file local variable section of a file.  When set, and the user hits C-c C-c, this file gets executed instead of the buffer's file.  Idea given by Roy Dragseth <royd@math.uit.no>, but implemented differently.
61b0452626 Added a bunch of "concept" index entries.
a46f84d293 Added index entry and \label{} for exceptions module.  This isn't in the normal modules portion of the manual, but that's the basic effect of this section with the 1.5 change in exception support.
73a973bf8d Always mark variables in the "Notes" following a table the same way as in the tables:  \var{}
cbe50f4829 Removed bogus index entry for the type() built-in.
311c19688d Proposed new macros:  see comments.  These are not yet used.
cb42f7c295 Consistency:  "{\tt ...}" ==> "\code{...}"
9eb5e5097e Consistency:  "{\it ...}" ==> "\emph{...}"
c520b695fe The soundex module is built-in, not standard.
ca12b9df7b Consistency:  {\it ...} ==> \emph{...}
dd17d1ce62 ni is a standard module, not a built-in module.  The only other reference to it already got it right.
bac354cd80 Consistency:  (Yes, I know this section is not formatted by default, and 	      isn't likely to be of much interest these days....)
57d9f2e6ec Renamed Jim's PyErr_[JF]Format() to cPickle_ErrFormat().  It's not a standard Python API function so it should not have a Py prefix.
79a6a9e882 Removed a confusing note about coercions and __r*__ operators.
46503922a0 Various updates to the effect that the group argument is always optional. Also documented that groups() now always returns a tuple.
7d4ecb8785 Add note about dropping latex 2.09 compatibility.
c567b8176a Revamped, to match py_compile.py:
f7edadbc58 Add Gopher to list of protocols that support query strings.
e7579624ef Fix bad new bug in ftp code -- the test for existing file using NLST would set the transfer to text mode instead of the specified mode.
ca99c2ce75 Fix to ismount().  Can't remember who told me this.
29c4688659 Patch by Tim O'Malley for servers that send a response looking just like     HTTP/1.x 200 instead of     HTTP/1.x 200 OK
42e8e5d164 Protect PyErr_Format format string argument from overflow.
0d6b49eff2 Protect PyErr_Format format string argument from overflow (ironically, the error was about a bad format string :-).
db9351643d Instead of "attribute-less object", issue an error message that contains the type of the object and name of the attribute.
cf57d8b8c9 tok_nextc() should return unsigned characters, to avoid mistaking '\377' for EOF.
d29806c37e Instead of a single exists(), differentiate between files, modules, executable files, and directories.  When expecting a module, we also look for the .pyc or .pyo file.
73bacfc3d7 Add unistd.h for isatty().
3dacdc306e Add LOG_SYSLOG if defined.
15af20a337 Better #ifdefs for NetBSD, taking into account that at least on netBSD 1.3, dlopen() etc. are fully implemented, including dlerror(). From Jaromir Dolecek and Ty Sarna.
4cc462e85b It seems obvious that when Py_Finalize() decides that there's nothing to do, it should not call sys.exitfunc either...
d2dd9a8b7f Some patches by Lars Marius Garshol:
758eec0172 Rewritten PyImport_Cleanup() and its helper, clear_carefully().  They now implement the following finalization strategy.
8095ebfc4a Consistency:  Replaced 4 {\it ...} with \emph{...}.
63566e2ef2 Added docstrings.
94e8f690dd Consistency: Replaced one {\tt ...} with \code{...}.
b6ce6427e8 Consistency:  In two places, change {\it ...} to \emph{...}.
53396f66c1 Consistency:  In two \section{} headers, change {\tt ...} to \sectcode{...}.
9e24309bb5 \funcitem{}, \dataitem{}, \excitem{}:  Removed obsolete macros; there are no 	longer used anywhere.  Use the {*desc} environments instead.
b660b63edf Use \emph{} for all references to the other documents, not just some of them.
20989e834d Mods by Bill Bedford - Use internal version of finder class so we don't drag in finder   tools - error -1704 also ignored during arg unpack - Use Scriptable Text Editor for example
5b0533d9ca Addition by Bill Bedford: Ordinal and NOrdinal classes so we can implement "every", etc.
48b805c07c SO_REUSEPORT should be SO_REUSEADDR. I found this in a mail of two and a half years ago from Yusuf Goolamabbas.
5081b227f1 Ouch:  "accounces" ==> "announces"
e2c6e203c6 Add trace methods to class Variable
f473cb007b Added tests for qualified sub and split
8687164426 Seems I've found a way to fix this.
af8a015c93 Consistency:  "{\bf ...}" ==> "\strong{...}" 	      "{\em ...}" ==> "\emph{...}"
b215137224 Added the standard \label{module-*} for the two supporting modules.
8ac34c2928 Consistency:  "Unix" ==> "\UNIX{}" 	      Always include the comma *inside* the \optional{} markup!
737e73ec3d Augment \tableofcontents to do the right thing.
4d4f9e726a Removed \mytableofcontents; just use \tableofcontents.
3e9ce54eff Removed one hack!
a809064166 Consistency:  "Unix" ==> "\UNIX{}"
6862b46b70 Consistency:  "unix" ==> "\UNIX{}"
8f006272fe Some shifting around of the DGUX hack so that it won't break on DEC Unix where Make doesn't know that '#' as a command is a comment.
c9dc5151b6 Consistency:  "unix" ==> "\UNIX{}"
efc1e0f43b Consistency:
3dd264cc0f Deleted targets used only by Jim Fulton's now deleted "gMakefile".
3f20592c3e Consistency:
b25c0e739c delete gMakefile, clarify Makefile.pre.in
5eb3f90ad5 No longer needed, sez Jim.
b0a78738ea Consistency:
18f9f539f2 Removed obsolete \kwindex{} call.
2b67bee8e1 Added "module search path" to the index.
cf75754357 Removed obsolete \kwindex{} calls.
0d8fcb233e Update the doc string to emphasize non-Unix behavior earlier; sys.prefix is no longer empty on any platform that I know of.
bc5062f664 \kwindex{}:  Removed obsolete macro.
b5dac4e02e &do_cmd_kwindex:  Removed obsolete function.
8362d005cf Added command at end to use times fonts; commented out.  Instructions to use times are there as well.
95810e4d18 Removed tarps2, tardvi targets based on comments from Guido.
657cb148c3 After discussion with Guido, agreed to only support double-sided PostScript, so we'll not need this shell whackery after all.
dca8792b52 Added openright option the the \documentclass{} for each of the manuals.
33d05b9d88 Added targets:
bc3b1c6fce Script to add & remove LaTeX \documentclass options.  Run "./texoption.sh" for usage information.
ab0b65d0c9 &make_mod_index_entry:  Wrap a long comment, store the additional data needed 	to create a module index in the HTML version.
9b6f1d24f9 Override several functions from the stock latex2html to support the module index.  It works, it's ugly, and would probably have to be completely redone if we changed latex2html versions.  See the comments.  ;-(
1af9e79708 Added support for \funcline{} and \dataline{}.
023f87fbf8 Lots of minor markup nits, all consistency related.
97546399c7 Document maxsplit arg for split(), with incompatibility note about 1.5 release bug.
2b2b3f9bcb Fix two bugs:
054f8fd12c Wrapped some long lines.
74947ac473 Modify command descriptions to use \optional{} instead of ad-hoc markup. There are still weirdnesses, but less of them.
6c886a8db1 \optional{}:  Removed leading word space, allowing more flexibility.
b2c45a8197 Sigh.  Apply a similar patch to the *other* occurrence of [^...].
fd49a964bc Follow current recommended practice in an example:  Use isinstance() to perform a type test instead of type(x) == types.FoobarType.  In example for type().
48022db400 "Unix" --> "\UNIX{}"
eea714aed4 As Jeff painfully found out, malloc(0) returns NULL on OS/2.
0cf785a7a7 Grammatical nit.
cf7e830869 Add module reference for cPickle to index.
12d9da5827 Use \file{} instead of \code{} or ``\code{}'' to mark file & directory names & name parts.
8d0ff317bc Simplify markup.
57b935d0d6 The resource module has been documented; remove from list.
bbe6068de0 Added \label{} to allow module references.
aa5dba026a Add index entry for reference to the math module.
d327a8dddf Typographical nits:  Always set parameter names in \var{} in the running text.
6b3ed7f581 Markup consistency in the mapping object interface description.
0bf6845450 Fix previous nit to really do the right thing.
60a3d2788e Consistency:  Always use lower-case markup; one tag was still given in 	uppercase.  (Makes it easier to see what markup is generated by the 	Python manual support and what is generated by standard latex2html.)
0fd8268189 Revise prologue and frontmatter to use latex2e (not in 2.09 compatibility mode) and take advantage of changes in myformat.sty.
1f8449af4e Revise prologue and frontmatter to use latex2e (not in 2.09 compatibility mode) and take advantage of changes in myformat.sty.
031ad4b2a0 \mytableofcontents	New macro.  Wrapper around \tableofcontents that 	does the right thing if the openright option is given.  Allows a 	lot of crud to be removed from the document files' frontmatter 	sections.
46fbd7f4a0 Nit.
3c3d7ce7fe For consistency, always use a trailing "()" on function names in the running text.
fcda560e81 Fix a typo (the word "a" was spelled "c"!).
c9a32ab26b Normalize some markup.
6279fccf4c Fixed up index entries.
1566a1d72c Added index entry for the protocol.
15bac5d6e4 Added index items for the RFC and the protocol itself.
799484399d Fixed index entries to be more consistent.
ae4300f8fb Updated embed demo, and put a note in the html file that you need a source or development distribution to try it.
6b02ac2321 I give in. Now Tk is also using resources just above 128, so Python now uses only 228-256, leaving 128-228 free for others. This mod affects prefs files, libraries and almost everything else, so I've upped my local Python to 1.5b4 to remain sane.
c4586387f6 In description of \D, revise markup so that the caret shows up in the HTML version as well as the dvi form.  Without the fix, it showed up as an extra zero character.
ecbc1cc320 Release notes and readme for 1.5b3
e86d2870c4 Loading defaults for gusi/sys.path didn't work for applets. Fixed.
a23a4621a0 Balloon help definitions
d9d2968de1 Added cPickle and cStringIO
a5e2ece757 - Tk 8.0p2 script resources - New folder names in sys.path initialisation - Version number, preffilename upped
416a1c8ece Projects for 1.5b3
fdc5adc594 Dangerous feature added: when removing local files (i.e., only when -r is used), do a recursive delete.  Use -r with even more caution! Also changed usage message into a doc string, added a comment or two, and rearranged a long line.
85a5c52752 Descriptions for PyRun_String(), PyRun_File(), and PyRun_CompileString() all gave the return type as part of the function field and used an empty return type field.  Fixed.
34252f99d6 lib.dvi target:  Added commands to generate the modules index.
c1ce320a4f Script to convert module index data to module index.
0b1337d674 Add module index before the general index.
da941ef27c Added support for storing information to build a module index.
875c807c92 In description of the group() method, fix markup of "\(" and "\)" literals; "\code{\\(}" produces "(" in the .dvi file and "<BR> (" in the latex2html output (the font was right).  Changed to "\code{{\e}(}" variation, which fixes both.  Breaks the .texi file generation again.  Oh well.
9d98c91b99 Fix bug detected by AMK: need to import string.
982209dc69 Fix bug detected by AMK: Types should be types.
16c8eccfcf This commit was manufactured by cvs2svn to create tag 'release15'.
8f18320270 Last-minute fix for Jim H: don't die after del sys.stdout
d11ec25ce4 Add zlib and bsddb, and remove beta designation.
46f37144d3 New module added.
efce03036e Ready for release of 1.5.
fbea1d35db Added from 1.5b2 to 1.5.
3884e7edf9 Apply fixps.py to allow A4 paper printing.
1f35977bfd Added BaseHTTPServer to table of contents for chapter.
eb0f066fb8 Correct small nits reported by Rob Hooft.
51ca6e3e42 When there's no filename, don't make one up. Added _test() that behaves (a bit) like gzip. Fix a comment (*sequential* access is okay -- *random* access it out!)
ccd25d10c4 Final version for 1.5; two tiny corrections.
5793039dce Clarify that __getinitargs__ is called at pickle time!
4f80b65aa6 Added "docs" for Pareto and Weibull distributions.
f5910e42d1 Add tests for re.L(OCALE).
74608f8b8a Oops, big glitch.  Charles had put a 1 in the column for argument list type for all functions.  However many function call PyArg_Parse() and need a 0.  This is so that when they didn't change anything, the can do Py_INCREF(args); return args.  Reverted this back.  For atof(), there's no reason not to use PyArg_ParseTuple(), so I changed the code (atoi and atol already used that).
786205e385 Oops, the last checkin left a blank line in a string literal.
380bf64424 Since DSA.py never made it to the release, neither should dos-8x3/dsa.py.
1c8b9e4769 Clean out *.texi and *.info* as well for "make clean".
7779619524 Add obsolescence note.
b1b8f23903 Add URL of Andrew Kuchling's nifty re conversion page...
8e94489882 Add a note that up to 1.4, translate() produced Emacs style syntax; in 1.5, it produces Perl style syntax.  Also change "Python's regular expressions" into plain "regular expression" in the intro.
e33e903461 Updated release date to match boilerplate.tex.
5de1eb9b84 Added ConfigParser.py to list of undocumented miscellaneous useful utilities.
dccc298e3d Took out some disclaiming text (even from the title!).  Rewritten abstract.  Alas, I didn't get to do anything else before the release :-(
5b8a523538 A whole bunch of typos fixed by Andrew Kuchling. Added a warning about the incompleteness to the front. Added a reminder about CObject to the back.
24df68493a Refine note about strftime test failure (it's fixed in Linux glibc 6).
14777f87d8 New blood.
d8a0be775f Set the patch level to 1.5.
5b943ca1a9 Set the release date for 1.5 (final).
d01e9aa0df the usual
1cd6a457d9 Two critical fixes to the changes that I made for Greg McFarlane -- patches provided by Greg (am I glad I sent him my latest version!).
13704a8928 Added .PHONY annotation for lib.info target; the real target is python-lib.info.  The annotation is needed to prevent at least GNU make from building a second set of info files with the lib.info base name.
e66e9c5562 Remove more commented-out text that is no longer needed.
29d3b9368c Remove the commented-out warning at the top.  It shouldn't be there for the 1.5 release version of the file.
43c9350f7a Getting uglier.  But it doesn't completely bomb except for some table stuff. I'll get to it when I can.
78f8e98232 Lots of minor nits that allow this file to get processed without failures by the info generation phases.  Most of the errors had occurred in the makeinfo step.
6810a29c64 Ignore generated info files.
a007c13094 Reduce warning count from partparse.py.
3d913ad370 Revised lib1.texi target to deal with some conversion nastiness.  See comment.
1b6cf78c15 Reduce warning count from partparse.py.
5baf4bc978 Moved things around a bit in interact(), so outout is processed before input.  When an EOF is read, break out of the loop instead of (by default) writing an empty line (which doesn't do much good).  Don't close self when falling through the loop.
588f38ec2a Ignore another intermediate file from the info generation.
1d0d7e4e48 At Jeff Rush' request, add Py_BEGIN/END_ALLOW_THREADS around call to DosSleep().
d7feffdd5f Reduce warning count from partparse.py.
bfaf3d6186 Moved some #ifdefs around that got put in the wrong place by the latest OS/2 patch set.
9cb64803aa Added Greg Stein's docs for BaseHTTPServer.py. Moved docs for "re" to before docs for "regex".
b0744c5a28 Make "{" and "}" in code sample visible instead of a group (it's supposed to be a dictionary...).
9fd41e363b Fixed several bugs reported by Greg McFarmane:
23e21e7cf3 Minor editing corrections.
983c930c8d Added doc string, provided by Charles Waldman (with some reformatting and a little editing my me).
bef9b0b039 Added missing "\" to "\var{address}, var{length}" in buffer_info() description.
2003204ba7 Added doc string, provided by Charles Waldman (with some reformatting and a little editing my me).
6884e3b94b Reduce warning count from partparse.py.
c416445d7e Use tableii environment for the table instead of tabular.  This makes it consistent with other 2-column tables in the Python documentation.
671fe9dd31 Reduce warning count from partparse.py.
a3e672b574 Nit adjustments to remove warnings when processed with partparse.py.
f0867315e9 Normalized the word "Unix" to "\UNIX{}".
a4541af0ba A bunch of minor stuff.
05dd3c09ab Added back info generation.  Still buggy in the final phase (makeinfo run).
cc97454987 Added missing "\" to "var{P}.\var{M}" in load_module() description.
f3e6df1e2d Remove unneeded "{}" that confused makeinfo.
6ccaaf1a08 Change name of temporary file to avoid possible filesystem issues; matches similar renaming of the @buildno file elsewhere in the Python tree.
1656d17c42 Changed all \verb\...\ markup to either \code{...} or \samp{...}.
2cd0b9b1ba Removed "-*-texinfo-*-" from first line; this can cause emacs/xemacs to stop and ask the user for permission to set buffer-local variables depending on the user's configuration.  Not really needed since this doesn't get edited often.
f9951818a6 Normalized the \seetext markup to match the only other instance:  should be "\seetext{...}" instead of "\seetext ...".
45c9df6636 Changed some \verb\...\ markup to the more common \code{...}.  \verb\...\ is rarely needed and should be avoided where possible since it doesn't behave well with some processing tools (like partparse.py).
d499004860 Solve two annoying problems with ftp URLs for Jack: when repeated retrieving files from the same host and directory, you had to close the previous instance before opening a new one; and retrieving a non-existent file would return an empty file.  (The latter fix relies on maybe an undocumented property of NLST -- NLST of a file returns just that file, while NLST of a non-existent file returns nothing.  A side effect, unfortunately, seems to be that now ftp-retrieving an *empty* directory may fail.  Ah well.)
adfacf4e2e Do a better job of keeping the dialog visible when the master window is near or beyond the edge of the screen.  Patch by Skip Montanaro.
0ee358529e do_env_tableii(), do_env_tableiii():  Align the table in the center, just 	like LaTeX does.  There's no need to diverge on this.
4d9d3f18c2 Typo: Widht instead of Width...
aa06b0ede5 Plug the most annoying recursive printing problem -- reset '_' to None before printing and set it to the printed variable *after* printing (and only when printing is successful).
81e84c95c5 Just for fun, add a static module, "xyzzy" -- show that calling its initxyzzy() works.
643f8f62b4 Add setsockopt...SO_REUSEADDR to avoid stupid waiting when killing and restarting the server.
ccb5ec62e1 Added expect() method which takes a list of regular expressions and an optional timeout.  Also moved some imports around.
00f9fea288 Use string.replace instead of regsub.[g]sub.
b9b50eb7e0 Decided to add the telnet library that I wrote long ago (it's still in the Demos/cwilib directory).  Converted comments to doc strings and used default arguments instead of *args.  Updated the example.
dd79bd3539 Checking in fixed PS, with A4 capability.
b9973d9060 Script to edit one line in the PS to allow A4 printing.
44a8931caf Upped tcl/tk instructions for 8.0p2
c4b9af756d Added Jack Jansen's versioncheck to the README file.
5291037c70 Adding Jack Jansen's version checking utility.
7f96291ee2 Convert a couple of three-column tables with an empty third column to two-column tables.  This improves the rendering of the HTML version on (at least) some browsers.
d665e8b5b0 Removed unnecessary \small{} block; latex2html got it wrong and its no longer needed for printed output.
d21759ba47 Removed unnecessary \small{} block; latex2html got it wrong and its no longer needed for printed output.
557dea1ca2 AMK's latest -- synchronized with PCRE 1.04.
0148bbf966 AMK's latest
9597daf220 do_env_tableii(), do_cmd_lineii(), do_env_tableiii(), do_cmd_lineiii():  New functions to handle tableii and 	tableiii environments.
80e57fb21b Converted to use re instead of regex; version 0.9.0.
9897f0f847 Oops, left in a non-standard multi-line doc string that GCC finds okay but other compilers don't like.
8b0d95f06e Oops, tiny fix for the DGUX rule when installing -- don't fail when libpython$(VERSION).so doesn't exist.
12501953e0 Added bsddb project
b8c42c9825 Add new optional parameter 'suffix' (default ''), which is appended to the temporary file name.  Also some minor formatting of Jim F's code.
7d4f68c15f Oops -- '(' is also a legal start character of a new format...
414fd4843a Added doc strings, suggested by Charles G. Waldman (but massaged quite a bit).
3c4bb802d0 Patch by Brian Gallew for DG/UX.  I'm not quite sure what it does but it seems harmless for other platforms.  It plays tricks with the name of the library used to link with.  Apparently DG/UX really wants a shared library to link with if it wants shared modules to use symbols from the library.  I'm not sure why this wasn't an issue with 1.4; DG/UX seems to be the only platform where moving to a single library made things harder!
8f4ceb168c Two unrelated changes:
0e680b7608 Moved toolbox to lib-toolbox, Sjoerd-style.
3802039cff Moved scripting to lib-scripting (did it the Sjoerd-way this time)
e903aab833 Replace unprotected tilders by \~ -- an unprotected tilde is a non-breaking space!
b2c6ef83f4 Change {\em ...} to \emph{...}; this seems to be the developing preference throughout the manuals, and seems easier to read.
616b23b2e4 img_tag(), top_navigation_panel():  Generate markup the same case as other 	functions in this file.
8da9e6a8a0 make_mod_index_entry():  Generate markup the same case as other functions in 	this file.
95cdb35ef0 Oops, the output file really should be called zlib.pyd here!
bd104bfec9 Added project for zlib
9ec0f8b405 Win32 treatment.
629bcfb8f9 Make this test succeed even when using "import test.test_zlib".
ffeb593816 Changes for older Win platforms by Jim Ahlstrom
b1d368c00d Tiny doc patch for QNS
e8c27bb3ea Oops!  Should've renamed dos_8x3 to dos-8x3 here, too.
304474f315 Make the word "Module" in the section header start with an upper-case "M".
20417b7afb Make the word "Module" in the section header start with an upper-case "M".
b78da332fa Make the word "Module" in the section header start with an upper-case "M" for all three modules described here.
a47bce54a6 Make the word "Module" in the section header start with an upper-case "M".
9c483191d6 Make the word "Module" in the section header start with an upper-case "M".
2303d31cc0 Make the word "Module" in the section header start with an upper-case "M".
bcda484bc4 Make the word "Module" in the section header start with an upper-case "M".
36499b8e62 Make the word "Module" in the section header start with an upper-case "M" for both modules documented here.
14f8521952 Make the word "Module" in the section header start with an upper-case "M".
7372e5793d Make the word "Module" in the section header start with an upper-case "M".
045c7fc9b9 Make the word "Module" in the section header start with an upper-case "M".
6f070108df Make the word "Module" in the section header start with an upper-case "M" for both modules documented here.
dccd9dbf52 Make the word "Module" in the section header start with an upper-case "M" for both built-in and standard modules.  They were different.
819b789f36 gen_index_id():  New function.  Construct an index key such that the sort 	is stable and the form is only defined in one place, since we do 	some fancy footwork with the keys to separate the defining instance 	of a module reference from other references in the HTML index.
84818d7aad make_mod_index_entry():  New function.  Create the index entry for a module.
58132c6799 AMK's latest; plus three null bytes that I added for purify
e4eb2231fd AMK's latest
e7951976ad Fix mysterious undetected error -- call to non-existant Py_Err_SetStr() which shoulda coulda woulda oughta been PyErr_SetString().
7988206c1c Don't list which files to add, since the ones that *were* missing have now been added.
7651624df8 New VC++ 4.2 makefile, contributed by Gregor Schmid, which adds the three missing files.
71c0dece54 Up the version.
72df9bcba2 do_cmd_refbimodindex(), do_cmd_refstmodindex():  New functions, handle the 	reference form of \bimodindex{} and \stmodindex{}.
0721358969 Fix a bug in translate(): the pointer was incremented by the length of the *escaped* url.  Also added new special characters that are not part of the url when found at the end: ( < > .
bef74b5605 Add -lld option for AIX to _tkinter rules.
fedc6d0d5a Added SOLID definition.
5ca9033062 Index the RFC822 reference (some other RFC references were alreaddy indexed).
b5323999d2 PhotoImage.put():  Fixed -to handling, including backward compatibility hack. 	Guido, please take a look at this.
8e0799817e The \indexsubitem definition for the actual exceptions did not actually change the \indexsubitem value; fixed.
9d2f7d414d Oops, ".pythonrc.py" should *always* be marked with \file{}; one occurrance escaped with \var{}.
5493205ba4 Module names should be in \code{}.
0514ce126a Descriptions for delitem(), __delitem__():  These delete a value, not set it.
4f496cc5b1 Fixed index module reference.
90f2e5e202 Added a named target for referencing.
bfc28bcfdf Used a named target to form the reference to the Built-in Functions section.
6d2bdb682d Fixed index module reference.
3aa289537c Fixed index references to modules.  (This is *not* the spam module!)
e14388c4b8 Fixed index references to modules.
19d58273c5 Fixed index references to modules.
356818eccb Fixed index references to modules.
8274f32a6d Fixed index references to modules.
f5eaa2efb8 Fixed index references to modules.
a51f5a48e5 Fixed index references to modules.
4af1814858 \refmodindex{}:  New macro, used to make an index reference to a module which 	is neither standard nor built-in.  (Used for sitecustomize entry.)
9ab2b2ec5b Fixed index references to modules.
54820dc8e4 Fixed index references to modules.
6206394a4b Changed illegal \stmodindex{} to \refstmodindex{}, added index reference to the stat module.
8a528bd10d Added some module references to the index.
207e57b617 Added definitions of \refbimodindex{} and \refstmodindex{}, which should be used to add index references for built-in and standard modules, respectively.
d9dbfbd33c At the top, made it clear that the \bimodindex{} and \stmodindex{} are only used for the defining entry for the module, not every index reference.
80fb344a18 On NT, use a better template, ~XXX- where XXX is os.getpid().
85f8b0980d Add note about having to add some files to the VC 4.2 files.
aa6fa6bbeb Patch by Oliver Andrich for Lunix using glibc.
92d91f56a7 Move %x test to nonstandard section because it appears to be locale specific.
97250cb288 Untested change to include gmp-mparam.h instead of gmp-impl.h. Chris Lawrence <quango@ix.netcom.com>
c0cc6351e5 regex -> re
1eadb41036 Patch (by Andrew Kuchling of course) to prevent named back references in the pattern to wear out the reference count on small integers.
f0413d4841 Added tag_prevrange analogous to rag_nextrange.
330aafb0c2 For base 10, cast unsigned long to long before testing overflow. This prevents 4294967296 from being an acceptable way to spell zero!
30da0ea124 Believe it or not, some people have an empty group database. Prevent the test from failing there.
095f35ad60 Changed \indexsubitem from ({\tt HTMLParser} method) to just (HTMLParser method).
1247ceab94 Changed \indexsubitem from ({\tt SGMLParser} method) to just (SGMLParser method).
0add4c120d Changed \indexsubitem from ({\tt XMLParser} method) to just (XMLParser method).
a226cd82f6 This commit was manufactured by cvs2svn to create tag 'r15b2'.
98b9d77666 Change _nametowidget to nametowidget -- it is a public interface.
d56924258a add_idx():  Don't add unnecessary markup around the little markers stuck in the 	index to cross-references; an image doesn't benefit by being bold!
9e326665cf Remove unneeded "import re".
105ff952bd Typed in the relevant changes since 1.5b1.
5a978dc7e5 Doug Marien.
48d0437d1d AMK's latest version.
7980826d37 Prepared the README for 1.5b2.
3723152c5b Update to the Big Comment at the top of the file.  It should better explain what the users of the various Emacsen have to do to get this all working.
7814ea64ff Last minute fix to Text.window_cget(), which should properly Tcl-ify the option name (prepend '-', strip trailing '_').
9afad049e0 Move the dbm module around and add an introductory paragraph for dbm, gdbm and bsddb, as suggested by Skip Montanaro.
d0ec7616ea Copy the change from ../getpathp.c here.
2dbabb2801 Installer for beta-2. Use Program Files, register pythonw.exe to execute .pyw files.
1058d2e891 update the example without the example.def file
55b8b03dfb New instructions, take VC++ 5.x into account.
936c6de5d3 Adding VC 5.x workspace and project files
0decf6c935 Added tkappinit.c source, and define WITH_APPINIT.
4d35e6f092 yeah, yeah.
691d2adeef Allocate one byte extra in some cases.
5ac00ac140 Fix problem detected by Greg McFarlane -- callbacks passed to bind_class() and bind_all() are destroyed when the widget to which they were passed is destroyed.
d1f4984a9b Jim Fulton writes:
79f016a262 Remove "Lib/test" from the default path; this is now a package!
bd49ac4492 The 'l' flag (locale specific matching) has been renamed to 'L'.
d0753e20b2 At Barry's suggestion, plug the security leak by using an empty __builtins__ for all calls to eval().  This still allows someone to write string.atof("[1]*1000000") (which Jim Fulton worries about) but effectively disables access to system modules and functions.
90d62ab0a1 Since this module is used as a fallback in case no built-in modules have been configured, string.atof() should not fail when "import re" fails (usually because pcre is not there).
e680546894 Don't specify base 0 to string.atoi when unpickling integers in text mode.  The pickler always uses base 10 so the default base should be fine.  (The base gets us in trouble when there's no strop module, as the atoi() in string.py only supports base 10.  This is for JPython.)
87908f5925 New names.
d58daff686 Planned release date for 1.5b2.
e44a8d9987 Support uue and x-uue as short names for uuencode.
9ab94c18d8 Doc strings and reformatting with 4 spaces bty Mitch Chapman. Untabified and minor tweaks by me.
24e62e2c7c Modified quicksort by Raymund Galvin, after studying the GNU libg++ quicksort.  This should be much faster if there are lots of duplicates, and otherwise at least as good.
3b99430808 # Use proper temp subdir for intermediates.
d6af46d4ae Need a cast when comparing type object in isinstance()
d5559576c9 Start calling it 1.5b2
4fdd1fafb2 Comment out CODE and DATA statements that are apparently obsolete.
d666eae55a Adding a new project: pythonw, or WinMain.c, containing a main program that doesn't have a console window attached.  stdout/stderr are lost. This is handy though for things like grail.
736fe5e918 Document binary format and __init__-free unpickling.  Added a pointer to cPickle.
a42c17851c Turn the table for flags into a nested itemized environment.
c525e43b42 Add a test for a bad format character.
231a41e708 Add explicit check for correct next character in format at end of format.  This will complain about illegal formats like "O#" instead of ignoring the '#'.
eefcba61f4 Fix a little mess (Likecode{...} -> Like \code{...}) in recently added text.
8291bb3693 Reference to PYTHONPATH should be PYTHONSTARTUP.
28f9a68deb Added note about the module's obsolescence.
5bdea89c89 # Typos in the comments giving the names of two recently added distributions.
ba179051aa Fix the way the version number is gotten out of the RCS revision.
1a24bb53d5 Fix the test for pow() -- no more TypeErrors are raised!
ebd05eb10b Typo: RUSAGE_CHILDERN -> RUSAGE_CHILDREN.
8d9c2e33e1 LC_MESSAGES is not defined on all systems; use #ifdef LC_MESSAGES.
b978d18fec Guess... :-)
3d20986d96 Checking in ConfigParser.py -- I don't see a reason why this can't be liberated.  This was originally written by Ken and later revamped by Barry.
b1823ad83f v 0.8.3 -- add an option to suppress URL processing inside <PRE>, by Scott <scott@chronis.icgroup.com>
fc5d8b198a libainstall:  Install Modules/Setup.thread in addition to Modules/Setup and 	Modules/Setup.local.
138dac5a1b Added more warnings about ni's demise.
7b8970ac88 Deleting ni.py; renamed to ni1.py, really.
6599fb0917 Make close(), and hence __del__(), robust in the light of the world being destroyed already.
19b55f2d17 Fix subtle bug in cleanup code in PyErr_NormalizeException(), detected by Marc Lemburg.  There's a path through the code where *val is NULL, but value isn't, and value should be DECREF'ed.
a2e268aa40 Mark file names with \file{} instead of \code{}.
41999c164e Doc strings by Mitch Chapman (with a little reformatting). Also reformatted the whole module with 4 spaces and no tabs.
1707aad27c Changed the finalization order again so that the reference count printing (when Py_DEBUG is defined) happens while there's still a current thread...
be1eb0d9ed (1) call mktime() just before strftime(); it normalizes the buffer and may set the timezone name for BSD systems...
6a99984e79 Use long() instead of int() to compare mktime(localtime(t) with t...
c5aec05967 Separated the definitions of ntohs(), ntohl(), htons(), htonl().  Separate descriptions really make things look a bit better, and should improve the ability to re-purpose the content.
8ca70069a6 Added Emacs turd so this file has the correct mode in Emacs / X/Emacs, even if you don't have .perl in your mode table.
a5a3cdcf4d Added Emacs turd so this file has the correct mode in Emacs / X/Emacs.
a417b66204 Updated the README to the current status.  Added a note about the "times" option.
0b334104ac New version from AMK -- with minor corrections to make it legal latex.
5070060d40 New pcre version from AMK
dfa6790bd6 New re version from AMK
f3d729c8f9 Fixed SFT #23842:  leave in non-standard style options when checking in an update.  ;-(
cd8732a482 Remove the last bits of log from the leading comments.
9716aaa14c Jim Fulton:
61280916f6 For RedHat Linux 5.0, added notes about needing to remove the LinuxThreads package, and -lcrypt for the crypt module.
94ce0d1963 Add special handling for Python modules that are imported implicitly by the Python runtime: 'site' and 'exceptions'.
c5d2d51700 Apply the same change to classes without an __getinitargs__() method as in pickle: the new instance is created without calling __init__().
e907208b30 Some reorganization (all limit operations & constants together, and all usage functions and constants together).
a0eaa2200c Some manipulations with tags to get the TOC and Index to look better
3e396cf9ff New WML file, this time with working Title and Author tags, and mapping chapter and section headings to more appropriate nodes so that the TOC actually works.  Now generates one HTML page per chapter.
5ea20d52c7 Added some links to OO-Browser, given by Harri Pasanen.
d48f252ce5 Another large batch of patches from Jeff Rush for OS/2.
a34c31352b New batch of patches by Jeff Rush; moved his readme.txt portion here.
cee1dca4e7 Moved Jeff Rush's ever expanding comments to os2vacpp/readme.txt.
a075ce1618 Two changes by Jeff Rush (slightly tweaked):
595d7ba069 Jeff Rush: add definition for S_IFMT for VisualAge C/C++ under OS2.
60aff2c0a6 Use the proper OS2 test symbol: PYOS_OS2.
61de0ac4bb Reindented according to new standard, without tabs. Also added one more os2 specific piece of code, by Jeff Rush.
63cf3960df ospath.py has been obsolete for long enough.
e467be6511 When instantiating a class with no arguments and where the class does not define __getinitargs__, bypass the __init__ constructor completely.  This uses the trick of instantiating an empty dummy class and then changing inst.__class__ to the real class.  This is done in two places: once for the INST and once for the OBJ format code.
346f7af8ff Added doc strings and reindented according to new standard, without tabs. (Like ntpath.py, this was contributed by "Charles G. Waldman" <cgw@pgt.com>)
15e22e1c3a Added doc strings and reindented according to new standard, without tabs.
7f9732880e Fix the exclusion of "config" in the methods copied from Pack to also exclude "configure".
c37eb56f96 Forgot to use &lt;/&gt; for some example output.
205eb72217 Use registry key ProgramFilesDir as default MAINDIR
6656d1f041 Add a few more PyErr_ symbols
faf8b21507 Add pretty icon to python.exe
90136b08b6 Only parsing requires Python 1.5
00727b0022 Updated world codes with latest iso3166 codes
9efdef1d39 Added parsing of ISO 3166 files
eee08cdd54 Make examples consistently use 4-space indentation.
0d3b4f8beb Fixed unresolved reference problem; this module wasn't \label{}ed.
98b032a7c0 Removed unnecessary escaping.
1cf87496a6 Arg; more nits, but I may as well finish the job.
7381e28399 Fixed BINARY_RSHIFT documentation to indicate a right shift instead of a left shift.
c2297c1ce9 Changed {\sc gdbm} to \code{gdbm} everywhere.
36facb086e Merge between my version and Jim Fulton's version; removed RCS keywords but otherwise unchanged.
fdde96ce98 New versions of cPickle and cStringIO, from Jim Fulton's cPickle 1.0b1 distribution.
009f78754d When --with-thread(s) is specified, the thread module is now automatically enabled.  This is done through a substitution in Modules/Setup.thread(.in). Bill Janssen will be happy.  The original idea was by Lele Gaifax (though I changed the implementation to use a separate file).
a0cbb3dbae Moved the thread module to its own Setup.thread(.in) file, which is edited by the config.status script depending on whether --with-thread is specified or not.  Also needs changes to configure(.in).
e612be5926 Patch my Marc Lemburg to fix urljoin("/a", "..") and urljoin("/a", "..#1").
3fa440ea91 Refinement of home for NT, courtesy Jeff Bauer.
7c4cba8325 Added handler for opcodedesc environment.
f2d7e5528d make_str_index_entry():  New function.  Similar to make_index_entry(), but 	includes the string in the returned value instead of the dummy 	filler character.
ab76af3d65 Provide default for blocksize on retrbinary (Skip Montanaro).
98ee50b5a4 More generated files for netbsd 1.x, by Anders Andersen.
9981d2226d (py-jump-on-exception): Variable which if t, means that if an exception occurs in a synchronous Python subprocess, the mode will automatically jump to the innermost exception.
27ee115fd7 Removed redundant eval-when-compile.
456035f4b1 The biggie:  changed the funcdesc environments used for opcode descriptions to use the opcodedesc environment.
a610f9f8c1 Added environment for defining PyVM instructions.  This is only used in the libdis.tex file I'm about to check in.
b7f1afe4a8 Change the default repr() and str() of class instance objects to look like <modulename.classname instance at ...> (to match the repr() of class objects.
5c38bf6c62 (python-mode): Patch to make font-lock work automatically for Emacs. Unnecessary for XEmacs, but oh well...
673d05f0ee Test for an up-to-date Custom library when byte-compiling, and issue an informative message when one cannot be found, as is the case with a vanilla Emacs 19.34 (and NTEmacs 19.34).
08052c7bb6 Add the flag RTLD_GLOBAL to the dlopen() options. This exports symbols defined by the loaded extension to other extensions (loaded later).
c425d2f87b Make stdin unbuffered too, when PYTHONUNBUFFERED is specified.
57ba4f35f7 Patches by Fred Lundh to make it compile better with K&R compilers. (Should really let AMK do this, but don't know when he'll give me a new version.)
e59d3f8ae1 Small bugfixes for broken old style use of the syntax table.  AMK, of course.
f259a8e5c3 Yes, Virginia, Tix does have a Tix_SafeInit() function.
b447d118ff Understand -Xlinker option.
32c575da0a Left-aligned preprocessor directives and changed C++ comments to C comments.
c5a0f532e7 Patch for QNX, by Chris Herborth.  Also left-aligned preprocessor directives and changed C++ comments to C comments.
7bf22de753 Patch for QNX, by Chris Herborth.
91221c29f2 Support for netbsd1 and freebsd3, after suggestions by Anders Andersen and Jacques Vidrine.
c0f29c2d31 When a port is specified in an ftp:// URL, must convert it to a number!
240ddc8a68 Typo in example (missing '=') discovered by Sandy Langbart.
80f8be8901 Support for the "event" command, new in Tk 4.2. By Case Roole.
2888a12eed Add attributions to Jeffrey Ollie and Tim Peters for re.py.
b7f454d119 Add attributions to Jeffrey Ollie and Tim Peters for re.py; new QNX section from Chris Herborth.
4954595036 Changes for FreeBSD and NetBSD: NetBSD does shared libs just like FreeBSD (big surprise), and FreeBSD has pthread support in -lc_r -- maybe NetBSD has too.
8e29a59b39 Skip directories when installing library files; this avoids problems when test/output is found (/usr/bin/install chokes on this; no idea why install-sh doesn't).
3593e5c4c3 Document new behavior of isinstance() when using a type object.
f5dd914196 Support type objects in isinstance().
6cedf82ac1 Make modes for installed files and directories variables; change the default for directories (not for files!) to be group writable.
11fbef5f92 Sjoerd sez: global substitute \240 with \177.
30e817ef32 Changed the occurrence of *shared* in the example so people won't accidentally uncomment it...
376467ada6 Added stropts.h to the list of files automatically regenerated.
5284589097 Generated from Solaris 2.6's /usr/include/sys/stropts.h via Tools/scripts/h2py.py.  This file contains many useful streamio(7) constants, especially the ones that support passing open file descriptors through a pipe: I_RECVFD and I_SENDFD.
893a8cbae7 *** empty log message ***
f58575ea16 Comment out crypt by default; it's not used very much and messes up the default build on Linux (because it requires -lcrypt which isn't availabel everywhere).
cf4559a62e Added Pareto and Weibull distributions, courtesy Jeremy Hylton.
c99a239f42 Added strop.split tests when sep is None.
93be92d309 split_whitespace(): Make sure delimiter is stripped from the beginning of the remainder item (last item in list) when maxsplit is < the number of occurrences.
8529ebb78c Require 'cl when compiling so that the push macro gets picked in Emacs 19.34.
0f280b6099 Use $LOGNAME instead of $USER to get the current user -- it seems to be the state of the art.
433c8ca328 Removed Queue.py.  It's documented now.
f6e8316b01 Initialize __version__ to the correct version string regardless of what RCS checkout options are used.  Problem first diagnosed by Marc Lemburg.
06ba34c5d4 In string.split(), honor maxsplit (if > 0).
58a88b3e34 _Environ(): Added __getinitargs__() method so os.environ.copy() works, as does unpickling, as in: pickle.loads(pickle.dumps(os.environ)).
798654fc68 Added \indexsubitem definition; functions were previously indexed for the wrong module.
2478f9d5a2 Added \indexsubitem definition.  Non-optimal, but two modules are sharing the documentation here.
92796d1f01 Added \indexsubitem definition; functions were previously indexed for the wrong module.
7730cc067f Updated \indexsubitem; functions had been indexed for the wrong module.
9181190c76 Added tests of strop.replace()
f577c08683 mymemreplace(), strop_replace(): Add support for optional 4th argument maxsplit which is implemented in string.py but wasn't here.  The reference manual doesn't define what happens when maxsplit is negative or larger than the number of occurrences, but in either case, I implemented this as all get replaced.  Default value is zero which replaces all occurrences.
ffbc17da19 (py-traceback-line-re): Relaxation of regexp to catch SyntaxErrors. Harri Pasanen.
73ec2c0081 Slip of the keyboard (f__ should be __).  Dunno why I had a totally messed up (but not checked in) version in my work files and didn't notice before releasing 1.5 -- at least the distributed latex file doesn't have the bogus warning about changed __init__ semantics.
22cf347955 This commit was manufactured by cvs2svn to create tag 'r15b1'.
8253671b6f Dumb typo.
f471056b0a (py-process-filter): py-delete-file-silently is obsolete.  Use a py-safe wrapped delete-file call instead.
3b3ff4e96e (py-compute-indentation): Check for multiline stringness and commentness so that hitting TAB in the middle of a comment will still indent the line.
8c4a8de75e (py-mode-map): Bind py-mark-def-or-class to C-M-h with a different spelling so that it doesn't clobber the standard M-BS binding.  This should be portable between X/Emacsen.
66d010ab3c Reordered and slightly edited the highlights of changes.
647738002c Revamped README for release of 1.5b1.
7ea639b133 Added list of what's new in 1.5b1.  Changed intro and some section titles.
4d8e7c5464 Four more valuable contributors...
0b23348aa9 The usual
330c660f66 The dependency of tarhtml on l2h was a bad idea.
c8520351af (python-mode): Make imenu-create-index-function buffer local.
4da6bd51dd (py-mark-def-or-class): Added an exchange-point-and-mark and a py-keep-region-active so that the marked def/class gets the zmacs-region or transient-mark region highlighted.  Also point should be left at the end of the marked region.
e467bfbfe9 (python-mode): Patch to fix Imenu support under Emacs, given by Torsten Hilbrich <Torsten.Hilbrich@bln.de>.
47384789b2 (py-kill-emacs-hook): Simplification.
f11d0240e3 Icons for Windows installer.
3879d4aac7 Added the HTML files.
a1afc07621 Added CRLF line endings since this is for NOTEPAD.
a0ee8cd982 Added comment about where to find details on python-mode.el, pointing to the Web site.
ee9f820cf1 Documented brand new behavior of sys.ps1 and sys.ps2 (str() is applied to get the actual prompt).
ddc3fb5734 Apply str() to sys.ps1 or sys.ps2 before using them as a prompt, so you can assign an object whose str() evaluates to the current directory (or whatever).
84cca446f2 Added utility target tarhtml to tar and gzip the HTML files plus their support (GIFS, icons, style sheets).
28fbe4dcd2 Adding the icons used by latex2html output to the CVS tree.
628b4085b5 Ignore html files generated by webmaker.
000eb0a138 Augmented the script so that (at CNRI anyway) it also invokes webmaker to create the HTML.
4323f7c7fd Simple index for the reference manuals (mostly for use on the Windows platform).
71ace95e12 Updated to the most pressing 1.5 issues.
4aa6186216 Drop Capitalized Important Words.
580aa8dbc3 Several changes, e.g. restructuring of the intro to be closer to what it ought to be.  Maybe the last checkin before 1.5b1 is released.
682fbe55e5 Remove hyperlink to time-sensitive Python release info.
dd58469d8a WISE installer source for Python 1.5
36e18e3d52 Added pypcre.c module.
cb91e7bbd3 Added the "italic correction" command ("\/") to the list of ignored commands. There is at least one of there in the library reference, and this reduces the warning count.  We *do* know what to do with it!
e624e0f99e Removed leading comment about this being "introductory" documentation; compared to most, I'd say this section is fairly thorough.
f259efe3d9 Get rid of math mode in some places.
3e1e274d0b Don't use $math$ mode to typeset a simple '>' sign.  Use \code, not \samp.
9d62e80e46 Remove strange use of $math$ mode to produce a backslash.
5b7220f7ee Oops, did the previous delete the wrong way.
d5da7a63c1 Get rid of last traces of module 'audio'
ca83f018e7 Added "-n file" option to only print files newer than the given file.
e2d4dd194b Use fuzzy comparison from test_support to compare outcome of pow(x,y,z) to pow(x,y)%z.
275feea40f New names...
00f1569983 Add fileinput.
e300d6f0fe Replace plat-os2 with plat-win, per Jeff Rush' suggestion.
37885c27c0 Trivial change in prompt label suggested by Case Roole.
2d9feeddf3 Change the option used on Linux to export all symbols from the main program to shared libraries.  On mklinux, the old '-rdynamic' doesn't work; the new '-Xlinker -export-dynamic' works both there and on Intel Linux platforms.
465f71d052 Done a sort -u on the symbols (and replaced all tabs with spaces).
e1cba7f577 Oops, the sort took some whitespace into account.
060dffbc34 Done a sort -u on the symbols.
345df170e6 os2 patch by Jeff Rush
7db30cad1e ignore various VC++ turds
50d4cc2f1d Files specific to Visual Age C for OS/2 -- by Jeff Rush
0ba48ba172 Added Jeff Rush' comments
d3af2f3815 win -> plat-win
f5578e4449 Add PyImport_Inittab and PyOS_AfterFork
8e9ebfd337 os2 patch by Jeff Rush
c0b93191e6 bind_class should return a value
be7c45eec4 New address parser by Ben Escoto replaces  Sjoerd Mullender's parseaddr()
e6c128f428 Use fstat if we can; write MAGIC into file last.
8700fe62f8 Redone the _tkinter configuration section with support for popular packages.
7a206c8a05 New tkappinit supporting several popular packages.
7d5b99d8bf A new standard module, as discussed on comp.lang.python, to simplify the writing of filters.
2aa78efab1 Add a pointer back to the wizard in the "compat" output.
0d2d759d8c PySocketSock_methods: Added "connect_ex" so the method can actually be called!
4a9aff2eba A comparison with several other languages that also appears in the Handbook of Object Technology.
bc12f78bb3 Adding Martin von Loewis' documentation for his locale module.
e084f0beea Add description for some modules that have been added since this intro section was last revised...
3472026347 Add description for Queue; fix typo (whichdbm should be whichdb).
db847bd9ea Plug memory leak in Py_BuildValue when using {...} to construct dictionaries.
3d96d522ec (Queue.Empty): When class based exceptions are in force, derive this class from the standard base exception Exception.  Otherwise define Queue.Empty as a string exception.
17c8e781c0 libqueue.tex: Documentation for the Queue.py module.
51bb7b7940 Dang.  Formatting glitch.
f5831ae92e New blurb, derived from my Handbook of Object Technology abstract.
4552f3d6de In the description of sub(), give a better explanation of the interface when repl is a function.  Also give a simple example of using a function repl.
bd1169a93e Add Martin von Loewis as the author of this module.
eef1d4e8b1 User-level locale module.  A wrapper around _locale which adds format(), str(), atof(), and atoi().  The last three are locale sensitive versions of the corresponding standard functions (only for numbers though); format() does general %[efg] formatting taking the locale into account, optionally with thousands grouping.
3df69bca0a Add support for _locale.
fc4255db75 Add s.connect_ex() which returns errno instead of raising an exception.
aec7497f6f Add optional support fort Tix and BLT.
2e58ff3ef5 Fix importing of shared libraries from inside packages. This is a bit of a hack: when the shared library is loaded, the module name is "package.module", but the module calls Py_InitModule*() with just "module" for the name.  The shared library loader squirrels away the true name of the module in _Py_PackageContext, and Py_InitModule*() will substitute this (if the name actually matches).
ee6fd1c392 Add declaration for _Py_PackageContext -- needed to fix importing of shared libraries from inside packages.
858cb73bb2 Two changes (here we go again :-( ).
df9db1ea18 Give more detailed error message when the argument count isn't right.
127b8dd8d4 Add declaration for PyNumber_CoerceEx().
242c64256c Add a new function PyNumber_CoerceEx() which works just like PyNumber_Coerce() except that when the coercion can't be done and no other exceptions happen, it returns 1 instead of raising an exception.
220ecc8c4b Martin von Loewis' _locale module (locale.py follows tomorrow).
3931df9250 Undo another glitch of the automatic not-so-Grand Renaming; some local variables called 'coerce' were accidentally renamed to 'PyNumber_Coerce'.  Rename them back to coercefunc.
33635f818a start numbering things 1.5b1 now
83600050d0 Assert that the proxies object passed in to the URLopener constructor is indeed a dictionary (or a mapping).
421c224044 Added docstrings (contributed by Martin von Loewis).
e4a93bc4b3 Fix the release date for 1.5b1 to be Nov. 26
d9a26ff9ca Add support for NULL macro (like UNIX, ABC etc.).
2974f0fe9a Add xmllib; remove (slow) from description of htmllib.
7336935e4c dis is now documented; bisect is deemed useful.
f7790c608d Document s.connect_ex(), which does not raise an exception on error.
364e643fdd Clarified reference to old profiler. Mention conversion to Perl-style regular expressions.
5de64883d8 Added doc for errorcode dictionary.
5d68e8e312 Fixed case sensitivity of attributes (they are case *sensitive*).
eae121e436 Adding dis and xmllib docs
a10768ae44 Docu for xmllib.py, by Sjoerd Mullender.
b62b6d145e Docu for dis.py, written by Martin von Loewis.
a219efaa7b Sjoerd Mullender's xml parser (based on sgmllib, somewhat).
46de1b0669 This BUGS list hasn't been updated since the release of Python 1.2! It is useless.  My real bugs database is currently being maintained with GNATS.
359bcaa539 This fix (across 4 files in 3 directories) solves a subtle problem with signal handlers in a fork()ed child process when Python is compiled with thread support.  The bug was reported by Scott <scott@chronis.icgroup.com>.
c9fd600640 Suggestion by David Ascher: set EXE macro to empty string and use it in a few places -- so it can be set to .exe on GNUWIN32 platforms and do the right thing.  Whatever.  (This was already done in Modules/Makefile* but wasn't carried over here.)
6592b3c01e Use a %s format for the exit status -- through the magical workings of the aptly named MagicDict class, the value is a string, not a number, by the time it is printed...
ca2f69cb96 As Mark Hammond found out, it was a bad idea to add "set -e" to the check in command -- this fails for new files!
6f5a312cec New version from Neale...  He promised it's the last.
dfed725e2c Fix memory leak in exec statement with code object -- the None returned by PyEval_EvalCode() on success was never DECREF'ed.
3120bc3888 v1.1; added attribution to Neale Pickett.
368e06b6f0 Some restructuring.
1abbd7f3f1 Added vgrindefs.
93a47d7c3c Plucked this from the net.
f51815426e Fix problem discovered by Barry: if you hit ^C to sys.stdin.readline(), you get a fatal error (no current thread).  This is because there was a call to PyErr_CheckSignals() while there was no current thread.  I wonder how many more of these we find...  I bnetter go hunting for PyErr_CheckSignals() now...
c1189eb524 Separate out a function pystones(loops=LOOPS) which runs the benchmark and returns a (benchtime, stones) tuple.  The main() function now calls this and prints the report.  Fred Drake's code.
f849291e2b Add __init__.py to test package.
6ae21ad687 #(py-emacs-features): Fixed typo in docstring.
b8f1166922 (python-font-lock-keywords): Pick up block introducing keywords with immediately following colons.  Sjoerd noticed this one too.  Here's a nonsense.py file that flexes all the font-lock keyword combinations.
ef3c891773 (python-font-lock-keywords): Fix for consecutive keyword font locking, given by Sjoerd Mullender <Sjoerd.Mullender@cwi.nl>.
5e21cb0bfb (py-emacs-features): Test for working make-temp-name, which is broken on NTEmacs 19.34.6.
2bd358c9fd A nice blurb that Mark Hammond wrote, aimed at Windows users.
a9ce70f3bc (py-execute-region): Fixed small bug with queuing file for execution in a py-shell.  Temp files now get cleaned up.
2518c67984 (mark-python-def-or-class): Renamed to py-mark-def-or-class globally.
851e7d5159 Got rid of the errorstr dictionary, which is redundant now that there's os.strerror() -- also, it would form a locale liability.
4a1f39a26b Undo half of the previous change :-(
6d48c4a00b (py-backspace-function): New variable.
a97a3f34d6 First round of changes, mostly subprocess stuff.
bfa9f13e14 islink() returns false, but there is no constant false!  Return 0 instead.
79b2038aa4 When checking for equality, open the slave file in text mode so it will compare equal even if the master file uses only \n to terminate lines (this is by far the most common situation).  Also, check for the case where the master file is missing, and print the time difference in seconds when the slave file appears newer than the master (for debugging).
19f44560f2 Use ``0'' instead of ``None'' to reset the underlying object in close methods.  Using None causes problems if the destructor is called after the __builtin__ module has already been destroyed (unfortunately, this can happen!).  I can't just delete the object because it is actually tested for (if self._sock: ...).  Setting it to 0 is a bit weird but works.
8f3c812e22 Fix due to Bill Noon for problem discovered by Ken Manheimer: packing 0.0 as float or double would yield the representation for 1.0!
25c649fdf2 Get rid of another reference to _PyImport_Inittab (now a static array) that should be PyImport_Inittab (a new pointer initialized to point to the array).
22348dc0e1 The warning about thread still having a frame now only happens in verbose mode.
8607ae2e57 Move the Py_{{BEGIN,END}_ALLOW,BLOCK}_THREADS macros in time_sleep() to inside floatsleep().  This is necessary because floatsleep() does the error handling and it must have grabbed the interpreter lock and thread state before it can do so.
3a44e1b9fb Two independent changes (alas):
7ff20ac9c7 Change the signal finialization so that it also resets the signal handlers.  After this has been called, our signal handlers are no longer active!
615022fbf8 Doing the most complicated CVS dance I've ever seen.  Barry has had his *own* RCS file for python-mode.el, and I've agreed that it would be better if his version was in the Python source tree.  However I don't want to totally get rid of the old RCS file (which has interesting info such as which version was in which Python release). So I've moved the old one to python-mode-old.el behind the scenes, and this checkin message indicates that I'm now deleting it. If you do an update, you will actually get Barry's *new* version!
affc0ca0e8 Changes in preparation for integrating into the Python CVS tree.
6345ac6d61 Add cast to realloc/malloc call to shut up AIX compiler.  (Vladimir Marangozov)
197346fafe New policy for package imports: only a directory containing __init__.py (or __init__.pyc/.pyo, whichever applies) is considered a package.  All other subdirectories are left alone.  Should make Konrad Hinsen happy!
771c6c8f7a Instead of using _PyImport_Inittab[] directly, use the new "official" pointer *PyImport_Inittab which is initialized to _PyImport_Inittab.
66959aff68 Remove the declaration of "internal" table _PyImport_Inittab[]; add new "official" pointer *PyImport_Inittab.
e8d113976c Add empty __init__.py files to the test packages so the new policy will recognize them.
873c35c437 Take out the setlocale() call.  It affects atof() and will break floating point literals.  Need to do this differently...
3c03fa87b6 Hack suggested by Matthias Klose to pull in all relevant entry points in libmath.a so they are available to mathmodule.so (in case it is shared).  While this still gets triggered on Solaris 2.x, this appears to be harmless there.
86aeb900e5 Add #include "mytime.h", needed for SunOS 4.1 (Matthias Klose).
613418aa09 New version from Sjoerd, small bugfix + optimizations.
e475d86bd9 Install Misc/Makefile.pre.in in the config/ install directory. Suggestion by Konrad Hinsen.
0874f7fdaf Tests for tokenize.py (Ka-Ping Yee)
fefc922cef New, fixed version with proper r"..." and R"..." support from Ka-Ping.
3b631775b2 Redone (by Ka-Ping) using the new re module, and adding recognition for r"..." raw strings.  (And R"..." string support added by Guido.)
9d37a4d332 Small wording change about global and local trace functions.
036309b13e This should hopefully finally clean up the remaining __del__ related problems with this module, even if an instance of a derived class is kept alive longer than the urllib module itself...
af8d2bf4d8 Bugfix in match() -- the number of registers shouldn't be divided by two!
e6eef4b4a3 Use __dict__.update(state) instead of for loop over state.items() and call to setattr().  This changes semantics, following the change already implemented in pickle.
040e565261 Ooops, found too more references to old conditions on floating point values.
ae18e9fc1c Removed obsolete discussion on _xdr helper module.
31626bce66 re -> regex conversions by Sjoerd.
f81e5b9c78 New module -- converts regex regular expressions to re style. There are two ways to use this -- as a filter (e.g. using C-U M-| on a regex string literal in an Emacs buffer) or from a Python program which imports this as a module.  Read the doc string for more info, and also some caveats (some cases aren't handled right).
1fef181183 Although it's hard to be sure, I *think* this is a working conversion from regex to re style regular expressions.  This should make sgmllib and htmllib threadsafe, so I can now create a threaded version of webchecker...
57a68e08f9 Remove redundant import regsub.
2efa34ba9b Daniel Larsson discovered another cut-n-paste bug in the Olimit story...
9694fcab53 Convert all remaining *simple* cases of regex usage to re usage.
426916e50e Add pcre to the list of safe modules.
f7a8b45d71 Remove outdated comments.
12f86ade21 Removed some unneeded imports, moved others around.
a8832b45e7 Removed unneeded imports of regex and regsub.
acfb82a530 Use re instead of regex.  Also remove bogus return statement from __init__().
8566e474b4 Added pgrep() function, which is like grep/egrep/emgrep but uses Perl syntax, by virtue of the new re module.
b49144244c Deleted this long-obsolete module
24986204cf Added "new" symbol defns for RE_ANSI_HEX and RE_NO_GNU_EXTENSIONS -- hopefully the last maintenance on this module, ever.
d7dc2eb708 Put {} around \^ in sets to force latex2html to do the right thing...
1f84449fd8 New CObject from Jim Fulton, adds PyCObject_FromVoidPtrAndDesc() and PyCObject_GetDesc().
16cb6f4612 Forgot to add .cxx and .cpp to the second case statement. Thanks to Daniel Larsson.
e85da651dd Some patches to Lee Busby's fpectl mods that accidentally didn't make it into 1.5a4.
9476a78c1e Remove "." or "" from front of sys.path (this bit me once).
4e8ef5fcd3 Catch KeyboardInterrupt separately and propagate it, instead of reporting a "crash".
1510565cb5 Add optional 4th argument to count(), matching find() etc. Also change all occurrences of "x == None" to "x is None" (not that it matters much, these functions are all reimplemented in strop -- but count() is not).
dd65975ac7 Patch by Charles G. Waldman to add optional user and password arguments to NNTP.__init__(), for nntp servers that need them.
4a2a621907 Write a str() function for class objects that returns "modulename.classname" instead of returning the same as repr().
ed1100f3b6 Don't use sscanf(s, "%x", &c) to parse \xX... escapes; hardcode it.
f6a84db034 Add getintarg(), getlongarg(), getstrarg() to macros since these no longer exist in the general headers.
cb4d3032ae Add proper (getattrfunc) cast in Pcre_Type.
266033e89b Change sharedmodules to lib-dynload.
7eecc246a7 Remove .pyo files like .pyc files.
cf809d6e48 Rename sharedmodules to lib-dynload.
304dd2defb Switch around OPT assignments in Don Beaudry's patch for Olimit (his code had the assignments switched around).
cbfcb17e96 AIX notes are simpler -- no need to enable sharedlibs with an edit.
828a0bdb1d count() now has a 4th parameter too.  Also rephrased the docs for find to use the same, better words to explain start/end.
871cf161f1 Documented exc_info(); also updated exc_type and last_type docs.
fb5cef1160 Added separate tests for {}.get().
6fcfa72c63 Correct Barry's fix -- take care of {}.get(0).
9b887c7911 Added tests of dict.get()
320ac331d1 dict_get(): Fixed a couple of stupid mistakes which caused crashes. Also got rid of some unnecessary code.
9e63faaa66 Change Python-as-executable-script example to use "#! /usr/bin/env python" since that's now the recommended way to do it.
654451dc54 splitpasswd():  The parameter is named "user", not "host".
2950b2d881 Restore the \seealso formatting that got lost when I updated the math module documentation.
9dcc5a94c5 Add support for ctypedesc, cvardesc, seealso, seemodule, seetext.
7cd60442b4 Remove macpath entry -- it is already documented.
5451d67dd9 socket_type ==> SocketType
120ac20c40 Remove superfluous comman from between "not" and "in" when describing the "not in" operator.
36fbe76a45 struct _frozen: 	Use spaces instead of tabs to indent structure definition; tabs don't 	work in tex/latex.
3b31cd2fe7 Shared libraries didn't quite work under AIX because of the change in status of the GNU readline interface.  Here's a patch, by Vladimir Marangozov.
a59406abdf Darn.  When thread support is disabled, the BEGIN/END macros don't save and restore the tstate, but explicitly calling PyEval_SaveThread() does reset it!  While I think about how to fix this for real, here's a fix that avoids getting a fatal error.
04d5c5827a Updated (but still not up to date)
666ff8c299 Build balloon help for EditPythonPrefs
bb748622f6 Fixup sys.path to be able to find macostools
188db7f343 1.5a4 relnotes
ef90af0711 Projects used for 1.5a4
399502c0ba This commit was manufactured by cvs2svn to create tag 'r15a4'.
9a513efffa Final touch -- Don's SGI_ABI patches.
91922677ea Don Beaudry's changes to support SGI_ABI on Irix 6.x.
d49266eeed Remove requirement for strdup() since it causes so many troubles for too many platforms.  Argh!
764a377cef Typo in description of news in errno; added setlocale() call.
44c36bb114 Add call to setlocale(LC_ALL, "").
9601315140 Add checks for setlocale() and <locale.h>
1f14ccf6d1 Put back the extern declaration for strdup(), between #ifndef MS_WINDOWS. This should make everybody happy, especially since we don't say what the argument type is (there is disagreement on that, too :-( ).
9b2681b355 1.5a3 relnotes (1.5a4 to follow later)
0b7269589c Updated for 1.5a4
bbaf37c03e Added pcre module
213649023c Bug fix for fast module location
f774c41dfe Upped version to 1.5a4, changed sys.path initialization to match new directory structure.
e6a4b7bf3e timezone support for macintosh (Jack)
5bd919b6d7 Include macbuildno.h here (mac only) (Jack)
b189a2f997 lots of "goto error" replaced by "return" (Jack)
7dbb48a67f Converted to new exception style (Jack)
b0105444e2 Mac does support createfilehandler now (Jack)
9a61dc90e2 Moved mac-specific speedup to a different place (Jack)
ac1fc95c3c Fixed for WITHOUT_COMPLEX compilation (Jack)
2861f4ec6e Open files in binary mode (Jack)
cbf3dd53b4 Use better timer on the mac Open files in binary mode (Jack)
45ac47c0b2 Allow open file as parameter (must be seekable) (Jack)
845037018d Generate new style exception initializer (Jack).
c0be2f5d56 Ready for the release, I'd say.
9ec2ed466b Change test for re.sub() involving g<...> to use a multi-character identifier.  The previous re.py had a bug that wouldn't show up with single-char identifier...
5bc5b14f6d Checking in AMK's latest installement.
c386107838 Checking in AMK's latest installement. (Two small changes to shup up gcc added.)
a7a89ebdbe Implemented nositepython and oldexceptions flags
c73f83c8d9 Fixed for new "import dir.module" semantics. Needs accompanying fix in import.c (yes Guido, I'll send it tomorrow)
55e3927f58 New exception interface
d2c0ec78d2 Use `...` around binary strings.
0225a38907 initparser():  Use PyErr_NewException() to create the exception.
b68b77f62d A few last-minute additions and some rearrangements and corrections. What's "xlib"?  I took the line that mentioned it out.
0e8457c4ec Fix EventHook (the trick to make widgets appear when using GNU readline) to create and use a new thread state object -- otherwise it would dump core!
53ad776cbf Remove this pathetic little module!
176bb41efa Add the Setup line for the pcre module.
93374539ad Updated for Python 1.5, including my experiences with Purify on Solaris 2.6 and with a threaded interpreter.  I also included my name and email address.
f326134e5c Map .shtml to text/html.
57d4c5510d Version 0.8.1.
b6fd5a50b0 Add "set -e" to lock command.
8731e5c35f The target directory is now called dos-8x3, not dos_8x3.
04d73c495e Check that all base classes are indeed class objects, rather than expecting the caller to do so.
79378ffd91 Add get_line_buffer() and insert_text(), suggested by Michael McLay.
43b26ea0fa Whole bunch of additions...
c6e8fd6de7 Temporary fix to valid_identifier().
2f3941d743 Return the error code from most commands, rather than swallowing it. Adapted the example (lying slightly about the string printed by login()).
ae590db3ce Fix join to support multiple arguments. (Why isn't this file identical to ntpath.py?)
abfdd70665 Add XXX note about wanting support for copy_reg.py...
90981e0e70 Add Jeff Epler's interact() function.  Note that it is broken. (It should probably be withdrawn :-( )
d5484fb75c Add optional arguments lo and hi to insort() and bisect(), to support using arrays containing leading or trailing garbage.
eec6ef1aa2 Use K&R function prototypes.
6cd7ecb10b The sequence behavior is now on the Exception root class rather than on the StandardError class.
fdacc58bfe Added pointer to api.tex and note about the out-of-date-ness of this document.
18b0db3b53 Set Oct 10 as the release date.
9faf4c57b0 Change title to {Python/C API Reference Manual}; remove \bcode \ecode which appears to be out of fashion in this file.
46a0bb4c3c Typo discovered by Case Roole.
d6449a2b11 Be more careful with closing fd's 0,1,2.
ef31b240ea Add note about condition.py.
92664b890b Completed the changes between 1.5a3 and now.  Not yet sorted though.
6f2a26d42b And "ni" has been documented...
2df75832b3 Oops; don't know if this was my typo or not:  There was a "p" on a line that should have been blank.
c211254334 Updated the section "Parsing Python".
14bf341f16 Added keyword module entry.
e061a51de1 Minor nits (Lib/token.py is a file, token is a module...).
db12f343bc Documentation for the keyword module.
e3dbc7e422 Reduced number of temporary names used at module scope.  Use underscores in front of temporary names in the module namespace.
00eb96a126 Move the pprint docs after the code docs, so that all parser/codegen type things come together.
9971f689cb Fix comment to add the all-important trailing colon to the example. Print the author with the revision date and filename.
dc1a072e02 Reduced number of temporary names used at module scope.  Use underscores in front of temporary names in the module namespace.
1f83ccee88 Done with adding changes from 1.4 till 1.5a3.
923c4eeeef Don't do weird things with the "import parser"; just do it.  Sheesh...
a11ccccd24 The usual (and some new modules).
d57548023f A variant on webchecker that creates a mirror copy of a remote site.
2237b73baf Several changes:
dc0f00ad03 Document the mapping object's new get() method.
fc3e61cd28 UserDict.get(): New method to mirror built-in dictionaries' get() method.
c38c5da5d0 dict_get(): New method for item access with different semantics than __getitem__().  This method never raises an exception; if the key is not in the dictionary, the second (optional) argument is returned.  If the second argument is not provided and the key is missing, None is returned.
596db3161c Move the __getitem__() definition from StandardException to Exception. This allows stuff like this out of the box:
bf9d353bab New "re" regular expression support. The new re module was written by Andrew Kuchling and uses the pcre code in ../Modules/.  The old re module has been renamed to re1, just in case you need it for comparison.
51b3aa3d38 New "re" regular expression support. This code is written by Philip Hazel and Andrew Kuchling. It requires a new "re.py" module, too.
04ac894189 Add the four latex2html output directories:  api, ext, lib, tut.
c44d3d6664 Done with tread state descriptions.  Sigh!
86b7db3750 Oops -- needed to fix another place affected by the change back to $(MACHDEP) being just the platform name, without "plat-" prefix... (To be precise, the libainstall target was totally broken.)
0bfd146594 Added strerror()
bc3b13643d Removed emacs.py
eb53ae4928 Fixed some stuff that was incorrectly copied from regex.
7974b0f2d8 Documented __import__, callable, isinstance, issubclass, and slice.
df3dba049d Documented new exceptions and exception classes.
5344d4fd2e Add -N0 to dvips flags to generate page structure comments.
42cefd03cf Checkpoint.  Added docs for the new exception handling APIs and for the interfaces defined in import.h.
474ba3bd46 The directory containing config.h has changed.
6af6d3511e Turns out whatsound.py and sndhdr.py were identical modules. Since there's also an imghdr.py file, I propose to make sndhdr.py the official one.  For compatibility, whatsound.py imports * from sndhdr.py.
bfeb74d4ca install:  New target that installs shared modules in 	$exec_prefix/lib/python$VERSION/site-packages by default.
d99d714ac9 Install install-sh with the other config files. Could be useful for an install target in Misc/Makefile.pre.in.
2ac650f385 New version of PyErr_NewException() that is compatible with -X option.
999e5e921e Initialize Py_UseClassExceptionsFlag to 1.
a7f2e813c9 Remove unreachable "return 1" at end of ensure_fromlist().
aa9606f45a Fix small omission: with all the new code, sys.exit(None) would print "None"; this should be equivalent to sys.exit(0).
d80b3bdc1e Argh; do the same for the "Release" version of the config.
e40afcf154 Fix up include directories for compiling the resources.
f1b0009a78 Fix path search for test data file so it works under more circumstances.
88d8beec0a Oops, forgot one.
ae631f7f45 There was actually a test that ensured that raising an exception A with an instance of a derived class B would really raise an A, not a B.  Since Barry fixed this anomalous behaviour, I though I might as well fix the test!  (Hmm, Barry, did you not run the tests or did you miss that test_opcodes failed?)
a008fa52be Fixed test for socket.error to work when it's a class exception.
0cb96de269 Apply two changes, systematically:
ccf0a44d2d Fix PYTHONPATH for new names; rename tkinter to lib-tk, rename win to plat-win, get rid of test (which is now a package).
b74eca9349 Change PyEval_SaveThread() and PyEval_RestoreThread() to always do the tstate swapping.  Only the acquiring and releasing of the lock is conditional (twice, under ``#ifdef WITH_THREAD'' and inside ``if (interpreter_lock)'').
b4102bf5f8 Fix a bug in this code that made it do the wrong thing when an option was a single '-'.  Thanks to Andrew Kuchling.
b55e07f4eb Fixed up formatting.
1b914b3397 Fixed up formatting, added descriptions for previously undocumented functions.
fd9ef4a26d Removed extern declaration of strdup().  Doesn't appear to be important and causes ugly noises under Windows.
228776cfa8 PyExc_NumberError -> PyExc_ArithmeticError
ac8a9f3ee9 Handy utility to guess MIME type from extension.
3a74993118 PyErr_NormalizeException(): If the exception's type is a class and the instance's class is a subclass of this, then use the instance's class as the exception type.
22ecb71078 Added PyExc_Exception and PyErr_NewException.
271f977686 Seem to be some changes related to DLL version from string resource, again (Mark Hammond is the cause of all this).
ec6809291d DLL version is now loaded from a string resource.
f57c17034a Remove #ifdef __cplusplus.
ff8c9dab19 Bump version and store DLL version in a string variable (for branding).
6c1e5f2033 Get DLL version from a variable.
4f3bf1e383 Don't intern the key string for getitem and delitem.
b4cfdfa077 Removed special Windows defines, at Mark Hammond's request.
83bd9a9c8c Move Widget.config() c.s. to Misc class, so the Tk class also inherits them.
332e14437c Use sys.exc_info() where needed. Use "re" module, making it threadsafe.
f15d15964b Use sys.exc_info() where needed.
c90ad2103e No longer need to be very careful with saving the exception state first.  Don't store the traceback as a local variable, to avoid circular references.
a3beb63eb7 Removing emacs.py, which is obsolete.
da286666b2 Add optional bufsize argument to various calls so we can make the os.fdopen() calls unbuffered.  I presume that it's enough if we can make all three of them (for stdin, stdout, and stderr) unbuffered and don't need to specify different buffer sizes per file -- that would complicate the interface more than I care for.
54e2091ba2 Add an optional hack for threads in Tkinter. This one works!  However it requires using a modified version of tclNotify.c (provided), which requires access to the Tcl source to compile it.  In order to enable this hack, add the following to the Setup line for _tkinter:    tclNotify.c -DHAVE_PYTCL_WAITUNTILEVENT -I$(TCL)/generic where TCL points to the source tree of Tcl 8.0.  Other versions of Tcl are not supported.
a9f02b8bad Add plat- prefix to MACHDEPPATH, now that it's been removed from MACHDEP.
b97ef1768f Remove plat- prefix from MACHDEP macro; instead it is added to MACHDEPPATH in Modules/Setup.in
49f9d8e405 Changes submitted by Marc-Andre Lemburg to add two tables: errorcode maps errno numbers to errno names (e.g. EINTR), and errorcode maps them to message strings.  (The latter is redundant because the new call posix.strerror() now does the same, but alla...)
4518823ad0 In whichmodule(), use __module__ if set.
b6c935a933 Set the completer's word break characters appropriate for Python.
4752966193 Use Marc Lemburg's tb_lineno() to calculate the correct line number. Apparently the traceback object doesn't contains the right linenumber when -O is used.  Rather than guessing whether -O is on or off, use tb_lineno() unconditionally.
2781fbe46c Word completion for the new readline.set_completer() function.
290900a5d7 Reordered and reformatted, and added some cool new features:
ee81af8977 Release interpreter lock around readline call in [raw_]input().
5edcf34fac Change bind() to tag_bind() so it works again.
3bbeb7a318 Fix by Sjoerd: don't want to resize to zero length.
03be7f525e Changes by jack so the generated modules export their types to Python.
a755e68df6 Export type objects to Python
6dd4868681 The command can now either be a string (as before) or a list of arguments for execvp (for those who don't want the shell's argument parsing).
963b871e86 Py_Initialize(): move the call to _PyImport_FixupExtension() to after the phase 2 init of the __builtin__ module, so that multiple interpreters will get the right exceptions.
b01a7fa5f8 initerrors(): Eliminate circular reference which was causing a small but annoying memory leak.  This was introduced when PyExc_Exception was added; the loop above populating the PyExc_StandardError exception tuple started at index 1 in bltin_exc, but PyExc_Exception was added at index 0, so PyExc_StandardError was getting inserted in itself! How else can a tuple include itself?!
412cdc2284 [Py_Exc]NumberError => [Py_Exc]ArithmeticError
25131faffe NumberError => ArithmeticError
2d2c34445b New API PyErr_NewException(name, base, dict) to create simple new exceptions.
65349a3936 [Py_Exc]NumberError => [Py_Exc]ArithmeticError
2f5f6a2595 PyErr_Print(): When printing a class exception, try to dig out the __module__ string and if found, print <module>.<class>, unless <module> == "exceptions".
b81b5c72db Moved pystone to Lib/test.  Use import test.pystone to run it.
d2ba3690ce Skip symlinks; don't bother keeping a list of files that is never used.
7617e05a9b New API PyErr_NewException(name, base, dict) to create simple new exceptions.
0474832d9c Introduce PyExc_Exception as the conceptual root class for all exceptions.
c56ba38350 Two subtle changes:
3d26cc9542 Move the "import readline" to an earlier place so it is also done when "-i" is given.  (Yes, I know, giving in to Marc Lemburg who wanted this :-)
b6a4716298 Add strerror() interface.
a2f626ff58 Patch by Case Roole <cjr@bound.xs4all.nl> to fail with a more explanatory message when the manual directories aren't found. (I have to say I'm surprised that it actually still works!)
7883e1dfbd Entirely rewritten parseaddr() function by Sjoerd Mullender. (Includes a patch he sent me a few days later.)
a1dbe50ec2 Added code to emit trailing ',' for singleton tuples in two places.
83551bfeda Export names for the types defined by this module: TkappType and TkttType.
4fb5b28dfc Three independent changes:
7cc56eb524 When creating a class, set its __module__ attribute to the module whose name is in the current globals' __name__ variable.  If __name__ is not set, ignore this.
626a8d034c Added hint to skip the heavy stuff on first reading.
7ade6da866 As Paul Prescod pointed out, metaprogramming is really something different (programs that write programs).  We are dealing with metaclasses here.  So change the words slightly.
abffd00502 Install config.h under $exec_prefix/include rather than $exec_prefix/lib.
0207e6de38 Added docstrings.  Not for the obsolete functions though.
c172f26861 Deleted find_module_in_package and find_module_in_directory -- they aren't needed and it was a mistake to add them.
3cdb8f3286 Update the description and the example to the new functionality, which is mostly concentrated in a generalized find_module() and the new load_module().  Added the new module type constants.  Declare that SEARCH_ERROR and a whole bunch of module-type-specific functions are obsolete.
4ece95d55a #Added doc string.
4f9f8e3599 Make functionality more closely the same as what's implemented by default.
501d0bb7ad *** empty log message ***
a86f77d4dd Crrected a flow control error that caused the wrong error message when load-module() didn't find a built-in or frozen module.  Also got rid of is_frozen(), which duplicated the functionality of find_frozen()!=NULL.
b95901ec2e Implemented balloon help for EditPythonPrefs
80b5329f76 Added Help module
675cda0787 Added a button to increment buildno, so it doesn't happen automatically all the time.
37b4b49962 Added balloon help for options dialog. Added Help module. Checked in PythonCore.prj.hqx (which had somehow slipped through until now)
01cfe36c3a Added no-site-python and old-exceptions preferences. Implemented balloon help for options dialog.
36b983c2c2 Added old-exception and no-site-python options and balloon help
bf2f6021c5 Added interface to the Balloon Help Manager
6954e34324 Added old-exceptions and no-site-python preferences and upped version to 4.
c6bb281c50 Added old-exceptions and no-site-python options and upped preference version to 4. Added balloon-help item to options dialog.
1c0d851a32 Renamed platform specific subdirectories to plat-*.
5c1f5bd5f6 Renamed dos_8x3 to dos-8x3.
d7500fcbb4 These directories renamed: tkinter -> lib-tk, stdwin -> lib-stdwin.
045e688f6f Patch submitted by Brad Howes (with one bug fixed by me): allow arbitrary nested parens in a %(...)X style format. #Also folded two lines and added more detail to the error message for #unsupported format character.
9905ef9669 Added support for __all__, which should be a list of modules to be imported when the user says "from package import *".
c8bf884248 Added test for __all__.
e632380b55 Dunno, rebinhexed?
8a99a8aa89 Preferences is a general module to get (and set) preferences in resource files with various inheritence rules, parsers, etc.
447e01b04e Preference resource now has a version number
222c34edc6 Moved the include of macbuildno.h to getbuildinfo.c. Putting it here resulted in full recompilation every time.
2e871e4f09 Added SysBeep
5b3c9717c4 The preference resource now has a version number
ac62569fd0 sys.prefix and sys.exec_prefix are now set correctly.
80cf5a8c4c The python preference resource now has a version number, and "optimize" has replaced "don't print".
3b3a287d12 Major overhaul: this is now little more than a user interface, the preference handling code is in modules pythonprefs and preferences. This should finally make it easier for someone (Just?) to write a decent interface to preference setting, and it'll allow setting initial sys.path and such from ConfigurePython.
d0240837fc Run NumPy installer, if present. Added a couple of splash screens to show what we're doing
4cf4de5d11 Brought up to date with new options and env vars.
e8fd143b7e #Adapt the doc string to reality.
6d911018f7 #Oops, missed a plat- prefix (for Lib/generic).
7b877a9278 Some nits, added a whole section on what you could do with metaclasses, and acks.
7ca65abb2f Set it to 1.5a4, now we have dotted-name import...
10499324cf Initialize self.__tempfiles to [] in the constructor (else it remains a shared class variable -- but each instance will attempt to clean it up entirely ob cleanup).
62b297b698 Change packages -> site-packages
d6ead328b3 *Semantic change*: when unpickling the instance variables of an instance, use inst.__dict__.update(value) instead of a for loop with setattr() over the value.keys().  This is more consistent (the pickling doesn't use getattr() either but pickles inst.__dict__) and avoids problems with instances that have a __setattr__ hook.
75626a3b93 Indent the #error so that a strict K&R cpp doesn't complain.
9cf4e2bde7 Change packages to site-packages (so it's clearly not a package itself).
bbd6152fec Prefix MACHDEP directory with 'plat-'.
ab61c6b290 Change the names of the subdirectories tkinter and stdwin to lib-tk and lib-stdwin.  (BTW this was also done in the previous checkin of (toplevel)/Makefile.in, though not noted in the checkin message.)
38bbbc733f Forgot to install the test/output directory!
eeadc04200 Look for uuencoded test files in the directory containing this module, too. (This is necessary because when imported as test.test_rgbimg, the test directory is not on sys.path.)
bc8b2bd95e Look for uuencoded test files in the directory containing this module, too. (This is necessary because when imported as test.test_rgbimg, the test directory is not on sys.path.)
970f5d33c7 Reverse the order in which Setup and Setup.local are passed to the makesetup script.  (Sorry Sjoerd -- I know you proposed this a while ago and I didn't think it would work then.  I looked again and it does work.)
f9fa20b2d2 Pass optional arguments (globals(), locals(), []) to __import__() so it will run as package test, e.g. this will run the test suite:
0c81945808 Bugfix: import A.B from inside package was busted by mark_miss optimization.
10887a3067 Fix details in the test: - traceback should go to stdout! - don't import ni, import t1! - nicer support for command line options, only if run as __main__
16221126d6 Added warning about ni's obsolescence.  Retracted semantic changes (i.e. when using ni, the old __init__.py semantics prevail!)
593801142e Initial revision
f5f5fdbdd0 Significant speedup -- when a submodule imports a global module, add a dummy entry to sys.modules, marking the absence of a submodule by the same name.
81da02e6aa Added feeble test for reload() of packages and submodules.
222ef56bbf Fix reload() for package submodules.
17fc85f2f5 Phase two of package import.  "import a.b.c" and all variants now do the right thing.
114c1eabbb #Added prototype for PyObject_HasAttr() -- must've been an oversight.
6c61242c78 Test set for package import.
d6bf45bcf6 Fixed some details of printing the str() of an exception.  This fixes a core dump when __str__() returns a non-string, and plugs a memory leak as well: the result of PyObject_Str() was never DECREFed.
f394f56c2b Made the 'info' argument to SyntaxError optional, so phase-2 syntax errors are handled (these gave ``TypeError: not enough arguments'').
49bb0e32a0 Fix in trailing comment:  PyDict_SetItemString() does *not* consume a reference count, PyList_SetItem() does.  Very confusing!
aee0bad0a5 First part of package support.
026de19906 Added PyImport_ImportModuleEx(name, globals, locals, fromlist); this is like PyImport_ImporModule(name) but receives the globals and locals dict and the fromlist arguments as well.  (The name is a char*; the others are PyObject*s).
9eb671fac3 Contribution by Hannu Krosing (with some changes).
bd4435abcc Don't use ANSI string literal concatenation (everything is K&R compatible).
8102c005e0 Get rid of most silly #include and #ifdefs near the top; these are all obsolete now it includes Python.h.
6459627b12 Now produces some reassuring output.
9dc2b8ee07 Many more tests, including tests of many optional arguments.
cb91404890 Several changes:
898c915a31 Added some try-excepts so that it can be imported in restricted mode (though some type names are undefined in that case, e.g. CodeType (inaccessible), FileType (not always accessible), and TracebackType and FrameType (inaccessible).
d807b7589b The re test suite is very slow on slower hosts. To save time, only run the first and last 10 tests except in verbose mode.
c7736b9d49 Added first line to set Emacs makefile mode (pretty colors :-)
c12c62ee5a (py-parse-partial-sexp-works-p): Removed as obsolete.  All current Emacs and XEmacs versions should have working parse-partial-sexp's.
dc5d07d952 Different test for Unix -- rely on os.sep instead of sys.platform.
2b3fd76cc7 One patch from Sjoerd and one from Jack.
f01dff7e93 Give in to Mike Meyer -- add *both* lib/python1.5/packages and lib/site-python to the path (if they exist).  This is a reasonable compromise.
ad87d3e826 Give in to Mike Meyer -- add *both* lib/python1.5/packages and lib/site-python to the path (if they exist).  This is a reasonable compromise.
9efe8ef7a1 #Plug small memory leaks in constructors.
c3beda2f27 Plug small leaks: the [de]compress object itself was never freed.
d5f0ce9f28 Added some symbols (I'm afraid more will come).
fd91056d59 Change instructions to require use of PCbuild directory (instead of just recommending it).  At Mark Hammond's request.
9ca064fbb4 At Mark Hammond's suggestion:
4a78a3cf3b Added empty PCbuild directory for use by the NT build process.
64790de195 Added new flags and exceptions; removed AccessError exception.
d19c04a88e Change [_Py_]re_compile_pattern() to return a char*. Since it only returns an error message (or NULL) there's no reason for it to be unsigned char *, and various compilers like this better.
5ade084902 Mod suggested by Donn Cave -- invoke makexp_aix relative to $0 so it doesn't have to be on $PATH.
3f0bff666d Disable the portable multimedia modules (audioop, imageop, rgbimg) by default since they don't work on 64-bit platforms.
fc6efffbf9 #Removed debug print that was accidentally left in.
5ed5c4c364 Add the same _keep_alive patch (by Michael Scharff) that was added to copy.deepcopy() a while ago.  Can't reproduce this but it doesn't break anything and it looks like the code could have the same problem.
15a40394b0 Fix the bug Jeremy was experiencing: both the close() and the dealloc() functions contained code to free/DECREF the buffer (there were differences between I and O objects but the logic bug was the same).  Fixed this be setting the buffer pointer to NULL and testing for that.  (This also makes it safe to call close() more than once.)
2d30840b92 Define BUILDNO in macbuildno.h (incremented by fullbuild)
68a0ee0a87 Can't remember...
898ac1bb46 Added GetTicks() here, so profiling can use a decent timer
faad995380 Fullbuild now maintains BUILDNO for mac builds
04fb06f320 Names changed
625f40de05 #typo
28cad964ec Document newly revamped site configuration mechanism. Damn the criticism in c.l.p!
36764b8b0e Added docs for 'user' customization module.  Renamed libuser.tex (which had UserDict/UserList) to libuserdict.tex.
d7ed683a7e Inline PyObject_CallObject (Marc-Andre Lemburg).
b2afc811c2 Added os.altsep; this is '/' on DOS/Windows, and None on systems with a sane filename syntax.
a28dab5ea2 Write out the dynamic OS choice, to avoid exec statements. Adding support for a new OS is now a bit more work, but I bet that 'dos' or 'nt' will cover most situations...
7922bd7382 Added -X option to suppress default import of site.py.  Also split the usage message in *three* parts under 510 bytes, for low-end ANSI compatibility.
3d90af967d Added NoSite flag.
dcc0c13f74 Two independent changes (oops):
f30bec7bb2 New site.py semantics.  Searches in <*prefix>/lib/python<version>/packages for *.pth files containing directories that are appended to sys.path.
83b6709d8e Swap the sense of the -X option vis-a-vis Py_UseClassExceptionsFlag so that class based exceptions are enabled by default.  -X disables them in favor of the old-style string exceptions.
757af0e7bb Removed obsolete exception PyExc_AccessError.
035574d755 Added Py_UseClassExceptionsFlag, the variable containing the state of the -X command line option.
d5a0ff972d Added extern definition for -X flag variable.
3e613ce79b New file, which is imported by the built-in module when python is started with the -X option.  This file contains the definitions for the built-in exception classes.
6ed41a0a87 Expanded r() function to handle class exceptions.
f488af3360 Parse new command line option -X which enables exception classes.
0596c2ac28 Declarations for two phase initialization and finalization functions for the built-in module.
392d8272bf Added externs for three new exceptions PyExc_StandardError, PyExc_NumberError, and PyExc_LookupError.  Also added extern for pre-instantiated exception instance PyExc_MemoryErrorInst.
2d8adff10a PyErr_NoMemory(): If the pre-instantiated memory exception is non-null (PyExc_MemoryErrorInst) raise this instead of PyExc_MemoryError.  This only happens when exception classes are enabled (e.g. when Python is started with -X).
dd82bb9c14 Added a new variable TESTPYTHON which contains the path (and args) for the executable to use during regression testing.
45140f97a6 Subtle changes to the AIX shared library things to make them work when building outside the source directory.  Courtesy Donn Cave.
cf0be04b2c Should remove getbuildno.o/buildno files in clobber/distclean targets.
beef8aa719 Cprrect stuoid tyops -- was comparing variabes with themselves because of co/cp mixup.
eaedc7ce32 eval_code2(), set_exc_info(): Call PyErr_NormalizeException() the former rather than the latter, since PyErr_NormalizeException takes PyObject** and I didn't want to change the interface for set_exc_info (but I did want the changes propagated to eval_code2!).
c1f088201f Added (binaryfunc) casts to function pointers in method lists.
24a49941b3 Some long variables should have been int to match the 'i' format specifier.
02840fdf84 user.py -- when imported, execfile(~/.pythonrc.py).
522578e90f Complete log of changes since 1.5a3 at the end.
a11b041537 Added faqwiz and webchecker.
8c5fa91253 Added section about multiple FAQs.
f1ead1a63c New installation instructions show how to maintain multiple FAQs. Removed bootstrap script from end of faqwiz.py module. Added instructions to bootstrap script, too. Version bumped to 0.8. Added <html>...</html> feature suggested by Skip Montanaro. Added leading text for Roulette, default to 'Hit Reload ...'. Fix typo in default SRCDIR.
8a2d216047 Removed faqmain.py -- it was an earlier implementation and no longer relevant.
282290f821 Referred to POSIX docs as well as to Unix docs.
09dcff793f Put all prints inside "if verbose:"
ebacc2edff Removed debug print
82bfde9382 Modified for CW Pro projects and new filenames
8505ef8c6c Added #include <WETabs.h>, which had somehow gone missing
3412c5d0fb Modified for installer and new names of various applets. Also cleaned up anything else I saw.
9ffa432972 Modified for new scripting support
21b5d605d8 Moved suites to their own folder
e2ed9df645 Fixed bugs regarding lines starting with '.' (both receiving and sending). Added a minimal test function.
e20aef574a Ignore whitespace between formats (not internal to a count+format).
ab0abdcef8 Explicitly close the socket and temp file in URLopener.retrieve(), so that multiple retrievals using the same connection will work.
36b8f945e7 PyErr_Print(): Use PyErr_GivenExceptionMatches() instead of pointer compares to test for SystemExit and SyntaxError.
26726fe523 Replaced by ReadMe
83cab722f9 Adapted from ReadMeOrSuffer for the new installer
0c96887d35 Handle systemclicks ourselves, in stead of passing them to Sioux. This fixes (or masks?) a bug with Python becoming unreactive during time.sleep() if you have already switched applications before.
0cdb887676 Completed first draft.
910105515e unpack_sequence(): In finally clause, watch out for Py_DECREF evaluating its arguments twice.
09f9547393 regression test for new sequence unpacking semantics
9525df03bf Output for sequence unpacking test
e42b18f9d1 eval_code2(): collapsed the implementations of UNPACK_TUPLE and UNPACK_LIST byte codes and added a third code path that allows generalized sequence unpacking.  Now both syntaxes:
1fb071cc64 Checkpoint.
b2173c3146 Allow assignments to instance.__dict__ and instance.__class__.  The former lets you give an instance a set of new instance vars.  The latter lets you give it a new class.  Both are typechecked and disallowed in restricted mode.
a27d112213 Rename roundup() to roundupsize(), as there's a macro roundup() in the sys/types.h header on many systems that may get pulled in (through WANT_SIGFPE_HANDLER which pulls in signal.h).
81e479a11f Removed some colons that shouldn't be there (probably leftovers from docstring conversion).
27e4aa3168 Arbitrary point checkpoint commit.  Take no notice.
bff110f3f1 Examples of metaprogramming in pure Python.
558f66ff53 Added a few more tests of exception class raising
ac405ce3f9 generated output for new tests
d543077aa6 Added tests of the new builtin functions issubclass() and isinstance()
4249f54b28 cmp_exception gets promoted (essentially) to the C API function PyErr_GivenExceptionMatches().
c0dc92af7d Three new C API functions:
cde8b1ba0c Two new built-in functions: issubclass() and isinstance().  Both take classes as their second arguments.  The former takes a class as the first argument and returns true iff first is second, or is a subclass of second.
21c5c8fa5b Correct off-by-two-pixels error.
d14c06819e Add unsupported variable EXE which can be set to .exe on systems where the executable must have that suffix.  Note that there is no corresponding support in the top-level Makefile because I'm not sure that the install targets there make sense under these circumstances.
1171ee6aaf Added configuration tests for presence of alarm(), pause(), and getpwent()
5de31fc094 Oops, don't suppress echo of the rm command in l2hclean!
03ff6f7474 Simplify LaTeX2HTML targets && support re-use of output directories (which saves re-generation of images).
cd649654d7 Reverse the search order for the Don Beaudry hook so that the first class wins.  Makes more sense.
289f97d0ea Changed description of SchedParams() in the following way:
2999607e59 Added missing "\end{funcdesc}" after FindFolder documentation.
e3c0d5eb34 Added new Py_IsInitalized() API function to test the 'initialized' flag.
779133c707 Removed JF's dollar-Log-dollar RCS turd that caused compilation to crash due to GvR's last check in message :-).  Will try to convince JF to remove all this evilness.
d7a7100c99 Remove redundant decl for PyOS_InputHook.
ab589b945e Completely disable the declarations for malloc() and friends.  Use #ifdef though, so if you still need these for a really backwards compiler you know what to do.
0078aaf950 Add warning about dumb SGI make.
36f8e2d1db Use lseek instead of ftell; compensate by adding BUFSIZE
c6ef204830 Added /**/ around #end tags
bae6523a75 Must remove conflicting files from archive *before* adding signalmodule.o, because some ar programs are too smart for us...
08157f8db6 mention cPickle and cStringIO
24b1e75c1f the usual
b904629f75 Fix some badly botched prototypes for PyRun* c.s.
8b523f9bd8 Added reop
5f896a4de0 Added missing newline to warning msg
8456161fcd Richard Jones: I think we can be confident in using 'CC="-Aa -D_HPUX_SOURCE"' on HP 9.x and 10.x platforms.
1bf0bf40b4 Got rid of HP-UX comments (which seem to be out of date -- one should use -Ae).
6b9fdf529a Globally renamed join() to joinpath() to avoid compilation error on Cray.
725d941f0f Renamed strndup to pystrndup, to avoid conflicting prototype in GNU libc on some platforms.
b6784dc53f Interpret three slashes in file: URL as local file (for Netscape on Windows/Mac).
4f46fc6d57 When we have signalmodule.o, remove intrcheck.o as well as sigcheck.o.
aa61505fd2 Use a counter instead of a Boolean to check for initialized; n calls to Py_Initialize will be undone by n calls to Py_Uninitialize.
558be283bf Make sure the objects returned by __getinitargs__() are kept alive (in the memo) to avoid a certain kind of nasty crash.  (Not easily reproducable because it requires a later call to __getinitargs__() to return a tuple that happens to be allocated at the same address.)
86c052e83a Use 'buildno1' instead of '@buildno' for temp file since DJGPP's bash doesn't seem to grok @buildno.
5aadaf5a8e Need to define AR since it is used, and not all Makes define it by default.
d0417ecce5 Removed support_print docs.
3261719848 Docs on new tcl/tk, new build tree layout
f10786baca Very sketchy preliminary docs on new applescripting functionality.
97de10cacf Added reop
78c3cc4f0c MkPluginAliases now knows about fat PythonCore (and all resource files got binhexed again)
03a00a8081 PythonCore is now a fat shared library, the plugin modules aren't fat, unfortunately, this turned out to be too difficult.
ef3138f9ad Moved assert.h to ../Parser directory
5b02078e31 Alas, the thread support for Tk didn't work.  Withdraw it, until I figure out how to do this right.
fd7a0b871f Made lookdict nearly twice as fast, resulting in a 5% overall improvement of pystone.  Vladimir Marangozov.
2da391f387 I'm tired -- checking in more news items.  This isn't complete; I'm about halfways.
8a81d27d58 Remove remark on python15.lib being in the Debug subdir only.
b27d8d8cf2 Changed the way python15.lib is included in the other projects. Per Mark Hammond's suggestion, add it to the extra libs in Settings instead of to the project's source files.
92dfa4ffe1 Use correct keyword parameter when calling copy with answer option!
a412220bbf Change default verbosity so that there are only three levels left: -q, default and -v.  In default mode, the name of each test is printed. -v is the same as the old -vv.  -q is more quiet than the old default mode; that's fine I think.
6688d35c43 Removed ancient FAQ from distribution
25f93036bb Moved inclusion of PURIFY in LINKCC to configure
34b359732c No longer used.
e7038425b1 Tweaks to cope with strftime returning 0 without error for %Z
f07eaea134 Forgot to check in the fixed output for print
ed2554a396 Casts by Jack to shut up the Mac compiler.
bad3c013d2 DeleteTimerHandler was accidentally #ifdef'ed out for macintosh with Tk 8.0; this was a mistake.
e229d8636d Misc Mac mods by Jack.  Added libmacic.tex, and these patches:
9918e0c750 Add missing comma to make a tuple of (tagOrId).
79fa8b0abe When making all, don't make sharedmods.  That's now called separately from the toplevel Makefile.  (For AIX, but doesn't hurt elsewhere.)
506ef9ec81 Change the order in which things are built -- build the shared modules after the main interpreter.  Needed for AIX.
0393e18b18 Fix LINKCC for AIX
92c90329d1 Recognize https:// as URL as well.
ce32096661 Oops.  Of course, print b should also be print `b`. :-(
57e846f803 Use a trick to make the test for GMP v2 to work when GMP v1 defines __GNU_MP__ as empty: #if __GNU_MP__ + 0 == 2 (Untested.)
5060b3be9b Consistently change Python-C API to Python/C API; added lots of new introductory text for reference counts and error handling, with good examples.
787bdd37a0 PyTuple_SetItem should require that the tuple's refcnt is one!
607b33a1fe Different strategy regarding whether to declare getrusage() and getpagesize() -- #ifdef doesn't work, Linux has conflicting decls in its headers.  Choice: only declare the return type, not the argument prototype, and not on Linux.
54dec59b56 set sharedlib extensions properly for NeXT (Ted Horst)
749af7c1c8 the usual
79c970cc49 typo in next config
9b24649118 This commit was manufactured by cvs2svn to create tag 'r15a3'.
1fed5b3fbd Another typo (importand).
bda6fe6bb8 Final touch...
b235d9e673 Tweaked all l2h targets to remove the target directory before renaming the intermediate target directory.
09270b51e4 Fixes to make it pass latex without complaints.
e7fe864c1e Type ("thgis").
4952369e61 New, more complete list of what's new, pointing to Misc/NEWS for the whole list.  Also changed all references to the FAQ to point to the FAQ wizard.
c95a6c1af5 Use imp.find_module() as the most certain way to find the test data.
57fa217b01 generated by regrtest.py -g
6eb4b6a0bd test the zlib module only produce output if somethign goes wrong
53665e571f Last minute changes for \B.  AMK.
cf00505325 Added tests for \b, \B (AMK).
827ea7cf5d Last minut changes for \B, \S (?).  AMK.
f2e917e8e5 Regenerated
8f0fab78ce Added support for WCTabHandle, AuxWinHandle, PixPatHandle: no reason for blacklisting them.
eaf3c9bed7 Added #include <string.h> for memcpy()
69b43ed5bc Added support for GDHandle, CTabHandle, ITabHandle and CCrsrHandle: no reason they were blacklisted, we can handle them as generic Handles.
c7fefed32c Added GetAuxiliaryControlRecord and SetControlColor, there was no good reason they were excluded.
f69633e4a1 Made AEDesc_{New,Convert} global
61000333bf Another checkpoint -- reorganized, in sections.
9085822f28 the usual
1574d78550 Date
34900f8147 .
7c14103d77 Keep gcc -Wall happy
f0b69f01eb Checkpoint checkin of list of changes.  Much more to follow, but it's late...
ff712aa8ab The usual.
f84a539d38 Added std copyright notice.
939e4c1efb Oops, there was a bug in the output formatting - the last printed values would overwrite the next value.
1acceb0650 Added AMK's first cut at docs for re.py
ff7d104778 DevStudio (CV++ 5.0) Project files.
831c2583c8 Updated for new situation; added VC++ 5.0 info and new path strategies.
2b41fdccd3 Moved some non-standard format characters out of the standard list. Also moved %c and %Z out of there, even though they are standard, because these are locale dependent (and e.g. on Windows and Mac they return different strings).  Finally, sorted the tables slightly different, to match my standard docs better (%a before %A).
3485bb6f44 Added logmerge.py
6f0cf7ee20 Consolidate a bunch of CVS or RCS logs read from stdin.
c4d6c4d950 OK, reop is safe again.
f1c018de87 Fixed refcount bug (thank you, Purify and AMK).
644c17d2af Several bug fixes.  -- initialize length to DEFAULTALLOC and not 0  -- resize string before returning (to remove '\000' padding)
4a944d7a47 Added more stuff on initialization (still rudimentary)
59a61352ad Added new intro sections (incomplete); fixed various typos
91c7c933cc New version (changes are so minor that I don't bother to explain them).
fee9faa044 Of course, this file should be empty except for an informative comment.
193a11e389 Add a separate SRC directory and insert it in front of the path.
1dccdc221c Add missing semicolon to '&gt;'.
4d3376a80f Added cvsfiles.py and treesync.py
a554107802 Source tree synchronization tool (for Windowes, mostly)
30e53c0c39 Print a list of files under CVS.
9189bdabd5 support C++ comments
5526e394a2 set LOOPS to 10000
77b300895c Add XXX warning about fishy line
49b1226781 Use _beginthread() and _endthread() in favor of CreateThread() and ExitThread().  As discussed in c.l.p, this takes care of initialization and finalization of thread-local storage allocated by the C runtime system.  Not sure whether non-MS compilers grok this though (but who cares :-).
d47a0a86b4 Added Jim Fulton's PyImport_Import(), which calls whatever __import__() hook is currently installed.
6d8841c079 Added a bunch of XXX comments about things I'd like to see changed...
0d2390c549 Merge Mac and Windows mods (which mostly affect the same problem -- no usable createfilehandler).  Define HAVE_CREATEFILEHANDLER to test later.  Also other Mac specific patches by Jack.
c4c26414c5 Print `a` so encrypted text is shown in ascii, not binary.
9faabb8d23 Added prototype for PyImport_Import().
3572d3718b Updated platform specific notes (it is now more common to have this) added some caveats.
8f06247b51 Added buffer_info() docs.
98046b90d0 Minor typo only.
dac444703d Add try-finally around main loop.
20abb4e6b4 Added (commented-out) defs for use with the build tree instead of the installed version.
40d635848d Added QNX remarks.
76c5fe2d06 The usual
e83870131b Don't call sys.exit() all over the place -- simply return the exit status from main() and call sys.exit(main()) in the startup stub at the end of the file.
257c772afa Comment out use of reop.expand_escape and reop._expand until their bugginess has been fixed.
0318bd6ae6 Use _Py_re_match/search instead of re_match/search; these may become different in a future version.
1530c87985 Fred Lundh's latest versions.
f53c86c2b6 Add dummies for create/delete filehandles, just so that vanilla Grail 0.3 won't break on Windows.
fcaf26e245 Documented mime_decode_header() and mime_encode_header().
88bb808d77 Fixed (and documented, see Doc/libmimify.tex) mime_decode_header() and mime_encode_header().
7ba3de44a2 Added Windows NT instructions.
58a594829c Changes for building under windows.
41b9f00e8f Many changes.
4036c9c2a1 Probably the last VC++ 4.2 makefile I'll check in. After this I will be using 5.0, which has binary workspace files...
f644882fb4 Small changes to readme and makefile; tested for 1.5a3!
95e8053a9f 1.5a3 prerelease 1 from AMK
a74ef66ac8 Must update the available space in the output buffer after realloc. (Fixed in PyZlib_unflush.)
00b299afea removed getpath_nt.c in favor of revamped getpathp.c
eea1449a34 Much rewritten.  Added Win32 registry stuff (from getpath_nt.c, which is now obsolete), and changed the default path calculations. $PYTHONPATH is now added as a prefix (like it's always been on Unix); $PYTHONHOME takes precedence over the program pathname; and only one landmark is needed.
407a22d2ce Made it real.  Changed locking() to work with file descriptors instead of Python file objects.  Added open_osfhandle() (Mark had done some work for that), get_osfhandle(), setmode(), and the console I/O functions kbhit(), getch(), getche(), ungetch(), and putch().
8f1b651980 Some changes to make it work on NT; add the directory where the binary lives to the end of the path.
0e6ae93894 Moved PyWin_IsWin32s() here.
5137ea9e27 Remove #define main; remove vc40 from PYTHONPATH.
abed54ab4a Fix bug with \< (AMK).
6dc61b110f Add try-finally to close the file after loading it in ModuleLoader.load_module!  (Thanks to Daniel Larsson who complained about this.)
6af4abdba0 Various changes by AMK, e.g. remove \e, \cX, add \v
c24f038464 Changes by AMK:
52d6832554 Add syntax for hex,octal
142eeb8339 cPickle release 0.3 from Jim Fulton
f55afae3c6 New dialog from Fred Lundh
9d9af2c7a8 Fixes for the Mac. (Jack)
a5e9fb6a65 Changes suggested by Jim fulton: - Moved most imports to the top, for faster loadingf when using ni. - Always open the temp file in binary mode.
ca54982b2a Added TemporaryFile and wrapper class by Jim Fulton. Look in more env vars (for NT: TEMP, TMP).
3fb1aea0ae Added decls for stuff from myreadline.
7242905385 Megapatch for IRIX 6 by Sjoerd.
8e5e4461a8 Added prototype for various finalizers.
bb301c53ed Added prototype for PyGrammar_RemoveAccelerators().
de4a4ca2dd Added buffer_info() method that returns address and length in bytes of the buffer used to hold the array -- for dangerous low-level I/O.
ea46e4d93c Fix mixup about PyErr_NoMemory() prototype.
741689d5f3 Use string interning and caching to get speedups on the mac (Jack).
e5b4026881 Use strerror on the mac if using MSL (Jack).
15974ad5e6 Bump MS_DLL_ID to 1.5.0.
d510b72fff Allow paths without drive specifier (Jack).
e2ad88c202 Rewrite normcase() using string.translate...
efa683726f Treat all HTTP/1.* versions the same.
2567dd6d44 Two changes:
44620646fd Renamed Py_input_hook to PyOS_InputHook. Also cleaned out some CR's left by the VC++ editor.
0357d02eab Rewrite using class, to make waiting for processes possible; by default children are waited for automatically.
0b4b8a21ce Changed indents to 4 *spaces*; added Emacs variables to avoid inserting tabs.  All this (and the previous patch) in preparation for porting to NT.
9a6e855a27 Support using -p/-P to point to the source/build directory instead of the install directory.  Added -h option to print the full usage message; by default, only two lines are now printed for errors.
516b6208c7 #Fixed two byte-compiler errors
c72c11c9e3 #Checkpointing X/Emacs 20'fication of this mode.
98d9d09090 Added O_BINARY and O_TEXT (for Windows).
9c43c590bc More emphasis on os.environ's calling of putenv; and added hint about flags for open().
7d6b7d3f54 #Bumping to version 3.0
48f662de92 mkalias() now has an optional third parameter to create relative aliases (Just)
756a69fa0d - Added classes to support class/property generation by gensuitemodule - Fixed Property class: selector is a 'type', not an 'enum'
a8441ded7a Added (dummy) PyOS_FiniInterrupts
7330b39a41 Adapted for 1.5a3: Py_SupressPrintingFlag is gone, and Py_SetProgramName replaces Py_GetProgramName
4be0ce3bc6 New version number, new tk resources, new error numbers, new GUSI
12f318a6fc Don't define ENOENT when compiling with MSL
04df97cdd8 CW11 projects replaced by CW Pro 1 projects, and all cfm68k/ppc projects unified (as much as possible: PythonCore is still separate).
e3fa8747fa Modified for CW Pro 1 projects. Convention used: .mu files are old project files, which have to be cleaned up before checking in, .prj files are CW Pro 1 projects (which are always clean). Prj files are still binhexed, even though they only have a data fork (and, hence, could be checked in in binary mode).
6654422407 Generate class, property and comparison code (finally!). The resulting code isn't ideal yet: xxx.Window(1).Paragraph(3).font will only work if all the classes and properties are declared in the same suite, but at least font(Paragraph(3, Window(1))) always works.
622f73f188 Remove unised variable
02c0467f67 Rather unsatisfactory temporary hack to get it to run under WIN32 -- remove file handler interface, don't use Py_input_hook.
29c1ea5af0 Got the new structure working with MSVC 4.2. main_nt.c is gone -- we can use Modules/python.c now. Added Mark Hammond's module msvcrt.c (untested). Added several new symbols.
fb84255e67 New version of Vladimir Marangozov's AIX hacks -- simpler etc.
b06df27843 --with-readline is obsolete (and some editorial stuff in README)
3c7c678b94 Got rid of --with-readline, at last.
9b5dbedf43 Attempt to import readline at interactive startup.
717c6f95be Move GNU readline interface to ../Modules/readline.c. Add Py_input_hook (used by _tkinter and perhaps Gist).
0969d36275 New mechanism for GNU readline interface, via module
570278be6e Add test for function comparisons
83f9ad8399 Fix bug in comparing function objects detected by Sjoerd:
d6615ab30c Get READABLE c.s. from _tkinter instead of conditional definition.
1d529d1ecd Add a cast to the call to _Py_Dealloc in the expanded version of Py_DECREF, to reduce the warnings when compiling with reference count debugging on.  (There are still warnings for each call to _Py_NewReference -- too bad.)
7f400be210 Add pointer to new BSDDB module.
668e441a86 purported linux portability patch (Oliver Andrich)
5d1770ee24 Py_Cleanup() is now Py_Finalize().
cc283f56a7 Merge Py_Cleanup() into Py_Finalize().  Call the various small Fini() functions.
085d269f1d New rules for deleting modules.  Rather than having an elaborate scheme based on object's types, have a simple two-phase scheme based on object's *names*:
f9c90c533e Renamed a local label that was accidentally grandly renamed to 'Py_Cleanup' back to 'cleanup'.
fbbd57e4ca Added _Fini() routines to free up some memory
971a7aaeac Change the Fini function to only remove otherwise unreferenced strings from the interned table.  There are references in hard-to-find static variables all over the interpreter, and it's not worth trying to get rid of all those; but "uninterning" isn't fair either and may cause subtle failures later -- so we have to keep them in the interned table.
1f39c5c666 Added separate free list for cfunction (builtin method) objects, for a few percent speed up.  Also add PyCFunction_Fini() to discard it.
404b95d9ba Provide a dummy empty directory as f_builtins instead of failing, when no valid directory is passed in.  This prevents __del__ to fail when invoked after __builtins__ has already been discarded.
a0d349f46a Added separate free list for instance method objects, for a few percent speed up.  Also add PyMethod_Fini() to discard it.
e09fb55f29 Added _Py_ResetReferences(), if tracing references. In _Py_PrintReferences(), no longer suppress once-referenced string.
d085e88d3c Added Py_Malloc and friends as well as PyMem_Malloc and friends.
5c159bd855 Plug memory leak (DECREF doc string properly after inserting in dict).
7995ed204a The reload(sys) test no longer works due to changes in the import semantics.
b02158efa3 Oops, one more checkin.  Use the new tstate/interp interface.
25ce566661 The last of the mass checkins for separate (sub)interpreters. Everything should now work again.
40b33c648a Removed fatal errors from Py_Initmodule4() (and thus from Py_Initmodule(), which is a macro wrapper around it).
aee094cc60 Added finalization routines.
08c166152e Add finialization routines; fixed some memory leaks related to this.
05f7c50bfd Free the malloc'ed buffer that holds the command once we're done with it.
eb46d67ce5 Avoid function calls to access the current thread state and builtins -- the thread state is passed in as an argument and the builtins are a member thereof.
8cf0476474 Added internal routine PyString_Fini() which deletes all interned strings.  For use in Py_Finalize() only.
29e46a9a12 Mass checkin (more to follow for other directories).
7a2d6112d9 Add cast to PyInt_AS_LONG macro, as suggested by Marc Lemburg.
2981bc7a65 Add cast to PyFloat_AS_DOUBLE macro, as suggested by Marc Lemburg.
d0924f4585 Add a simple way to enable purify; now you can set the Make variable PURIFY (e.g. in the Setup file or on the make command line) to point to the purify command, to run purify.
c46d22e52e Print ps (process status) for us when starting a new thread.
35d43377b4 Functionality enhancement: allow other threads to use Tk commands while one thread is blocked in mainloop().  Also, handle signals (not just interrupts) as soon as they happen.
3e819a7aa8 Compatibility with Tcl/Tk 8.0b*.
f4e32c729b Add definitions for symbolic constants LOCK_{EX,NB,SH,UN}.
55b9ab5bdb Extend the "Don Beaudry hack" with "Guido's corollary" -- if the base class has a __class__ attribute, call that to create the new class. This allows us to write metaclasses purely in C!
fd16ca4542 Added mimify docs (Sjoerd).
74d25e7d8a Mention decode_base64 in example.
bc0cd37fe2 l2h target:  l2htut was listed twice and l2hapi was skipped.  Fixed.
5e0625762e Final set of CW11 projects, before switch to CW Pro 1.
ff0ec52d3c Finally plug the memory leak caused by syntax error (including interactive EOF, which leaked *one* byte).
6fc06e770f Plugged a leak.  (The same as the one plugged in compile.c -- forgot to free lnotab).
5ec8e4b5ff Moved the special compile of getbuildno.o to ../Makefile.in. A dummy getbuildno.o (with a number of 0) still gets built here, to make the library complete.
1eec528d5e Build getbuildno.o here, to adequately update it every time a new python executable is built.  (It still won't reflect builds of the library only, but since the default make target builds the python executable, that's alright.)
630924f190 Use Py_NewInterpreter() and friends.  Remove saving/restoring of std files.
275558cb9f Plug a leak in code_dealloc() (and reordered the deallocs to match the order of the variables in the declarations).
9a876a4500 Tweaks by Lars Wirzenius to parse some more forms of illegal dates: the comma after the day name is optional if it is a recognized day name; and the date and month may be swapped.  Thus, the following two test dates will now be parsed correctly: 	Thu, Feb 13 12:16:57 1992 	Thu Feb 13 12:16:57 1992
4e5cbcf5af Added createmessage() -- Lars Wirzenius.
2e2525fd3c Patch by Lars Wirzenius to allow f.readline(length).
b065452ebc Bump up the version number.  The date still needs to be set (Guido will have to do that one!), but at least the version will match the release version.  (1.5a2 got skipped for this.)
12d9eac0a2 A couple of grammatical nits.
ed57d7663e Regenerated; __assert__ becomes assert.
ef3d02ebb9 Removed some variables that are used to exchange data between import.c and importdl.c: the MAXSUFFIXSIZE macro is now defined in importdl.h, and the modules dictionary is now passed using PyImport_GetModuleDict().
766118525a Changed the patch level to 1.5a3, to avoid confusion with a2 (I'm not ready for a release yet).
661aebcbde New test for generic Makefile.pre.in
a955967a5b Added description of the extend subdirectory.
895e1052e3 For use with Misc/Makefile.pre.in, the libainstall target must install Modules/python.o.
bef03ae032 Adapted to the new build system.
ded2e207f4 Change libainstall again: need to install fewer files for "freeze"; add Setup.local to list of installed files.
a94145118a frozenmain.c is now also in the library, with entry point Py_FrozenMain().
b3afce5763 Updated for new style build/install; much simpler!
019db5d73e Oops -- this contains frozen bytecode, but it was Python 1.4 bytecode!
a88446aa4a Some improvements, e.g. -L/depot/... is not needed.
e0c6901369 Added leading comment and security check.
42ded89c08 Reformulate security check using getsockname().
eca991df27 Change security policy -- only accept requests from current host.
d1bef00f66 Removed old signature.
14b0e700a0 Updated description for embed; added pysvr.
5c8b991175 New example of threaded embedding
6e614e3d2a Updated the Makefile to work with the new build strategy.
8aea8d9600 Remove -s option and $PYTHONSUPPRESS environment variable.
5624abd086 Emptied (in expectation of a laundry list of what's new in 1.5).
ecd3b153d5 Added note about libpython1.5.a.
132cd063f5 Some new names.
68de37973f Add the option to pass an open file object to GzipFile.  This obviates the need for the StringIO subclass.
6576dd6ad6 Document new 'quote' flag to cgi.escape().
64c6620934 Add optional 'quote' flag argument to escape(); if true, translate '"' to '&quot;'.
1e8c8a20f2 New dialog routines (Fred Lundh)
65c78e18b5 Use dictionary's update() method in _cnfmerge().
7a337c1c79 Removed Py_SuppressPrintingFlag flag; added new PyEval_{Acquire,Release}Thread() calls.
496f8f632b Removed remaining support for Tk versions below 4.0.
9cc8a20cd2 Moved PyEval_{Acquire,Release}Thread() to within the same #ifdef WITH_THREAD as PyEval_InitThreads().
4c125700d1 Adapted to new build procedure (hopefully correct -- can't test it!).
534ac094f9 Removed a bunch of extern declarations of functions that are now properly declared in Python.h.
57d8e3f1c7 Added declarations for Py_{Set,Get}ProgramName() and a bunch of other Py_Get*() functions.
5617f32c5c Added decl for PyInt_GetMax().
8fb26ede51 Make it return a _const_ char*.
f6ca6aa869 New build procedure.
914fbd9ae6 New build procedure, using a single library libpython$(VERSION) at this level.
1fd74a713d The usual
642b67809e Set $VERSION here (fixed to 1.5). Remove some unneeded AC_SUBST() calls.
a847889607 Moved PyEval_InitThreads to inside WITH_THREAD, where it belongs.
e6fb2043ce Got rid of "suppres printing" flag.
4c04be64b3 This is now the "real" main program -- it calls Py_Main(argc, argv) which is in the library and does all the work.
3768fb1097 Tracking changes to Py_Main():
ed52aacb33 This is no longer the real main program; it now defines Py_Main(), so it can be placed in the library.
ad6dfda9af Moved some stuff here from main.c (part of a big restructuring - wait for more!).
0c88e1fd96 Remove confusing usage comments at end.
618af4b3ef Include pystate.h earlier so it can be referenced by ceval.h.
75aa0d6abe Use the new functions PyEval_AcquireThread() and PyEval_ReleaseThread() (in ceval.c) to set/reset the current thread, and at the same time acquire/release the interpreter lock.
2fca21f762 PyEval_SaveThread() and PyEval_RestoreThread() now return/take a PyThreadState pointer instead of a (frame) PyObject pointer.  This makes much more sense.  It is backward incompatible, but that's no problem, because (a) the heaviest users are the Py_{BEGIN,END}_ ALLOW_THREADS macros here, which have been fixed too; (b) there are very few direct users; (c) those who use it are there will probably appreciate the change.
c864ad695f Nit: round delays to 0.1 second.
edca74a627 The usual
b5875b642e Set OPT to -g -O2 (or -O2 when -g not supported) when using gcc.
61c270345c added code.py; codehack.py is obsolete
1c78cf3317 Added label{module-spam}
ca1182b262 Remove pprint from the list of undocumented modules.
d2b9f81ec5 Add entry for the pprint module.
18600a4229 Add libpprint.tex to the lib.dvi dependencies.
e0ffabe375 Slight mods to make the module conform to the documentation.
ee8d3ca4cf Documentation for the pprint module.
1557a7314c Checking in new module code.py -- utilities dealing with code objects. Currently, contains one function: compile_command(), which helps determining whether a source string is complete, incomplete or in error.  This is useful when writing your own version of the Python read-eval-print loop.
f357d3ef52 This module is now completely obsolete. Noted this in the XXX comments. Also, changed all three functions to use the attributes if they exist.
c444865994 No longer need to use codehack -- use co.co_firstlineno instead.
2deb73a961 Use sys.exc_info() instead of sys.exc_{type,value,traceback}. Also corrected a typo in format_stack (t should've been f).
4994657c5f Some new tests by Jeffrey
71fa97c60d Jeffrey's latest -- reorder my chages somewhat, removed some of his own cruft.  Added \g<...> references in replacement text.
c12da6980f Huge speedup by inlining some common integer operations: int+int, int-int, int <compareop> int, and list[int]. (Unfortunately, int*int is way too much code to inline.)
77eecfa94d Patches by AMK to check that the db is still open.
b8ad024a4e Add 'return' keyword before error calls.
74fb303997 Jeffrey's latests
9e18ec7dc9 Correctly implement sub, subn, and split.  Also correct and augment the cache code.
a4f1a78b6e Jeffrey's next installment
32d6f3c0ce Corresponding output.
06c0ec94e4 Several additions from Jeffrey.
23b225741c Added tests for sub, subn, and split.
b15e5ed689 Use 'and' instead of '&', which is a (La)TeX control character. "make lib tut ext" should now be errorfree.
e3d5fc50a1 Add AMK's seealso environment that is now used in the library manual at some places.
e47da0ae04 AMK's megapatch: 	* \bcode, \ecode added everywhere 	* \label{module-foo} added everywhere 	* A few \seealso sections added. 	* Indentation fixed inside verbatim in lib*tex files
3c2a056fdd Extensive changes by AMK.
5320998da5 Note that getvalue() must be called before close().
0fcbe8dde2 Added libni.tex libgzip.tex
41884a9b1c New from AMK
0245569fd1 New version (interim) by AMK.
eb1633ec6e Removed mailbox, SocketServer, cmath -- these are now documented!
84057a3874 Added cmath
246d96555f Typo in example.
14a8024b04 New cmath module docs, by AMK (with additions and deletions by Guido).
6c9db41d30 Added fileno(); added readlines(sizehint). AMK's sed job.
debf2e8a53 Fix dropped word.
c3fb88be8b Fix xover implementation according to Fred Lundh.
a0e4c1bffc Jeffrey's latest -- seems to solve most problems!
75fce308bc Add flush() method to fake file.
db2b70cb99 Fix bug found by kjpylint; change doc string to avoid "(" in column 1.
f0f7aad30f Added remaining PyThread symbols.
cfaf143956 Added a few new undocumented modules.
9e48b272b9 Catch all exceptions in test modules.
65cd989441 Added output from new tests.
9ddd9dad80 Fixed a syntax error caused by a bad line in the Perl source.
26d80e6714 Correct inf. while loop.
e8b81313db Merged Jeffrey's changes in.
16bd0ff16a Merged my changes in, and added all converted Perl tests.
337c6d41d4 Jeffrey's version
9f845ec64b More changes by Jeffrey.
23b8d4c15e Tweak re_tests and test_re to differentiate between groups that have no value and groups that are out of bounds.
847ed4afb5 More tweaks; re.py is nearly there...
531097502c Fix group() -- should be tuple even when re has exactly one group.
09bcfd649a Jeffrey's latest -- almost there.
04a1d74229 Jeffrey's newest
70f107f63d Three fewer incorrect failures
faf490898d Reformatted. Fixed some problem with uninitialized syntax tables. Jeffrey.
7449540986 After some discussion with Jeremy and Fred, decided to limit the default urlparse cache size to 20 instead of 2000.  The main use of the cache seems to be to gain some speed in Grail, which is calling urljoin with the same base for each anchor.  2000 is a bit too big for Jeremy, who doesn't need the cache at all.  20 should keep at least 95% of the Grail speedup while wasting an insignificant amount of memory in Jeremy's application.
5d8123f34a Reordered list of methods to hopefully put the most frequently used ones near the front.
74ba24758e Reordered list of methods to hopefully put the most frequently used ones near the front.
4dddff8ddf Upped version to 0.6.
9b1718c0e7 New PythonPowered logo image.
1d8b7583dc Removed the traceback output in non-verbose mode
5d6de256d5 New from Jeffrey; small nits.
8a9a4a2336 Jeffrey's latest.
035aae0f09 Some small nits.
185147f1d0 Test urlparse cache with try/except instead of has_key. This makes it thread-safe again.
7ffbd2f86c This is pretty pathetic and full of errors, but it makes the regression test not complain about test_re.
8e0ce30ce4 test suite for re.py
007c80e5b7 Added reop (moved reop and regex to non-shared section). Added -I$(DBPORT) for bsddb compilation line.
105bd989e3 Added /usr/bin/env python and made executable.
1243ae7f07 Allow '@' character as end of line padding in uuencode format. Not sure why this is generated, but this fixes a problem with a particular file that was received with the following final line:
e3cd151d1f Use the modules base64, quopri, and uu, instead of external programs to decode/encode the standard transfer encodings.
31cbc846ac Oops, some clarifications to conditional breaks.
255d790077 Added (minimal) doc for conditional breakpoints.
9e1ee9715e Support for conditional breakpoints (Jim Fulton, with some changes).
668361766a Normalize whitespace.
ff02e1ddde Support for conditional breakpoints (Jim Fulton).
65c28b7efb Removed debug print in set construction. Changed some '==' to 'in' (Tim Peters).
63e18195b8 New version from Jeffrey after I complained about some glaring bugs.
443389fd2e Add MALLOC_ZERO_RETURNS_NULL symbol.
ad71370279 Added check whether malloc(0) returns NULL or not.
4b11c74f7c Only add 1 byte to all malloc calls when it is known that malloc(0) or realloc(p, 0) returns NULL.  See changes to configure script to be checked in later.
5ca1b711b5 Straight from Jeffrey Ollie's web page.
b65e85cb73 Fix problem discovered by Greg McFarlane: when an imported module replaces its own entry in sys.module, reference count errors ensue; even if there is no reference count problem, it would be preferable for the import to yield the new thing in sys.modules anyway (if only because that's what later imports will yield).  This opens the road to an official hack to implement a __getattr__ like feature for modules: stick an instance in sys.modules[__name__].
e6648967b7 (py-shell): Remove support for Emacs 18, implicitly add support for Emacs 20, and bind TAB key to self-insert-command in *Python* process.
d247812521 Two improvements suggested by Tim Peters: speed up random() since we know Python integers are at least 32 bits long; and avoid zeros in initial seed value.
db25f32849 New versions straight from Jeffrey Ollie's web site
db9e20f418 Fix bug reported by Just: anonymous arguments used for tuples should have a unique name, otherwise they get squished by locals2fast (or fast2locals, I dunno) when the debugger is invoked before they have been transferred to real locals.
475d51d7b2 Wrapped up the ~/.netrc support.  This is basically just the changes Guido & I discussed to the original version way-back-when.
dd527332b7 fixed typo, "header" ==> "headers"
50ea91976b Mods for user mainloop event handling
d080eddf8e Added dopendingevents call Added asyncevents call to enable asynchronous event handling
3f5aef7fef Allow specifying own resources for all dialogs Allow changing labels on yesnocancel dialog
1b3904b998 Module to buffer stdout/stderr until stdin is read. Useful for windowing programs, together with option to keep console window closed until needed.
0b34dd51b5 Regenerated
883765eb71 added SetEventHandler
3757523f1e Adapted to new event handling. It is now also possible to abort out of an AESend with command-. (unless specifically disabled, of course).
36ed506f09 Added PyMac_SetEventHandler which allows you to replace complete event handling in inner loop with python code. Also move (previously machine independent) PyErr_CheckSignals here, so we can propagate exceptions in event handling code.
d993648ef6 Added NewAliasMinimalFromFullPath(), and allow alias.Resolve() to return an FSSpec to a non-existing file.
3b1c89e244 MACDEPPATH: Remove `sharedmodules' from default value of this variable since calculate_path() in getpath.c will automatically add this. Including this here will put the sharedmodules directory on sys.path twice.
bcdb9403d4 Added docstrings by Sue Williams, re-indented to 4 spaces / level.
8f81ef1edd Fix LaTeX bug found by examining the docstrings added to commands.py.
b4aeaebfe8 Added libcommands.tex to list of library reference dependencies.
4fd1292c3c Documentation for Lib/commands.py, from Sue Williams.
eda78634a4 Make imports faster on the Mac, by - Remembering whether sys.path components refer to files or folders, - Using mac-specific code to check for file existence, in stead of trying   to fopen() each possible file.
0130f0fb8f Added prototype for PyMac_RestoreMenuBar
3368cb7763 Replaced MacOS.EnableAppSwitch with MacOS.SchedParams
d3b06a871f Added optional preload arg to some routines (which creates reloaded resources when set)
7fb76e0f8a Replaced MacOS.EnableAppswitch by MacOS.SchedParams
caa7c46ac4 - Restore SIOUX menubar just before exiting, if the console window is kept   open (so the user can quit with cmd-Q, print, etc) - Removed a few unused routines
455838a217 Really nitty-gritty change to prevent latex2html from using a LaTeX-generated image of the argument list....
295b8e5608 Add sys/types.h include for pid_t when threading.
d9c6f4fd7d Allow oct() result for 64-bit machines.
914c938cc5 Use cPickle and cStringIO when available.
f668d17e01 Clear the ftp cache when it contains more than 10 entries.
2966b32205 Catch *all* errors that ftplib can raise (ftplib.all_errors) rather than just the four.
0318fd6050 Moved the definition of posix_times__doc__ to outside of #ifdef HAVE_TIMES so that MSVC 4.2 doesn't complain under NT.
1830afb4da Changed the reference of 'mappingobject.c' to 'dictobject.c'
97b5457467 Small changes (casts etc.) by Jack, for Mac compilation.
3c540307af Doc strings (AMK).
2b1566be9d Correct typo in last line (test program invocation).
9115eb522e Added a variant of the epilogue that has the PythonPowered logo.
5bf4d00887 Move the second import of faqcust to the very end.
876736cd0d AMK's regex test suite
71160aaffe Use #include "mymath.h" instead of declaring fabs() explicitly. This should solve a weird problem on the Mac for Jack.
cf3527b705 socket_type --> SocketType
ca0f88d887 Added zlib
175f1c8007 Added USE_ZLIB to nonshared config files
120a105823 Removed SetScheduleTimes Added SchedParams Added docstrings for most routines
e68a61c95b Added zlib (optional on USE_ZLIB)
e3ae0dfeb7 Removed old scheduler parameterizing calls and replaced with something a bit easier to use and understand
4a79a4b0a9 Removed SetScheduleTimes and PyMac_DoYieldEnabled Added [GS]etSchedParams Added parameter to PyMac_HandleEvent (safe to run python code at this point) Removed various cruft
c24751b57a Add Host: header to URL request.
b94cd96977 Fix bug in copy() by using copy.copy() instead of making assumptions (it so happens that copy.copy() works fine for the base UserDict type).  Also reindented the entire module to have 4-space indents.
bd40d7e69f Added the new dictionary methods to the wrapper class.
36bab7dbaf Don't stop if the tests fail the first time around.
2d3aac2377 The usual
ce1fa263e6 Added tests for dict.clear(), dict.update(), dict.copy().
77e1db3b34 Support $HOME in expanduser(). (Who'd thought that *anyone* would be interested in writing ~/foo on NT :-)
dafce6db7b Expanded the setup instructions.
525d52f8a4 Move the roulette() functionality out of the FaqDir class into the FaqWizard class.
46ff1903a3 Add default case (standard conformance) to avoid piling up system specific #ifdefs.
ec4f4ac8c0 Added doc strings (Neil Schemenauer).
21f8497a46 Use string.h, not strings.h
91ba64ddd9 socket_type -> SocketType
24995b99e1 array_type -> ArrayType
290283bb39 Mac hack to make select() work again...
4f074044be Version upped.
178f58a17e Stupid typos -- ImporError.
39a23cc1e3 Doc for mailbox.tex (Jack)
6cb2ac226e A nicety (author lost).
41c302fc68 add libmailbox
e5bb790027 Added libmailbox, obsolete libstdwin
daff175611 Increase printable page size.
b40f2a7446 Added SocketServer and mailbox modules.
98b43eb012 It's now using mimetools instead of rfc822
b9ee9c2298 stdwin is obsolete.  Point to bsddb from dbhash.
0a3c7532f3 Additional info about sys.path, sys.version, sys.prefix, sys.exec_prefix. (AMK)
0fa066b72e Grammar (AMK).
067a2acdf6 Mention seekable parameter (AMK). Added pointer to mailbox module.
bac80022e4 Mention use of profile.py to run a script (AMK).
f967bf63f8 Added putenv, ftruncate (AMK).
809408eb90 Mention use of pdb.py to run a script (AMK).
94adab5e17 Added date, xgtitle, xover, xpath (AMK).
a3f53cde37 It's now using mimetools instead of rfc822
2525bedfc0 Fix a sentence which ends "...is 6, which." (AMK)
921f32ce4c Mention abs(complex) -> magnitude (AMK). Documented list(). Mention [raw_]input()'s interface to GNU readline.
3a0d850160 Added complex numbers (AMK). Clarify that sort() works in-place. Renamed dict.absorb() to dict.update().
a8d5131d57 Renamed dict.absorb() (too spungy) to dict.update().
c22eb01bfe Bugfix: last_changed would always print current time.
80c2a1674e American spelling in doc string.
db7098cad5 The usual
7f059ad41a Use TRY_RUN, not TRY_COMPILE, to test for -Olimit (on Solaris, with Sun's cc, the compile succeeds, but the link fails).
d7918fb758 Added hint about permissions.
72a342fd4f Protect roulette against empty FAQ.
00494bfa15 Inclide the imports and chdir in the try/except.
1d0fe31d7e Packer.pack_uhyper(): Fixes needed to properly pack unsigned 64 bit longs where the top bit is set.  First, change the masks so that they are `L' longs, otherwise the sign bits will get propagated to the result.  Next, do not coerce to int before sending to pack_uint() otherwise Python will generate an OverflowError.  Here is a test program that fails without the patch, but now succeeds:
8d1ac0225c Documented (slightly) the USE_CACHE_ALIGNED define, for the standalone distribution
e66b8c8543 Updated for 1.5a2 distribution
219e2e2bb3 Projects for 1.5a2 distritbuion
baa6d551ed Version number and such for 1.5a2 distribution
6102b51f2b Added copy() and absorb().
f7cea10f80 Remove '(' in column 0 of doc strings. Add dependency on dict.copy().
e3f5b9c8d1 Added dict.absorb() and dict.copy().
fe97656631 Hide .fdc files here.
5416a0d97c Checking in zlib demo.
68bdad1015 Tiny script to play with it on a Mac.
d7c9d96d3e Tweak default source of query a bit so it is possible to invoke a CGI script from the command line with not environment variables.
1aec3f087e lowercase proxies env variables, for Windows.
4305542517 Reworded the doc string to remove the need for The Emacs font-lock kludge. This required (re)moving all occurrences of '(' in column 0, as well as changing "#!" to #!.
7701fd9af2 Changed release note structure: - Relnotes contains current release notes - HISTORY contains all old release notes
001aa86d34 Added a range of resource numbers reserved for Bruce
c8296db67d Widget._setup():  Support name=None in a similar way to the handling of other 	Tkinter keyword parameters.
d812c07e0e Set version to 0.4; get rid of '(' in column 1 in triple-queted string.
132e1892e1 Initial revision
7a241071d4 Added marks for very recently (24 hours) and recently (7 days) modified files.  Added and used global now, entry.getmtime(), and entry.emit_marks().
fd67f738dd Added marks for very recently (24 hours) and recently (7 days) modified files.  Throw things around a bit.
8bc49c8ad1 Support for more general diffing and retrieving any old revision. Support for index formatting with local refs.
8cde0b47b8 Added keyword searching.
d993695b0f Added keyword searching radio buttons.
030144d9f6 Don't need <BR> at end of <LI>.
1f04772347 Bugfix -- should pass headers=0 when formatting query results.
21c4b5f66a Add optional section titles to format_all. Allow for missing section titles in format_all and format_index.
b1d8a259e3 Oops, checked in the wrong SHORTNAME value.
2305231acd Added a local customization feature: load some parameters from faqcust.
46a160f6de Initial revision
72fdef07d3 Initial revision
ea31ea2859 I'm happy with this.
1677e5b5dd Initial revision
efe640c00f Final touch -- bottom link points to FAQ Wizard home.
eae7d0ecf3 Forgot to remove debug stmt.
9c6cedaa08 The official name of the whole thing is now "Python FAQ Wizard"; and it's in beta testing now.
a78a3c30dd Implemented a simple Password scheme. Added a Help link to the FAQ Edit Wizard.
f8f0fb7069 Added last mtime on whole faq. Added more elaborate explanation of version conflict. Set fake header on commit so show() shows the new mtime. Reorder name/email fields to be after the log message.
1d57981015 Nits. Use TARGET=rlog instead of _blank for rlog output. Add missing mailto: to author's email address in Last changed link. Forget about the domainname in the cookie; the default is just fine.
1dcc24404b Reorg TO DO list. Run rlog commands as pipe so we can cgi.escape(output). Added self.escape(), like cgi.escape() but also escapes " -- for use as double-quoted attribute values inside HTML tags. Fix complains from Mark Lutz: HTTP_HOST is not always set.
a0e9a6d332 Small nits for Grail; don't forget to cgi.translate & and <.
d1c1ec8a77 - Suppress the visible text in the epilogue when "edit=no" is specified. - Add translation of *foobar* into <I>foobar</I> (but not inside <PRE>). - Optimization for the translation: only translate when @ or / or * seen. - Add some layout to front page lay-out.
4888c7ece5 Added section titles (for now, hardcoded in the file).
549e0ff752 Removed references to StdClib and PLStringFuncs, rebuilt everything
6f69c504f1 Nothing important
525819017e Changed version string and preferences filename to 1.5a2.
a07dd0fdd1 Renamed
e8b9b9f15b Added keys() and mapping interface to shared-library objects, allowing iteration over all symbols exported
a39f1b0ce2 - Added Py_GetProgramFullPath - Added PyMac_StopGUSISpin and have it called at exit time (fixes crash   when exiting with sockets open) - Added PLstr... funcs needed by gusi: those provided by StdCLib are   broken under cfm68k
570e4b7ad1 Added PyMac_StopGUSISpin
5527db5b76 Added code to recognize http/ftp URLs and email addresses, and add <A> tags for them.
821a558f39 Moved the 1.4 NEWS file here (it had to happen someday...).
69b9ae4e0b Add doc string to type object.
c6447527aa Minor change: add prologue() calls to do_info and do_rlog; in do_recent, don't display entries without a last-changed-date.
296b4751e1 Can't return 0 from void function...
c8b6df9004 PyObject_Compare can raise an exception now.
5b2121b25f PyObject_Compare can now return an error.  Unfortunately, there are a few places where we don't know how to test for them without losing speed; don't know yet how to handle that.
7e8d26d78c PyFile_WriteString now returns an error indicator instead of calling PyErr_Clear().  Add checking of those errors.
78a1ed3d70 Py_FlushLine and PyFile_WriteString now return error indicators instead of calling PyErr_Clear().  Add checking of those errors.
be27026c09 Py_FlushLine and PyFile_WriteString now return error indicators instead of calling PyErr_Clear().  Add checking of those errors.
27a60b147c PyFile_WriteString now returns an error indicator instead of calling PyErr_Clear().
745b8cff08 flushline and writestring can now return an error
f1e6354548 The usual
c2d1417615 Added Py_GetProgramFullPath (same as GetProgramName)
39ed1c35e5 Added Py_GetProgramFullPath
36f3502151 Added cvardesc and ctypedesc macros, for api.tex.
64f9105fb7 DG/UX thread patches (Ross Andrus)
b2c8ec4b75 Set sys.executable to full path of python (from argv[0]).
9726690478 More usual effects of a new configure.in
6400c26fbb DG/UX specific test for threads.
0be3e4936f The usual effects of a new configure.in
0b82fe773f Partial(?) 64bit patch (AMK).
23c9446d9a Added a space in an error message
cbf1b9c40e Added warning about the optimizer bug on AIX 4.2.1
8d90f9d551 Minor edits for 1.5a2
93cfa95bec Add kill, execv, fork to tested functions.
fde51691ca Force PYTHONPATH= empty when running test suite.
ae110af13b Just another checkin for backup.  Nothing substantial yet.
af5be958e3 Added menu entry on deleting FAQ entries. Added a generic error handler function. Added cookie support to preserve author's name and email.
64099e955d HTML formatting nits. Added "Reload this entry" link to edit complete screen.
ed531fd9df Mostly small changes.
b9f866cb7c Enable putenv and waitpid (== wait4) for NeXT.
b6190d35fc Defined array.array_type, the type object.
e9eec54798 Fix typo in error checking spotted by Just...
74427e51d7 Separate prologue/epilogue functions.
4c45422b13 Oops, left an 'n = n+1' in but n was undefined.
f701bf1098 Add "Log info" to view rcs log. Speed up __getattr__ by storing the value as self.<key>.
d7bfa80c63 Lots of new features:
3c3354c0e7 Crude but functional, except for adding new entries.
d6a111e2dd Fix for boundary case (Jack)
7806c16650 generated from latest doc files
2335c5eaec Added description of socket_type.
f8580215c1 Add test for presence of socket_type.
3b4b6fc602 Add socket.socket_type, as discussed on c.l.p.
05ba2ab720 Fix ratecv test (Sjoerd).
adb3a9db57 Initial revision
49bff65deb Include config.h so it can define const away for K&R.
7929c6fe95 Make delimiter and separator static for K&R C.
f9cba090f9 Don't use function prototypes in function definition headers.
2f75b29630 Indent the #error directives so a classic K&R cpp doesn't see them.
a9040ec5d9 Renamed a local variable from 'PyCFunction' (which is also a typedef in methodobject.h) to 'func'.  /bin/cc on SunOS 4.x didn't grok this.
59943ba718 Added Py_PROTO macros for SunOS 4.x /bin/cc.
462d6e6484 More robust way of choosing a non-existant uid (faster, too). (Correct version -- the previous checkin was a keyboard slip.)
6308d510e9 More robust way of choosing a non-existant uid (faster, too).
037b2205e8 Moved PyObject_{Get,Set}Attr to object.c. Fixed two 'return NULL' that should be 'return -1'.
98ff96adba Moved PyObject_{Get,Set}Attr here (from dictobject) and add PyObject_HasAttr.
967839473a Got rid of c_error in favor of errno (and EDOM/ERANGE). Assume that errno usage is thread-safe -- most vendors do this by making in a macro that refers to a per-thread storage area.
72be30690f Added some minimal comments and tweaked lay-out a bit.
df4c308f5a Plug leak of stack frame object in exception handling code. Also delay DECREF calls until after the structures have been updated (for reentrancy awareness).
32f92caa98 Handling of pathnames pointing to files on toplevel folder of disk was incorrect (Jack)
b24c9ea514 fixed ratecv to continue working if product of rates is bigger than 32 bits (Sjoerd)
511f16357c Removed MetroWerks workaround, replaced by defines in mymath.h (Jack)
19a6c8acb8 workaround for Mac MSL header definitions of TRUE and FALSE (Jack)
c23ef0a6e8 Workaround for bug in Metrowerks MSL headers on 68K Macs (Jack)
df0d00e29b Logic for enabling mac-specific signal handling fixed (Jack)
1254d79dfa Use #ifdef in stead of #if (Jack)
e34b7de399 Updated Python version no to 1.5. Noted that we have used VC 4.2 and that 5.x should be able to convert it.
6181e00667 Added AMK's SocketServer docs.
fe4dfc7ce3 Add platform to welcome message.
650b3aad55 Unlink before rename (for NT).
1aa7e3a177 Jim Ahlstrom's contributions for DOS, OS/2, WIN3.1.
5a37d7d150 Renamed strndup to my_strndup to avoid conflict witth GNU libc.
082d28912f Added CRLF for Notepad.
1a747f894a Address the following problem on DOS and Win 3.1, reported by Jim Ahlstrom:
29168ce1ed Added CRLF for Notepad.
3cca24570e Got rid of all the last_name_* bogosities.  I don't think the complexity saved much any more.  A simple benchmark (grail) showed that there were 3 times as many misses as hits, and the same number of times again the code was bypassed altogether due to the existence of setattro/getattro.
3f11da0aaf Changes to make these tests work on the Mac.
9522274205 Increase the child's sleep time to 5 for slow machines.
e6fcd33179 Correct comment; -c is off by default.
9231c8f176 Made a start with api.tex, the Python-C API Reference Manual. Removed extref.tex (which provided the starting point). Also removed qua.tex, which is out of date and no longer needed.
d0c87ee6c4 Oops, another forgotten renaming: varobject -> PyVarObject.
fe28fa05e9 Remove the last three uses of PyArg_GetInt() from the source.
4c4d5ce78a Catch nis.error and raise TestFailed instead.  This catches the problem where Python is configured with the nismodule but NIS isn't installed, or the map names don't correspond to those hardcoded in nismodule.c (which is bogus in and of itself).
1ade44cb0c Open the output files with 'wb', not 'w'.
fdf58fe59a Added BabylMailbox class by Fred Lundh (untested).
71606f8dd9 This commit was manufactured by cvs2svn to create tag 'r15a2'.
c8fba8ee14 Add pthred-std define for Linux.
8766dfd9e8 Regenreated for MSL
b83b46d2c6 MSL errno.h has moved some errors around, and doesn't document them in comments, so we do that ourselves.
4346716962 Bump level to 1.5a2.
6ae5d3dcdc Update description of "make test" to new test harness. Change DEC OSF/1 to DEC Unix. Add note about AIX bug in 4.2.1.
4dfd458611 Fix typo in error reporting.
c1c96d1b5c Fix hex tests for 64-bit machines.
8cd70c3555 Instructions updated for 1.5.  Added the important note to set the run-library to multithreaded dll.
201afe56d3 Add -Olimit 1500 to OPT if CC supports it.
2b4d2800af Suppress fork part of socket test when we can't fork.
9348bf8388 Updated, mappingobject -> dictobject plus some other minor things.
1cbdfb9187 Add sections for PIL (Fred Lundh).
4a0694d235 Fix sys.platform test -- on Win, it is 'win32', not 'win'.
0ba7e5958c More rational implementation of get_qualified_path() -- search along sys.path instead of assuming __file__ works.
e61093c218 Fix reversed test for failure in PySequence_List() and PySequence_Tuple(). This broke cPickle.
fcc7704ee9 Typo!  \\lib\\<path> should be .\\lib\\<path>
fc4f503762 Fix showstopping bug (^ wouldn't match after \n).  Jeffrey Ollie.
34570d7669 A new set of symbols.  Hopefully this will be sufficient, I have no idea how this is used, really.
af5dfb4ceb One last rename glitch: import_modules -> _PyImport_Modules.
39d6ae7b6c New makefile, for 1.5, with CRLF
445efa9602 Add a cast to a malloc to shut up the DEC Unix compiler.
2ec9031b55 Subsumed mappingobject.h in dictobject.h.
9637432265 Renamed mappingobject.c to dictobject.c.
e4766f69bc The usual
a9e7a81137 Renamed from mappingobject.c to dictobject.c. (Sorry Jack, all your projects will have to be changed again. :-( )
93ad0df06c Faster floating point allocator, same idea as the int allocator. By Aaron Watters.
0609f191bc A completely new Rat.py by Sjoerd.
e0332c7173 Longer default PYTHONPATH will find test, tkinter, and shared modules in the build tree, when the current directory is the build tree root.
df4549ec5d Remove a spurious ^M.
7d3246d0e4 Keep gcc -Wall happy.
ad16471b27 Untested changes by Skip Montanaro to have an optional limit on the size of uploads to POST (new version of these patches).
de8d6d73fb Use compile-time test for 64-bit hardware instead of run-time test. This silences some compilers.
c5d14a65a7 Added $(srcdir)/ prefix to python.exp for AIX. No idea if this actually works...
054b3a2cd3 TESTPATH is no longer needed
2ef21efad3 Removed symbols that are no longer defined. Still have to find a way to add symbols that *are* defined...
4917d93ca9 Keep picky compilers happy.
d6353e2c0e Support for various versions of the pthread draft.
5f15b96c36 (int) cast for strlen() to keep picky compilers happy.
725a67e5c2 Regenerated on newer Solaris version
f0ee937900 Removed out-of-date TODO file
af647ddc52 Use ProgressBar to show progress in stead of print
450ae9f352 Don't free the MacOS_Splash() dialog twice...
48c5527c78 Add a few more BringToFont calls
79b5bb488e Export a few more New/Convert routines, on Just's request
141f9a0f8a Regenrated from CW11 IDE
0e351f34c5 Finally found a wat to set a file nonblocking that works on Irix, Solaris and Linux: use os.O_NONBLOCK.
d77636216c Another change suggested by Donn Cave -- forget "step 5", which searches /usr/local, /usr and /.
573a24a4f7 Fix problem reported by Donn Cave: if VPATH is an absolute path, it would always be a hit.   Prevent this by only using VPATH if we know we are in the build directory.
4a807f5939 Fix big ineficciency in regobj.search/match (introduced by Barry in an otherwise laudible attempt to rationalize the argument parsing): it would save a copy of the original string instead of a reference to it. Go back to saving a reference, but keep the "s#" format (using a hack that involves two argument parsing steps, first using "O", then using "s#").
1d63d8c829 Fixes to progress bar by SDM, modified by Jack: - Window has a titlebar, and title() changes it - The label is changed with label() - The window is now movable-modal - Cancel is now called Stop, and works.
789a1613a0 Add optional 'sizehint' argument to readlines().  After approximately this many bytes have been read, readlines stops.  Because of buffering, the amount of bytes read is usually at least 8K more than the hint.
6263d5451c Rewrite readlines() to speed it up -- about a factor of 2 on my Indigo2, reading a 9Meg file from the local disk.
5449b6e123 Speed up read() (i.e. read till EOF) considerably by doing a stat() to see if we can guess the #bytes until the end of the file.  If we can't, increment the buffer size increments up to 0.5Meg to avoid realloc'ing too much.
5878b662de This commit was manufactured by cvs2svn to create tag 'r15a1'.
d0f2372cb9 Modernized for 1.5
6a9ee0eeaf New heros.
29f6533c7f Scroll to top of info window when done.
ff2ea728b8 Oops -- missed FloatingPointError.
b6a7f77c9f Oops -- missed FloatingPointError in renaming.
7f25391e11 The usual.
9327422093 Added --with-fpectl.  Change checks for -lm, -lc.
7a24c37444 Move WANT_SIGFPE_HANDLER.
f4eb63ef9a Add HAVE_PTHREAD_H; move WANT_SIGFPE_HANDLER.
33fde57300 1.5a1 adaptations.
004c1e1d07 Latest from Jeffrey Ollie. Infinite failure stack, some bugs fixed (fastmap, star_jump, register bug).
1681429ba8 Fix the date.
51a6c9055c Added docs for dumbdbm (AMK), and misc small fixes.
7e691de948 Document return value of wait[pid]() more carefully. Document how to get exit status of a popen() command.
e4f347e779 Document "" and "<broadcast>".
57c30f6f37 Regenerated on a newer Linux version.
db4a629ba0 Avoid warning from gcc on Linux about dropping const.
16dffdca1a Fix the NDELAY test; avoid outputting binary garbage.
f518d5e98e Print less in test_socket.
0add15f6a5 removed last #ifdef SUPPORT_OBSOLETE_ACCESS bits.
c77b921c82 Latest and greatest.
16cd332aab Add root.tkraise() to the _test() program so the window doesn't hide behind the shell window on NT.
9a0f04d4cd Get rid of obsolete support for access statement.
6a33de9526 Get rid of obsolete ACCESS_MODE opcode.
1aceb056d6 Add warning that it's out of date.
22822d78db forgot to rename import_filetab
d0e8436e19 ???  maybe window size
881255223d Added assert statement.
d8f038ec0a Added assert resword.
4408ed5dcb Tiny utility prints the latest set of reserved words.
78b21cf47a Checking in old changes -- no idea why (probably window size).
de554ece41 The usual.
6dd87830d0 Improve getting the mailbox from the environment.
56f78d9e3c Set correct RFC number.
25107deb9f Set correct RFC number.  Open input in binary.
ee2373b930 Oops, missed some renamings.
6778f257b7 Oops, rename2.h was included by some other headers.
b05a5c7698 Instead of importing graminit.h whenever one of the three grammar 'root' symbols is needed, define these in Python.h with a Py_ prefix.
8813b58ffa On popular demand, re-enable the readline event hook.
aa948df877 In makesockaddr(), if we don't know the address family, don't raise an exception -- return it as a tuple.  Seems useful in promiscuous mode.
8b4c98783d - toolboxmodules built first (others depend on it) - Changed name of fat interpreter to PythonFAT (Python conflicted with toplevel   folder of the same name, unfortunately)
c512be0bb2 Sometimes tried to modify a tuple. Fixed.
73d203fb43 Version upped to 1.5a1
3edc476b12 Included new MSL error numbers
e44545fc0b Workaround for bug in MSL and CWGUSI interaction that stopped the "don't close window on exit" feature to work.
3089b7eead - Various names in CodeFragments.h have changed - a dummy main program was added, so we can use the standard MW MSL   runtime library for main programs (in stead of rolling our own, as we   did previously).
eeccca9bdc - Changed the m# format for PyArg_ParseTuple back to s# - c2pstr has moved to a different include file
d1d242ec84 c2pstr has moved to a different include file
b764eeda56 c2pstring has moved to a different include file
1473af76a2 Updated for building with MSL libraries
2fe3a371b2 Updated for (optional) use of MSL libraries
a176485bb7 Updated to use MSL libraries
89efda363f Avoid the fancy handler for error 401 (request authentication).
78089e20b6 Updated vc40.mak for Roger.  Includes CRLF!
666b17a280 New dir() function -- - uses abstract interface where possible - uses __members__ and __methods__ - returns [] when an object has no info available
0f00c5e2dc - Use cfmfile to (finally) implement building fat Pythons - Turned the 10 or so yes/no questions into a single dialog
c70c350f5d Module to merge 'cfrg' resources (to create fat ppc/cfm68k programs and shared libraries).
2e146b332c Use spaces exclusively.
42c2e6ac49 Added cStringIO and cPickle to the supported modules.
c339753fb3 Added HAVE_ macros for getpeername, getpid, setvbuf.
478e718aca Keep MS compiler happy: use (int)strlen() when comparing; make sure not to use kill().
b819914263 Fix by Mark Hammond to enable truncate() on Windows.
fc49073cd0 Used operators from abstract.h where possible (arithmetic operators, get/set/del item).  This removes a pile of duplication.  There's no abstract operator for 'not' but I removed the function call for it anyway -- it's a little faster in-line.
a1ebdbddb3 Use Python.h, not allobjects.h. Don't call initall()  (Experimental incompatible change!!!!!!)
db9353e17d CloseHandle should be RegCloseKey. Add extern decl for Py_GetProgramName().
fdf95dd525 Checkin of Jack's buffer mods. Not really checked, but didn't fail any tests either...
8290e07509 Removed misc outdated stuff for 1.5
13454c3f9c Fix old typo PyArgs_VaParse -> PyArg_VaParse. (Redoing the checking without merging in Jack's buffer mods.)
45510aee8f Fix old typo PyArgs_VaParse -> PyArg_VaParse.
7688bbad61 Include Python.h, not allobjects.h (which no longer exists).
a027efa5bf Massive changes for separate thread state management. All per-thread globals are moved into a struct which is manipulated separately.
73237c54b4 Only use PyCode_Addr2Line to get tb_lineno when Py_OptimizeFlag is set.
d3d6f8ffad Add -lgl and -lm for imgfile.  Better way to configure zlib.
4a43cc67db Remove sys_* defines that are internal only and about to disappear
9218b70bdc Remove 2 out of 3 __FreeBSD__ tests. These are no longer needed as of FreeBSD 2.0.5, according to Thomas Gellekum <tg@ihf.rwth-aachen.de>.
526749b678 Misc.__init__():  Removed method, replaced with class attribute (which 	was all that the method set anyway).  Removed calls to the 	constructor.  This reduces the number of Python function calls 	per widget construction by one, for every widget construction.
84bf42531c Finally deleted this obsolete crud.
d27b4f2a3f Several oopsies -- Py_ALLOBJECTS_H -> Py_PYTHON_H, temporarily removed pystate.h (to be restored later when that code is debugged), removed accessobject.h.
174f95adf7 Moved allobjects.h to Python.h (without rename2.h). allobjects.h disappears -- old-style extensions must include Python.h and rename2.h.
c0b618a2cc Quickly renamed the last directory.
f4806c2a85 Add detach call so threads are GC'ed.
03ef647847 Add PYTHONHOME to the usage message.
ebde385fc0 One copy is enough; we already had resource.c.
5bbf0f7c93 Some updates (AMK at work, added resource.c).
dfb4120ea1 Add zlib
412154f3c7 Updated web ref and version#.  Folded some long lines.
bc2472db8e Avoid some potential (though unlikely) sprintf buffer overflows.
15e33a4c42 Avoid sprintf buffer overflow if more than 9999 arguments.
04bc9d6e67 zlib by AMK
1526219431 Adding Jeremy Hylton's gzip module. This requires Andrew Kuchling's zlib extension module. It still needs some doc strings.
37e97bc36b The usual.
9b7127370e Get rid of the "-n32" options for SGI IRIX 6.x.  Instead, substitute the value at configure time of the SGI_ABI environment variable.  See abi(5).
07397974da The usual.
6100aaf768 Added test for pthread.h.
d11bfdd9f5 Ugly hack for SGI IRIX 6.2.  Apparently _POSIX_THREADS is defined even when the pthread package is not installed.  configure knows better, so #undef _POSIX_THREADS when pthread.h does not exist.
1ed5e57684 Keep gcc -Wall happy.
86bea46b3d Another directory quickly renamed.
2b713b2f67 One more inittab.
bb5c6f8529 Oops, forgot one: inittab.
87490eb3b0 Renamed inittab.
0bac33b420 Oops, forgot one: inittab.
1a43ce848b Added inittab.
79f25d9a7b Quickly renamed the remaining files -- this directory is done.
65bf9f265e Quickly renamed.
04e30c188a Remove err_input from rename list -- it is a static inside errors.c.
373c869a6a Quickly renamed.  Also removed the long comment explaining why this is better than the old error API.
58d8e3dd9e Remove renaming instructions for ANY -- this is not renamed in mymalloc.h.  (Since it's a macro, I don't care much.  It is used internally only; others can use void *.)
b209a116cf Quickly renamed.
e2b4f0906d Track updates in rename2.h.
e601c0f55d Added new name for inittab!
63c35e5407 Remove macros that are only used for cgensupport.[ch]. Fixed typo in PyArg_VaParse (not PyArgs_*).
92e8782217 Moved cgensupport.h to Modules (awaiting oblivion).
8105821bf5 Added -I$(srcdir) to line for glmodule so we can move cgensupport.h here.
62cb0bafe2 Moved to ../Modules.
ba9d7c5612 Change the exception objects to have the string value "os.error" instead "posix.error" or "nt.error".
8ec9e639ab Adapt Mac specific code to new universal headers (I think -- this is Jack's code).
dfed920e51 Hm.  What was previously checked in was the edited *output* of the old cgen.py.  Now that cgen.py and cstubs have been quickly renamed, check in the actual output.  This has some "old-style" names left in (getilongarg etc.) but these are now take care of by macros in cgensupport.h (which is now specific to glmodule.c).
3837de00a9 Moved here from ../Python and quickly renamed.
58a6ac55d2 Removed cgensupport.[co] (to ../Modules).
4f1099fcf4 Added cgensupport.o.
7fa3b75f28 Added cgensupport.c to Setup line for gl module. Addeed Andrew Kuchling's zlib module.
9e3a812306 Added Jeremy's resource module.
0a3eaf0838 Quickly renamed.
fb221562a3 Added Andrew Kuchling's zlib module.
1818b7702b Moved rename2's macros relevant to this module here and added comment about the file's obsolescence.
1875247549 Quickly renamed.
9d0a3dfa3d Transformed comments to doc strings. Added symlinks option to copytree.
a2baf46c89 Reindented at 4 spaces.
5980845bd5 Add feature to copy(), copy2(): dst may be a directory. Remove unneeded check for '.' / '..' from copytree(). Add some comments.
277206b08e Improvements to copyfile(): open the files in binary mode, and close them in a finally clause.
e9a0732cd1 Note that passing a filename to uu.{en,de}code() is deprecated.
e76b7a8fcd Added fnmatch, base64 and quopri, received from Andrew Kuchling.
8be9a11617 Restore two features of the original 1.4 pickle:
faeae5cd78 Alas, I have to restore 'marshal', since it is needed by the new cPickle-compatible pickle, and pickle must be importable in restricted mode.  I guess I'll have to make marshal safe.
5026cb4dc6 Now that the string-sig has settled on r"obin" strings, restrict the <letter><string> notation to 'r' and 'R'.
c474deaaf6 Expand one level of symbolic link in sys.argv[0] before inserting its dirname in sys.path.  This means that you can create a symbolic link foo in /usr/local/bin pointing to /usr/yourname/src/foo/foo.py, and then invoking foo will insert /usr/yourname/src/foo in sys.path, not /usr/local/bin.  This makes it easier to have multifile programs (before, the program would have to do an os.readlink(sys.argv[0]) itself and insert the resulting directory in sys.path -- Grail does this).
4246edda7c Unroll the for loop used for building python, so the first three subdirectories can be made in parallel (unfortunately, Modules has to depend on all three).
caa9f234bc Change inspired by Tommy Burnette to add an interface to get stderr, too.
5fd026dc5e Fix a couple of glitches identified by Greg Stein.
f39d0516b4 _safe_repr():  Make the context parameter required; ok since it's only for 	internal use.  Make sure the maxlevels and level parameters get 	passed to recursive invocations.
a89fda0fe2 Muchly changed and improved pprint.py:
ab0d1afdf3 spliturl() should not throw away everything past first newline
b2c02de9cb Removed pprint.py.
0c5e049c75 Reindented with 4 spaces.
7cfd31ee8a Rewrite parsesequence() to emulate MH without invoking pick. Test it extensively by using pick.
5e92affc54 Checking in a copy of Fred Drake's data structure pretty-printer (with some slight formatting changes).
03a7466b8f OK, ready to make 'assert' a keyword (instead of '__assert__').
7aa9fc5642 Use uuencoded test images.
684480f419 Soft failure for Win32 and Mac platforms.  Less output unless verbose.
cc5a91dc4f Soft failure for Win32 platform.
505043f35e No need to define assert, it's built in.
b5d20393b1 Always use spaces for indentation.
103cc6dd11 Patch by Craig McPheeters to clean up the back-references to widgets contained in commands created by those same widgets.
5a56649e09 Remove Digital Creations copyright (Jim sez it's okay).
62bd30c430 Catch and report ValueError raised by strftime.
b31c7dcb43 OK, I lied.  On Windows, _IOLBF seems to be the same as full buffering, so to get the normal behavior back, I set it to unbuffered.
2a212191f8 Change in when and how stdin and stdout are set to line-buffering. This used to be done whenever stdin was interactive.  Now we only do it when the -i flag is given.  Also (and this is the real reason for this fix) we explicitly allocate a buffer -- this seems to be necessary on Windows.
7844e38a98 Keep Microsoft VC happy.
6bf62dad9e Keep gcc -Wall and Microsoft VC happy.
90126035ca Removed two unused static function: string_addsep() and string_append().  These must be artifacts of GvR's rewrite.
3dc35b0c66 My own patch: support writable 'softspace' attribute.
1d2e240954 (Jack:) On the Mac, don't automatically enable dynamic loading.
62bf108392 (Jack:) Don't define TRUE and FALSE if already defined.
6976a52099 (Jack:) On the Mac, use standard strerror() if using MSL C-library.
2d45be1366 (Jack:) On the Mac, give syntax error on \r.
3648884490 (Jack:) Align mapping entries to 4-words if USE_CACHE_ALIGNED is defined.
fd16d9438d (Jack:) fopen arg typo (?) "rw" changed to "rb".
fb421c82a9 (Jack:) Mac only: get GUSI errno.h values too.
54a1d0bc69 (Jack+Guido:) interpret ../ in basejoin() according to RFC1808.
c511aee0e3 Open files in binary mode.
f4f756cf55 (Jack:) Better MacOS support.
9e3307494d (Jack:) Recognize PNG files.
3d82972b85 Remove the Emacs shell-script line.  It's not a shell script.
5f32248d56 From: Clarence Gardner <clarence@king.silcom.com>
97227814a9 The default path components are now all relative instead of absolute paths.
305e5d0d4f Completely revamped the way the default path is constructed.
ec61b77216 Pass VERSION and VPATH into getpath.c.
5d88aa3a36 Oops, added <URL:...> around the URL.
24c93591cd (Sjoerd:) Incorporate `build number' stuff.
5ad7aaf5fb (Sjoerd:) Install getbuildinfo.c in config/ so extensions can use it.
1e0b19e9e4 Bugfix by Sjoerd: 	/* x_ocount is in bytes, wheras play.samples is in frames */ 	/* we want frames */
a3d9e02593 base64 support by Sjoerd.
44adb0c95f Added note about SWIG (replacing a whole lot of nonsense about how difficult it is to do).
cb5cf9b186 Use uuencoded test images.
cee1dd3f9d Don't just die when an error is not defined; print a warning instead. This for errno-challenged platforms like Windows.
a6ed2254e1 Try calling getpid() from /usr/lib/libc.so instead of some other random things.
c9f8f1467e Use TESTFN instead of /etc/passwd and /dev/null as test files.
2095d24842 Tweaks to keep the Microsoft compiler quiet.
644a12b00c Tweaks to keep the Microsoft compiler quier.
8017767420 Remove unused variable.
fa658ce03d Remove two unised variables.
45c3aaba56 Got rid of the static decl of PyCObject_Import, which was a 1.4 compatibility hack.
d385d59c09 Give PyErr_Format a new name and make it static.
47065620f2 support module for cPickle
60456fdcfe Jim Fulton's version 2.2.
154417e27b Unknown changes by Jim Fulton.
0a73dd5f35 Changed the way the C API was exported.  Jim Fulton.
b72cf2d697 New version by Digital Creations, supports binary format compatible with cPickle.
de65527e4b Ping's latest.  Fixes triple quoted strings ending in odd #backslashes, and other stuff I don't know.
1836a62016 NewMovieFromFile has extra parameter and return value
e0cf87b20d Enabled resID input/output parameter to NewMovieFromFile. This changes the Python interface, unfortunately. Added a few calls that were blacklisted for no apparent reason.
3ccd2f153f while (1) -> while 1.  Sorry.
2ebaa1796e Search for a valid begin line instead of requiring the first line.
64639202ba (Optional) MSL compatability
184c16031e DisposPtr -> DisposePtr
08c3be35c3 Changed the few old routine names still used to the new ones Started working on MSL support
85ae4a82ac Changed [SG]etCRefCon to [SG]etControlReference
54956722e5 Modified for (optional) use of MSL
9e1be97ddf Fixed for compiling without OLDROUTINENAMES and OLDROUTINELOCATIONS
1aec32363f Ka-Ping's muich improved version of March 26, 1997:
24dacb38c5 Support for alternative string quotes (a"xx", b"xx", c"xx", ...).
5f5e817e00 Support for alternative string quotes (a"xx", b"xx", c"xx", ...).
150853861a Various status updates.
fc5ee0f980 Added site
571391b963 New stuff by AMK.
6191551ad6 Remove a redundant XINCREF(value).  This caused the reference count of all locals to be upped by one when `from <module> import <whatever>' was executed.
d641d67b89 New version by Sjoerd, with support for IRIX 6 audio library.
f73bab7f96 Added an attribute string_id_to_buffer, which gives the offset you have to add to the id() of a string to get the address of the data. This is a horrible and error-prone hack, but unfortunately it is one that is needed for playing audio and crearing pixmaps. Having the constant here is at least marginally better than the previous practice of having the constant 16 all over the place...
377df98005 - Most errors are *not* OSErr style, so raise better exceptions (with   textual messages) - Plugged a memory leak or two
cb2554effa Still not a real test, but at least it runs again
1801aad5dc Use MacOS.string_id_to_buffer for id() to buffer address hack
4240b610f3 Use MacOS.string_id_to_buffer for the hack to convert string id() to buffer address.
9a8cb84072 Checked in some new Tk demos that I wrote a while ago.
387c575d5c Small grammatical touchups:
228b8e88bc Whole lotta changes.
d69a84b01e use /usr/bin/env
101923bba6 Added replace() implementation by Perry Stoll (debugged and reformatted by me).
f643e3ff7e Spell Unix, not UNIX.
e8d94a8c10 Horrible hack to split up code '--' to prevent latex2html from collapsing it into '-'.
1cd26f2fc0 Add complex(). Update int(), long(), float() to support string conversions.
740eb8265f Add cross-refs for int() to atoi() etc. Change replace() arguments; remove replace1().
21aa0ef351 Changed my mind on replace(). It's now replace(str, old, new, maxsplit=0). Note new ordering of parameters (string first); this is more consistent with translate().
aa925a5efd Add #! line.
ab096c91e2 New doc strings.
fd79566d0f Fix two small bugs with proxies.
a9a3575e26 New symbols due to assert statement.
c1a4ba97b7 New test output for test_builtin
3917c22125 Win32 precision clock() -- Mark Hammond.
9bf8445541 Support include statement :-(
925e547fcc Support assert stmt.
4669fb474b Several fixes reported by jim F.
2a7f58de1c Allow passing a .pyo file. Print correct name in fatal error from PyErr_Print.
228d7f3f67 Added assert statement.
8ecd1ad785 Added assert grammar.
6dacd90a83 Allow leading underscore in keywords.
6fa4466cec Added AssertionError.
556440d278 Added __assert__ statement (later to be renamed)
659a3b5881 Optimized the hell out of listmessages(). Changed numericprog regexpr to make it faster to check. Removed now unnecessary checks for os.curdir, os.pardir.
c054d70aee Get rid of .conj pseudo data attribute for complex numbers. Add __members__ attribute.
94dbd99483 Remove ConflictError (which was also removed from bltinmodule.c, even though the checkin message failed to note that).
9199f62aa1 remove ConflictError
5a35e32de6 Remove ConflictError, add InteractiveFlag, CObject_Type, FdIsInteractive, and thread entry points.
c6472e9ee1 1. Add string conversions to int(), long(), float().  (Not to complex()!)
dddf7a6fb4 Added test of complex() (that catches a bug in 1.4!).
8d2893b5b2 Added a list of the main undocumented extension modules.
7f3b0421de Added docs for UserDict,UserList
b6a80262e1 Added docs for glob and mailcap
e6d579ddbc Added docs for glob
20af95b433 Added docs for mailcap
bfc3944bfd Change by Andrew Kuchling (edited by Guido):
31ef35b861 Added two new questions about number conversions.
e5a9c8fa31 As per GvR recomendation, added support for a 'sync' attribute for the GDBM module.
1eb9a81eb9 Added new functions replace() and replace1().
c8a80cdbad Added docs for replace() and replace1().
4fc7067055 Added a 'sync' method to shelve.  If the underlying database does not have a sync attribute, this method silently ignores this fact.  The default (bsddb's dbhash) does.
e8e87999ab Remove untrue statement about . and .. being included in list of names passed to walk() visitor.
fb8f1cadb2 Add clear() method to dictionary objects.
3ee6b195bb Removed 'marshal' from the list of "ok" built-in functions -- the unmarshalling code is actually rather naive and can easily be caused to crash by feeding it invalid data.  This should be fixed in the marshal module, but I don't have the time to fix it now :-(
bcd91e07d1 Fix typo (missing $ in )
4d81984011 Ping's new version -- more efficient at finding the keywords.
3d99e35884 Added __assert__.
eb8c972648 Ka-Ping Yee's version is better:
90d556fb6e Simple module to publish list of Python keywords.
f789ee4a86 Avoid crashes with nested multipart/mixed parts.
14d1c721d5 Added note about adding \n to source for exec and compile.
4a908be231 Added Q. about HTTP/1.1.
f2e499b1d7 New long_lshift, without restriction on size of shift count, by Tim Peters. This makes it possible to write 1L<<1000000, memory permitting.
e053c67780 Remove err_input -- there is no such global!
45b83915f8 New form of PyFPE_END_PROTECT macro.
1aeb1047ba Include setjmp.h so it compiles if WANT_SIGFPE_HANDLER is undefined.
f0958064f9 Remove redundant references to thread stuff -- long, long ago, there was some locking code in this file that needed it...
74277916a9 Add Macros defining new names for all external symbols.
1f06beeedd Change PyFPE_END_PROTECT to PyFPE_END_PROTECT(v).  v should be the last variable to which a floating point expression is assigned.  The macro passes its address to a dummy function so that the optimizer can't delay calculating its value until after the macro.
efd3a3a843 Implement find_class() without exec statement.
c69955343c Change the list() function to match the documentation in the comment (it should return a list of tuples, not a list of lists).
56d1e3a517 Added Fred Drake's netrc parser class.
18aef3c102 Support disassembly of a variety of objects through dis.dis().
7b7c578616 Add optional 4th argument to [r]find and [r]index (end of slice).
612316f016 Add a rough list of undocumented stuff at the end.
1f8cee2521 Hint about [\] trick to avoid quad backslashes.
db5a41f16b target libinstall: 	Create the .pyo files corresponding to the .py and .pyc files as 	well.
ef8dc06c01 compile():  Use the __debug__ flag to determine the proper filename extension 	to use for the cached module code object.
6af0c00ab6 Fix dumb bug calling parsestrplus with wrong node as argument.
1c6a459921 Define __debug__ as 0 if -O is given, 1 otherwise.  Also test for errors in initializing the dictionary.
7c53111d5b Added support for ``if __debug__:'' -- if -O is given, this form is recognized by the code generator and code generation for the test and the subsequent suite is suppressed.
0824f63cfc When -O is given, use ".pyo" instead of ".pyc".
80eb3c0202 Zap all env vars beginning with PYTHON to prevent an obvious form of attack.
b5dc5e3d7e Added support for imaginary constants (e.g. 0j, 1j, 1.0j).
c43b685054 Clarify error message for unexpected keyword parameter.
27e280dc77 Restore old behavior of autotest and testall, using regrtest. This is done for backward compatibility with Python 1.4.
f58ed25967 Add "extra-verbose" mode, triggered by specifying two -v flags.  In this mode, all tests are run in verbose mode with their output to stdout.  No comparing of output is done.
e69be3eb93 Much more rigorous testing -- we now try many times, varying in time of day, day of week, and season.
b51eaa183e Fixed doc string, added __version__, fixed 1 bug.
fc6f5339a9 Ka-Ping's version.
19700b6a98 Add casts to CMPERROR macro to silence SunPro compiler warnings about integer overflow in << operator.
82598051e6 Greatly renamed.  Not a very thorough job -- I'm going to restructure it anyway.
159b77fd5e Add Emacs shell-script directive, SunPro version#, and fix typo
53bb550a5f Solaris and IRIX specific instructions for fpectl.
f39fc43f31 A few comment alignment and clarifications.
7614da6b87 Add -O option which sets Py_OptimizeFlag to avoid emitting SET_LINENO.
e9e47796c8 Add global Py_OptimizeFlag.
8e793d925c Add global Py_OptimizeFlag. SET_LINENO is omitted again unless this is nonzero.
3978d75cca Added intern()
38e2ec4f14 Added ref to StringIO docs.
3ff7317857 Correct two typos
d90e5b1012 Fix name of PyObject_GetAttrString
cda3d7d0e7 Added (minimal) StringIO docs.
20e4210ec4 Fix up indentation of examples to use 4 spaces instead of tabs.
17e973cb32 Remove the list of Python users, replace it with a pointer to the on-line list of same.
7b6f3435e4 Added new ftp mirror site ftp://ftp.cdrom.com/pub/python/ (Walnut Creek CDROM).
827eecd290 Converted to CW11.
666212d429 Make cache-alignment work always (in stead of 50% of the time:-)
c587301e2e - Changed GestaltEqu.h to Gestalt.h - Changed FragLoader.h to CodeFragments.h - Removed Desk.h
4a8c54e6d9 - Changed GestaltEqu.h to Gestalt.h - Changed FragLoader.h to CodeFragments.h - Removed Desk.h - Regenerated bgen modules from new universal headers - Changed some of the s# in PyArg_ParseTuple to m# (unfortunately:   this should have been a different commit)
6a528149db Re-generated from new (CW11) universal headers
fb07f408b6 (python-font-lock-keywords): Use new convention for installing in mode
2a0711d8db Removing this -- complex numbers are now builtin, and there is already a similar demo in Demo/classes/Complex.py.
5680906cdb Change all three fopen calls to use binary mode.
05bc4af47d Lee's next version.  Careful: this now dumps core for me on SGI IRIX 5.3. Lee is wondering whether to withdraw his patchs.  Sigh.
ad183bbfe6 Removed nonstandard strftime formats (strftime is tested more extensively in test_strftime.py anyway).
eea9ab723d Rebuilt everything with Guido's new sources, added a few modules here and there, etc. These projects are still CW10.
ab786562b0 Added calldll module
0040b4704e - Put USE_MAC_DYNAMIC_LOADING beack here in stead of auto-enabling it   in importdl.c (I had just one crash too many with a static python   importing a dynamic module) - On powerpc, enable USE_CACHE_ALIGNED with a linesize of 32 bytes.
7e94404081 Only go into eventloop/interrupt check 10 times per second
4f27a55e80 Comments around identifier after #endif
c1cd2ca999 Added operator, errno and soundex modules.
e0e1f1a25d Redid arg/return handling (still not as I would like it to be, though).
78016145d6 Remove some bogus code that would cause a NameError if a -r option was passed.
13ddde0653 Remove %n and %t from the list of standard expectations.
19302de7a0 join(): Wax the incorrect leading comment
7574587587 Document the new join() semantics.
fbd64c8790 Restructured quite a bit, hopefully Lee Busby will find this useful. Also grandly renamed.
384d249006 join(): join one or more path components
736bb0659f Added a paragraph to describe clear_cache(), and why it's necessary.
cd77df64e6 Document the new get_syntax() function.
b67a25c079 Store the current regex syntax along with the regular expression string as the key to the cache.  This means that changing the syntax will return the correct compiled pattern.
909d7c3284 regex_get_syntax(): New module function exported to Python.
152f9d9663 Put back #! /usr/local/bin/python.  For cgi scripts, /usr/bin/env is unlikely to find a python binary, as /usr/local/bin is usually not on the default search path.
01094e4089 Change the question about os.environ changes not working -- it now works unless you don't have putenv.
8651d27e0a Two changes: - add awarning about reconfiguring after Slackware96 fix - add reference to Jim F's ExtensionClass module
b3928d2ffd An initial stab at calling random C routines from Python
ce7fc98d86 Initial stab at calling C routines from python dynamically
9580609ba3 Require _tkinter -- don't attempt to import tkinter when _tkinter does not exist.  All 8 uses of tkinter are replaced with _tkinter.  Still create a variable tkinter though, because that is used by other modules importing Tkinter (e.g. tkinter.createfilehandler()).
10efb05d51 Add fpectl and fpetest modules.
4a3df1c936 Changes for Lee Busby's SIGFPE patch set. New symbol WANT_SIGFPE_HANDLER.
52fa3a6909 Changes for Lee Busby's SIGFPE patch set. Two new modules fpectl and fpetest. Surround various and sundry f.p. operations with PyFPE_*_PROTECT macros.
0ae748d3c4 Changes for Lee Busby's SIGFPE patch set. New file pyfpe.c and exception FloatingPointError. Surround some f.p. operations with PyFPE macro brackets.
09e6ad0c1e Changes for Lee Busby's SIGFPE patch set. Surround various f.p. operations with  PyFPE_{START,END}_PROTECT macros.
7d4266ed5a Changes for Lee Busby's SIGFPE patch set. New file pyfpe.h, new exception FloatingPointError.
1ca407f3e4 Fix the comments for bitwise and/or.
0f4bbd2f34 Keep gcc -Wall happy.
bae95189b0 Added decl for Py_AddPendingCall and include mymalloc.h, all to keep lint happy.
129e91aa77 Add parentheses around && within || as gcc -Wall advises.
2dc466169e Oops, remove an unused variable from PyErr_Format().
5c4998b236 Added decl for Py_FdIsInteractive.
3f3a2686b8 Added decl for Py_InteractiveFlag.
775af91911 My version of Lee Busby's patches to make '-i' pretend stdin is a tty even if it isn't.  Changes:
7433b12a5c Added new global flag variable Py_InteractiveFlag and new function Py_FdIsInteractive().  The flag is supposed to be set by the -i command line option.  The function is supposed to be called instead of isatty().  This is used for Lee Busby's wish #1, to have an option that pretends stdin is interactive even when it really isn't.
115eb64ff6 Added PyArg_ParseTupleAndKeywords, PyErr_Format.
c4193f1547 Added prototype for PyErr_Format(exception, formatstring, ...) -> NULL.
1548bacb14 Added convenience function PyErr_Format(exception, formatstring, ...) -> NULL.
babacb0369 Added .cxx and .cpp to extensions recognized as source files.
36280a7772 Added PyArg_ParseTupleAndKeywords() prototype.
fb76f1af9b djgpp support.
c1cc8ab1a4 djgpp fix (SIGMAX).
a78bfe1985 Issue a more meaningful error if strftime keeps returning a NULL pointer. Run the loop up to and including 8k.
0d85be19e2 *Don't* kill all local variables on function exit.  This will be done by the frameobject dealloc when it is time for the locals to go.  When there's still a traceback object referencing this stack frame, we don't want the local variables to disappear yet.
36b9f7908a Slight tweak: in string_hash(), if the hash hasn't been computed yet, and if there's a pointer to an interned version of the string, use its hash and store its hash in this object, rather than recomputing it.
7582bfb60a Kill all local variables when the frame is deallocated (moved here from ceval.c).
764d6c7acd Gave the Listbox selection methods their correct (longer) names. Removed select_adjust -- Tk no longer supports this.
1851a67695 Changes by Sjoerd (reformatted).
6fb6f10a96 Added doco for ratecv.
c8504e2764 Added test for ratecv (from Sjoerd, reformatted).
e8811f85ed Added intern() function.
17ca992818 Put support for a cnf dictionary back in, since it is still supported by all true Tkinter widgets.  (Not that I *like* this module -- it stinks, but until I have something better, I can't nuke it.)
50b82e8e18 Merged in Jack's fixes.  This brings some lines beyond 79 chars again; I'll clean that up later.  Also corrected a mistake introduced by the previous reformatting: an 'else' belonging to a 'for' was accidentally reindented to belong to the 'if' inside the 'for'.  Note that the module uses inconsistent indentation -- most code is indented with 8 spaces, but some of the reformatted code uses 4 spaces.  I'll fix this later in the promised cleanup pass.
838cb28290 Put a new, more useful, set of references in the leading comment.
7e924dd10d Correct typo in PyArg_ParseTuple example.
3c2871e1df The USE_CACHE_ALIGNING define now has a value: the number of *words* in a cacheline.
af310c1d00 Restructured Checker class to get rid of 'ext' table. Links are now either in 'todo' or 'done', and ext links are hadled more like local links except that no further links are gathered (and sometimes they aren't checked, e.g. for mailto and news URLs).  The -x option reverses its meaning: it disables checking of ext links (they are moved to 'done' without checking).  A new 'errors' table collects pages with bad links as we go -- redundant, but useful for the GUI version which needs to report this as we go.  Some new methods, including reset(). New checkpoint format.
b4ef4c6d4c Optionally (on USE_CACHE_ALIGN) extend overhead structure to align returned addresses on 16-byte cacheline boundary.
4f6ecdaacf Add root URL entry box, separate start/stop/step buttons. If the users selects an item in 'To check', start checking there.
6133ec656e Process <img> and <frame> tags. Don't bother skipping second href.
de99d310cc Check in another copy of tktools.py...
06981c328d Tk interface to webchecker.  Not fully featured yet, but usable.
0b0b5f0279 Spin off checking of external page in a subroutine. Increase MAXPAGE to 150K. Add back printing of __doc__ for usage message.
42218ce33c Added/updated copyright notices (and the &*^$%@ resource files got binhexed again, sigh)
02dee9b1a9 Added _tkinter modules in Image extension
19a14b6635 Image libraries moved and small things
e5605ba3c2 Many misc changes.
941f70c331 (py-mode-map): Comment Out Region / Uncomment Region should use py-comment-region instead of comment-region.
2ccda502f6 #Updated authorship line
f770578225 (py-parse-partial-sexp-works-p): New variable to work around a bug in parse-partial-sexp in some Emacsen.
d23d9409f3 Move the 'import os' in URLopener.cleanup() to inside the block guarded by 'if self.tempcache', to reduce the likelihood of this causing an exception when invoked during __del__...
f5c20575cb Renamed
22023f4b77 Added imgpng
c59a5d449f Set proper User-agent header (Python-webchecker/<version>).
2739cd74b3 Some refinements of the external-link checking code: insert the errors in the 'bad' dictionary (sanitize them so they are picklable; the sanitation code is now a subroutine); don't check mailto: URLs; omit colon in Error message.
de66268588 Added -x option to check external links.  Slooooow!
325a64f207 Catch I/O errors when parsing robots.txt file. Add version number, printed at startup in non-quited mode.
df47bafa1c Basic README file
3edbb35023 Added robots.txt support, using Skip Montanaro's parser. Fixed occasional inclusion of unpicklable objects (Message in errors). Changed indent of a few messages.
bbf8c2fafd Skip Montanaro's robots.txt parser.
272b37d686 web tree checker
d7e4705d8f mime types guesser
fc167c6ba2 Did nobody ever notice that "make test" didn't print the summary line any more?  This was because the *parent* process in test_socket.py did an os._exit(0)!  Getting rid of that now...
efb4609c4a Small lookmapping nits: - remove bogus initialization using uninitialized i - derive initial incr from hash - copy mp->ma_table into a local variable
5ed19dcc0e posix_execve(): Accept any mapping protocol object for the env argument, not hardwired to a dictionary.
4acdc2327f Fix bug reported by Per Lindqvist: "%#06x" % 1 stuck the 0 padding in front of the 0x, like such: "0000x1".
9e5656ca3f Final three poly table entries corrected by Tim Peters. Reindented the whole table.
47110d7f44 Change bsddbmodule.o -> bsddbmodule.c.
bd5f193ee5 Added LDLAST variable, substituted by configure script, for the final argument to the linker (required for DEC Alpha threads).
16e93a8d59 Changed the lookup algorithm again, based on Reimer Behrends's post. The table size is now constrained to be a power of two, and we use a variable increment based on GF(2^n)-{0} (not that I have the faintest idea what that is :-) which helps avoid the expensive '%' operation.
deb0c5e66c Two small changes:
866016b92d new.code() has grown another foot, eh, another two arguments.
d0eb429b88 Plug a leak with calling something other than a function or method is called with keyword arguments -- the keyword and value were leaked. This affected for instance with a __call__() method.
950361c6ca Patches for (two forms of) optional dynamic execution profiling -- i.e., counting opcode frequencies, or (with DXPAIRS defined) opcode pair frequencies.  Define DYNAMIC_EXECUTION_PROFILE on the command line (for this file and for sysmodule.c) to enable.
8c5df06ec7 Change the control flow for error handling in the function prelude to jump to the "Kill locals" section at the end.  Add #ifdef macintosh bandaid to make sure we call sigcheck() on the Mac.
43f1b8d6e4 Added optional interface for dynamic execution profile (to be gathered in ceval.c).
b3f515af64 Get the line number from PyCode_Addr2Line instead of believing tb_lineno.  Store it in tb_lineno for the user.
747596a491 When a recycled frame has more local+stack slots than needed, give the extra slots to the stack rather than than forgetting about them (this reduces the number of reallocs done).
463e55a916 Two more arguments to newcodeobject -- first lineno and lineno table.
99d182550b New magin number (because of linenumber table).
d031c89891 Marshal the line number table of code objects.
da4eb5c3b5 Instead of emitting SET_LINENO instructions, generate a line number table which is incorporated in the code object.  This way, the runtime overhead to keep track of line numbers is only incurred when an exception has to be reported.
767579854c Add co_firstlineno and co_lnotab, for the line number table generated by the compiler (in lieu of SET_LINENO instructions).
f2b2dac5eb Initialize the ob_type field of PyAST_Type dynamically (in initparser()) instead of statically (in the initializer).  The static initialization, using the address of an object in a different DLL, is too much for the Microsoft VC++ compiler, and we want to be able to build this module as a separate DLL (it's nice to have but we don't want to increase the core DLL's size by 25K).  This same trick has been applied to a number of modules, e.g. NumPy and _tkinter.
ca756f2a1d Forget keeping track of whether a dictionary contains all interned string keys.  Just doing a pointer compare before the string compare (in fact before the hash compare!) is just as fast.
4462e93259 Various notes added:
ec2f073a9c The usual
44be35aca4 A number of new symbols have appeared (courtesy autoconf 2.12?)
54d93d446b Add --with-dec-threads, for DEL Alpha, which requires -threads as the *final* linker argument.  This implies --with-thread.
e0e696282f Added PyCObject_Import.
43d287ad73 (libparser.tex):  Fix typo found by Mark Hammond.
c1ef39f795 Bump version to 1.5a1.
f631d13ac7 Bump install version to 1.5.
728a09e0f6 Remove GetOwner, add GetBuildInfo...
4ee5811bd8 Added getbuildinfo.c to the project.
73e122f563 Fix splitext() to go up to the last dot, not the first.
76f587b7f8 Avoid traceback in selection_own_get() when no Tk widget owns the selection; return None instead.
b7cf5bb1c2 Darn.  Updated version number for configure.in.
f78abae10f Let --with-threads be an alias for --with-thread.
a4240132ec Kill all local variables on function return.  This closes a gigantic leak of memory and file descriptors (thanks for Roj for reporting that!).  Alas, the speed goes down by 5%. :-(
a04d47b319 Don't use static buffers internally for formatstring().
70d44787a3 Only call sigcheck() at the ticker code if we don't have true signals. This is safe now that both intrcheck() and signalmodule.c schedule a sigcheck() call via Py_AddPendingCall().
fcdd0e40a4 Arrange for PyErr_CheckSignals() to be called via Py_AddPendingCall(). This avoids having to call sigcheck() (the same routine by its old name :-) in the ticker code in ceval.c's main interpreter loop.
ad74fa6674 In the Unix version, arrange for sigcheck() to be called via Py_AddPendingCall().  This avoids having to call sigcheck() in the ticker code in ceval.c's main interpreter loop.
1aa14838d2 Cleanup: - fix bug in Py_MakePendingCalls() with threading - fix return type of do_raise - remove build_slice (same as PySlice_New) - remove code inside #if 0 - remove code inside #ifdef CHECK_STACK - remove code inside #ifdef SUPPORT_OBSOLETE_ACCESS - comment about newimp.py should refer to ni.py
554fa49500 get build info from elsewhere
2fff2e6b05 work build# into version string
3bb63a8dbe Bugfix: remove ref to fast before it's defined.
768360243a Changes for frame object speedup:
f3e85a0356 Changes that appear to give another 12% speedup.
cdf578ebaf New lay-out of frame object, for fewer mallocs. See frameobject.c checkin message.
7eb883a18e Remove unused variable.
8d75161671 Intern the string "__complex__".
7b89b6a660 Intern all names and varnames in newcodeobject(), plus those string literals that look like identifiers.  Also intern all strings used as names during the compilation.
a412d24be0 Intern the various string objects created to speed up lookups.
b56933ed2e Intern the strings "__builtins__".
c6d0670f1b Intern the strings created in getattr() and setattr().
2a61e7428d String interning.
ee5cf9b672 Bump API version due to the various speedup hacks.
1e6e9a2368 Two speedup hacks.  Caching the hash saves recalculation of a string's hash value.  Interning strings (which requires hash caching) tries to ensure that only one string object with a given value exists, so equality tests are one pointer comparison.  Together, these can speed the interpreter up by as much as 20%.  Each costs the size of a long or pointer per string object.  In addition, interned strings live until the end of times.  If you are concerned about memory footprint, simply comment the #define out here (and rebuild everything!).
3dfd53b4c8 Add "if (x != NULL) continue;" (or similar for err==0) before the break to most cases, as suggested by Tim Peters.  This gives another 8-10% speedup.
04f2b453bb Version 1.1.  Fix memory leak and expensive comparison with None.
3e7ae7ab17 Fix the _setmode() patch for MS_WINDOWS: include <fcntl.h> and use fileno(std*).
e3258019c8 Remove obsolete PyFrame_ExtendStack.
3d77d2b10b Removed accessobject.c from file list.
e9fd28dae5 Add stacksize argument to new.code().
792fd435ec Comment out extend_stack() -- it is no longer needed.
98a9b312e8 Marshal the new stacksize item in code objects.
7af8130857 Working semaphore implementation by Sjoerd.
dd5db43905 New MAGIC number (code objects have one more item when marshalled).
62f7d15d0b Use the stack size from the code object and the CO_MAXBLOCKS constant from compile.h.  Remove all eval stack overflow checks.
8b993a98db Add co_stacksize field to codeobject structure, and stacksize argument to PyCode_New() argument list.  Move MAXBLOCKS constant to conpile.h.
3f6e408a31 Add co_stacksize field to codeobject structure, and stacksize argument to PyCode_New() argument list.  Also add CO_MAXBLOCKS constant indicating the maximum static nesting supported by the compiler.
00f86e6086 Of course, when the type of the argument to dis() is unsupported, it should raise TypeError, not ValueError...
bd30795192 More user friedly interface:
c905fffa15 Added Sjoerd's submitted 'ratecv' method.  Made corrections for new names. Reindented.
1d1394e660 Make as sure as we can that the forked child does not return and continue the tests.
ed648a25bd Renamed, but not tested.  Guido will you try your test script on this?
e474fb36ab Renamed.
5c7e711bb1 Test output for the SGI cl C module test script.
69ed964f86 Lame test script for the SGI cl C module.
e886ea916e (puremodule.c): New module which exports the Purify and Quantify C API to Python.  Minimal documentation is included in comments at the top of the file, and in the Misc/PURIFY.README file.  Note that this module must be statically linked since Pure doesn't provide shared stubs libraries.
bb779ec4d9 README file for hints on Purify'ing or Quantify'ing the Python interpreter.  It also mentions the soon to be checked in pure module.
d9240d19b2 Already renamed.  Indented.
eca63b83ac Output from test script for the bsddb C extension module.
352e186749 Test script for the bsddb C extension module.
7d18159614 Rewrote lookmapping() according to suggestions by Jyrki Alakuijala.
3b039faf19 Minor output message change
d0bc9cb869 Merge several mods:
5f4ce18898 Renamed.
469848a1ea As per GvR recomendations, remove the restriction that binhex only run on big-endian machines.  This is done by directing the struct module's pack and unpack methods to treat the data always in bin endian format. This has been tested on irix (big endian) and solaris x86 (little endian) but not yet on the mac.
47d3500787 set_key(): Use Py_CHARMASK macro to get the character from the array unsigned.  This fixes the 8bit-char-in-key platform incompatibility.
4852d37fdd test output for the binascii C module test script.
2a1c83441d test script for the binascii C module.
fa701a88ab reformatted
e4d7821ea4 test is no longer needed
52a6ea7b7d Opps.  Added tests for the last two methods that were missing from  the test program: 'grey2rgb' and 'rgb2grey'
e17ec8d149 Modified to use 'rgbimg' instead of the SGI specific 'imgfile' for reading the imagefiles and converting tham to a format suitable for imageop.  Also added two more tests 'rgb2rgb8' and 'rgb82rgb' which remove the dependence on the file 'greytest.rgb'.
1ce7c6fde8 Irix 6 specific files -- thanks Sjoerd!
6ad8d13fe2 "ported" Guido's embedding demo to the mac, and wrote some minimal notes on embedding on the mac.
52ac037249 Added PyMac_Initialize() routine, to be used by embedding programs (in stead of standard Py_Initialize(), which it calls).
5cd752028c Describe new ("unsigned") behavior of hex() and oct().
9a0313cd62 Removed _xdr module
bd8a91198d test(): close the pipe, just to shut up Purify.
93d29b6895 Eliminated gcc -Wall complaints:
61a63e152d Quieted gcc -Wall by removing unused local variables.
54dbf02da2 Quieted gcc -Wall by removing unused local variables.
845a4c6bb7 Formatting.
41317d120d Obsolete, now that xdrlib.py uses the new-and-improved struct module.
7e98bda43b Raise ConversionError instances the new fangled way, e.g.:
6f72f97c03 Increased buffer sizes used by hex() and oct() -- on 64-bit or 128-bit machines, the string may get longer than 20 characters!
7a515b9156 Output for test of the timing module
a6aca46fcb Test of the timing module
58d40a7400 Renamed.
5b456645fb Use the new regrtest harness
4a6cf4167b Formatting, and minor error detection
6f332d8f35 updated the hex(-16) test since hex() of a signed literal has changed.
906a5e9c68 updated the oct(-100) test since oct() of a signed literal has changed.
64278cf5f7 initthread(): Removed extraneous Py_INCREF(ThreadError)
3de721d073 Catch sunaudiodev.error on open() and re-raise TestFailed exception.
59e066e73b Oops, remove debugging statements
b241c42192 A slightly better test of sunaudiodev module.  Include the audio data in the distribution.
dbfb8d4626 Rewrite the `hostname mismatch' test as per GvR suggestion.
d08735a54b Skip empty paths read from the registry.
9c6ba5e901 Fix leak involving BuildValue("...O...").
ebee0256f3 Changed hex() and oct() again, to never emit a '-' sign.
fde462e173 Add the Lib/MACHDEP subdir to TESTPATH.
ee88ff9d05 Add entries for cStringIO and cPickle
f22d7e2c69 On Windows, -u implies binary mode for stdin/stdout (as well as unbuffered stdout/stderr).
919cf1aff1 New, better hash for floating point and complex
265b5b3f03 Use new struct which supports standardized sizes
88b85d4f63 Add __len__ method
afe3ebfa5c Use newer struct, which handles unsigned long right
fe27a50847 Added warning that gethostname() doesn't always return fqdn, and show how to find it using gethostbyaddr().
5709dcfaec The usual return-value and memory management checks.  I'm not planning a test for this module though (it does compile at least on Solaris 2.5)
4de02d9722 (ftplib.py):  Added parse150() function and FTP.ntransfercmd().  This allows 	access to the expected size of a transfer when available.
80dd9b6672 Subtle change to hex/oct formatting so the largest negative number does not receive a minus sign.
8dc797d1f8 Return preferences of unknown type as opaque data
466be801fd Minor fix to get non-gusi python to compile again
8dc8a6e4be Mac-specific version of getmtime (for non-GUSI Python, which needs different include files)
41dc09d10e (Tkinter.py):  Add support for Frame(w, class_="classname") as an alternative 	to Frame(w, cnf={"class": "classname"}).  I think this is the only 	widget other than Toplevel that needs to be concerned about setting 	the widget's class (-class must be the first option on the Tcl 	widget creation command).
43a476ac00 Formatting changes, plus memory management in initsyslog()
73a75eb79b initsignal(): Py_DECREFs really should be Py_XDECREFs in case the PyInt_FromLong's failed.
42185a2d7a Plugged a couple of potential return value problems, memory leaks, and descriptor leaks.
2dc8c2c26b Primarily formatting changes, but I also plugged a couple of potential return value problems, memory leaks, and descriptor leaks.
4bc9d39560 Nailed a couple of memory leaks, caught by Purify.
4b76ba3280 High-level interface to Internet Config (and readability fix to icgluetest.py)
5bc697dd31 Test of the sunaudiodev module -- it simply plays a sound if it can find one and doesn't output any data that can be verified.  If it can't find a sound file by looking in the standard Solaris locations (which we can extend later), it raises an ImportError.
dce1005908 Added an os._exit(0) in the parent so we don't have two test processes after test_socket.py is run!
52e87f3773 Added icglue modules and (optionally) NumPy and PIL extensions
b28efe669c - Added optional profiling support - Added Internet Config interface - Use different ports of zlib and libpng
8c6932136c Added profiler initialization/finalization code (if __profile__ is defined)
8ce72f50b5 Low-level interface to Internet Config (to be augmented by nice Python wrapper shortly)
3beb3363d4 Minimal test of icglue module
0d2971badb Document that sys.builtin_module_names is now a tuple.
2f4caa4c48 cPickle, version 0.1.
55702f8d6a Jim's latest version.
635abd24f0 Check for duplicate keyword arguments at compile time.
8f49e12a0e Make builtin_module_names a tuple instead of a list.
541cdd84ac Fix overflow test for multiply to catch some cases it missed. Added warning about dependency of float/complex hash on int hash.
d81a1baa5f Jim's latest version
d4ff1b908b New strop_joinfields implementation, highly optimized for Lists.  All other sequences use the Sequence protocol from the abstract API.  The algorithm has changed so that only one pass through the sequences are made.
95f92dfad4 New output file for strop test
da0e520bc0 Added a couple of strop.join() tests for large lists and long items within the lists (new output file to be checked in shortly).
9c5494a1b9 added PyTuple_GET_SIZE macro
accfb849f9 added PyString_GET_SIZE macro
1f2bd07aed added PyList_GET_SIZE macro
e0548b8da7 Rewrote translate() as follows: 	- 'delete' is a C++ keyword; use 'del_table' instead 	- apply Py_CHARMASK() to del_table[i] before using it as an index 	  *** this fixes a bug that was just reported on the list *** 	- if the translation didn't make any changes, INCREF and return 	  the original string 	- when del_table is empty or omitted, don't copy the translation 	  table to a table of ints (should be a bit faster)
04d2d15b6b strop_upper(), strop_lower(): shared code version caused to much of a performance hit.  Urg.  Reverted.
7fc0bf8247 Fix the following bug:
bf0c3ca9bd Renamed but not well tested.
32e949d1f2 This is a very inobstrusive test for the existance of the SGI cd module and all it's attributes.  More comprehensive examples can be found in Demo/cd and require that you have a CD and a CD ROM drive
5150542b8f Output file for test_cd.py
e8fc29cde7 Several changes:
9d1a02ce33 Some small changes.
a2a8b27221 Renamed, but not throughly tested.
4a9ac0612d Output file for test_al.py
1f983df3bd This is a very inobstrusive test for the existance of the al module and all it's attributes.  More comprehensive examples can be found in Demo/al
7ba4c07768 Renamed, but untested.
9bc7e0af50 Added PyLong*UnsignedLong and PyCobject interfaces.
d44be3fdb7 very minor typo
61bc874b19 Output of socket module test.
cf3d4b5123 Test of the socket module.  The following functions and methods are not currently tested (or even touched):
eaa6e1102f Renamed, reindented. (was already partially complete)
653071731a 'I' and 'L' now always return a Python long.
b0b8181622 Added unsigned data formats (B, H, I, L).
7a61f871a7 Updated to include the verbose flag from test_support
549ab711aa Add new formats B, H, I, L for unsigned data types (analogous to the recent changes in the struct module).
6c87ecaff1 Changed the ``add/sub_offset'' hacks for dealing with C's unsigned int/long types, and use the new PyLong_FromUnsignedLong() and PyLong_AsUnsignedLong() interfaces instead.
04ebf5ca5d Change the ``calcsize*3'' test to be portable to 64-bit machines.
5b0eba3ced Reindented.
752300bbdf Check of return values and proper error handling.
53756b1097 Added PyLong_FromUnsignedLong() and PyLong_AsUnsignedLong().
461a1c172f Output for signal module test
042a05172f Add $(srcdir) in front of the test program's name (else it won't work when $(srcdir) isn't '.', i.e. when using VPATH).
b9d338cbfb Fill pad bytes with zeros (fixing a bug dating from the very first version!).
dbadd558b5 Describe standard float/double support. Rewrite example to be an interactive session
b9a781e177 Scratch the ears of gcc -Wall.
f3f41a9e57 Added declaration for PyErr_SetInterrupt.
929711765e Several changes:
420c11c6aa Added f/d tests for specific byte orders.
4ccc531f34 Ok, ok, I've fixed gradual underflow on packing too.
6083f0e9ce Use the new struct module's ability to pack and unpack standardized data formats.  The _xdr module is no longer used, since struct supports the required IEEE floats and doubles.
07ef655222 Oops -- unpack float/double didn't do the right thing if e==0.
74679b455f Support float and double in non-native formats. These use the ANSI/IEEE standard, which is also used by XDR; so the _xdr module may become obsolete.
9e3fceb5b3 rotorobj_setkey(): A single string argument is now required (i.e. no long optional with nearly-no-op missing).
5afafad82d <rotorobj>.setkey() now requires exactly one argument
9121ab9433 Switched over to use the new testregr.py test harness.
6717030dc9 setkey method's argument is no longer optional (it used to be a no-op when missing).
b02092a9b2 Added characteristics of shttp, https, and snews.
6757748641 Properly parenthesize a long Boolean combination.  Formerly, you could pass invalid seed values.
3c83bb49d0 The usual...
8c4ed9ae5d Rewritten the readline test, hopefully it's okay now.
591bbb1572 (libformatter.tex):  Document the flush() method on the writer.
2823168c46 (formatter.py):  Add a flush() method to the writer interface.  This really 	needs to be a standard part of the interface, so we'll have it in 	for the next release.
2a37850273 Exercise the new feature set somewhat. Use TestFailed exception and verbose flag from test_support module.
60c50614e1 Added better handling of unsigned longs -- a Python long returned by unpack('L', ...) is now acceptable to pack('L', ...).
36bb181cdf Rewrote _{read,write}_{short,long} to use the newly revamped struct module.  (Small problem: struct.pack() won't deal with the Python long ints returned by struct.unpack() for the 'L' format.  Worked around that for now.)
3dd68d3364 Added libstat.tex
125434665b Document the new extensions.
3aa27fd315 Fix the first bugs...  treatment of 0 count was wrong, and memchr() should be memset().
f7e6b4b388 Pretty much rewritten to fulfull several long-standing wishes:
b5846d7600 A different winning animation.
408027ea46 Rename DEBUG macro to Py_DEBUG
a0dc1c4a61 Actually, *this* fixes the last bug.
1b2b53a25d Considerably restructured.  This fixes the one remaining bug.
8de9f894e1 Solitaire game, like the one that comes with Windows.
c17a268398 Added support for RFC 850 style dates, as used by some HTTP servers (such as Netscape-Commerce and CERN).
178ff353e8 Fix bogus implementation of Group.bind(). Added unbind() to CanvasItem and Group classes.
8371013f9a Added config(ure) method to Image class. (Fred Drake)
0b96b945b8 Change the default values for IntVar and DoubleVar to numbers (they were strings, accidentally).
671dc20efc Crude but effective hack to clear the parser cache every so often. (Fred Drake.)
babab6869f Removed all traces of accessobject.c.
fbd1d74286 Renamed.
cf284cc5db Test output for the gl C extension module.
6da2953f1e gl is a *huge* module.  This is a very simple test that insures that all the modules attributes are present and creates a small criss-cross window for 5 seconds (example from the documentation :-)  A more comprehensive test would probably be useful... but maybe overkill.
fb817cd4a2 Output files
5e056bbb76 test_rotor.py: New test of the rotor module.
aeb207c6b6 Reworked to check for memory problems (one potential found), non-checked error return values, and where appropriate, PyArg_ParseTuple() style argument parsing.
f308c0f1fc From reading the source, it turns out that the setkey() method can take an optional string key, but if key is not given, the method does nothing!  In the rewrite (see upcoming check-in), I left things this way, but here I document that this is the case.
f3dd5aab2f - CWGUSI has moved - Changed instructions for Tcl 7.6/Tk 4.2
a742d117db Added a chapter on using OSAXen
a83caa0331 Added range of resource-ids for twit.
c75e1d052b Added Application.cleanup method which asks all windows to close themselves and returns true if they did.
81aa0e2888 Added gdbm (if USE_GDBM defined)
b280e2bac2 Moved resources around to forestall conflicts with debuggee
3097463ef9 Added gdbm
83b17e8045 Added gdbm plugins, changed jpeg library to v6, various minor changes
e1d325fb40 Added gdbm plugins
8bd7c56459 If sys.argv is empty ask for input file and output folder
f85f052035 Very very small comment change.
fab8ab8067 Many scripts, but small changes.  Update the way the scripts obtain the 'verbose' flag ala GvR updated test harness architecture.
4b722788ae added test of the regex module
7f33e403a4 Renamed.
c357325663 Several changes.  Test program to follow.
4455cd8e19 More and better comments.
3507f502c9 Minor semantic cleanup.
e9e0bd90ae Output for test script for the SGI imgfile module.
033d91b784 Test script for the SGI imgfile module.
a141f8a31a Renamed.
470dcbf8e3 8 bit greyscale test file needed for testing imageop and imgfile.
47e98307e0 Test program for the SGI imageop module.
cfaac40e31 test output for SGI imageop C module.
fca8371e1f (python-cc-style): Added definitions for c-hanging-braces-alist which make the most sense for PyMethodDef structures.  [one small fix]
7607e8f4fb (python-cc-style): Added definitions for c-hanging-braces-alist which make the most sense for PyMethodDef structures.
0b25a662e0 Two new files (to shut up regrtest).
4f30aff585 Added example DL for SGI IRIX.
4fdb744f53 Added test for minmax.
152494aea2 New regression test harness.  See usage message / doc string.
2bde783a97 Import verbose flag from test_support instead of testing __name__.
0a94cc788e Set test_support.verbose to 0, to signal tests only to generate portable output.
531661c1ae Add verbose flag for regression test to clear.
e5a43a405d Describe open(2) exported constants
4a34209468 1. Export open(2) flag constants for every defined constant
e8e9ed176f Docs for stat.py -- docs by Skip Montanaro.
fa5a6cff45 posix.open(): third argument (mode) is optional.
bab218e420 Minor formatting changes.
43d68b8fb0 Minor formatting changes.
62ac99ebf5 Documented getprotobyname() interface.
25405c786b Added the new getprotobyname() call to the module overview at the top.
3901d85277 Added getprotobyname() interface.
ae0cd0b9b3 (libunix.tex):  Change matching lib.tex: add line item for the resource 	module.
20c6381856 Removed references to getdoublearg and get2doublearg rename macros and substituted the appropriate PyArg_Parse calls.  Retested.  All appears well.
ec0b4af3d4 Eradicated all references to getintarg and getstrarg and substituded the proper functions as defined in rename2.h.  Thanks Barry!
cfe3b61c02 Opps, left out two defines needed for argument parsing.
a09ec19a33 Test of the operator module
39900421bf Added pointer to framereader distribution.
19f61ae196 Tabification changes only; the module was already newly named.
b2b44e5b8a Renamed.
96bd636ad1 Test script output for the UNIX group file access module (grp)
749cc6b241 Test script for the UNIX group file access module (grp)
f90eddef5d PySequence_Index(): set exception when object is not found in sequence, otherwise
2e6313930e Added Jeremy's resource module.
3c7b2dc02c Added docs for Jeremy's resource module.
5eaf457869 Different operation in verbose mode: show the supported nonstandard options.  Also added two: %n and %t (newline and tab character).
af82a7ef49 In lieu of harness rewrite, fixed problem with test_thread ImportError triggering a bogus TestFailed exception.
4a4880966b Correct *another* mistake (initmath() always fell through to fatal error). Watch it, Barry! :-)
4c4cbf397b Correct 1-char typo / syntax error.
b05399373c (py-delete-function): new variable
5c8bef1888 (python-mode): added comment-end definitions.
c88c9cb23f Corrected two errors introduced by the renaming (and the subsequent style corrections, I presume), found by Jack.  Added warning that this has not been tested (Jack could only compile and link it).
b15bef85a7 Renamed in a grand-ee-ous way!
d87e0bf651 Test output for the GNU dbm module (gdbm)
62a017c092 Test script for the GNU dbm module (gdbm)
4ca4b07516 Opps, left in a /*#include "modsupport.h"*/
919213a098 Grandly renamed.
0bff94ffdf Added the test output for fcntl.
fb01d4b1a4 Added a test script for the fcntl C module.
4004e21484 Another fix for Split() -- don't refuse {"} but turn it into ". This is needed because if a configure option has " as its value, it will be rendered as {"}; after stripping one level of quoting it's just ", on which splitlist will barf.
0f868375ff Check errors returned by recursive call to Split().
fc93f75da7 Better error checking in initmath().
d0c1042ff2 Renamed.
8069f43815 Output for _xdr module test
10f124c951 Updated to standard Python C coding style, and fixed a few error checking nits.
3863fb53b8 A test of the _xdrmodule (not the entire xdr.py module).
237efc5d6f Added _xdrmodule test
ac3acc2b48 (test_thread): output from thread test
af0a1a6530 (test_thread.py): modifications to quiet it up when not running as a script.
63a0c376ea (libunix.tex):  Changed two occurances of "Unix" to "\UNIX{}".
09bcf8c031 (sgmllib.py):  Partial acceptance of patch from David Leonard 	<leonard@dstc.edu.au>; allows hyphen and period in the middle 	of attribute names.  Still not allowed as first character; 	as first character these are illegal in the Reference Concrete 	Syntax, and we've not identified any use of these characters as 	the first char in an attribute name in deployment on the web.
b6454e58bc Updated test_crypt test to jive with bwarsaw testing style
a38ab505b6 Revised output for test_crypt
9c6db35a1e Revised test for errno ala bwarsaw's testing paradigm.
8a51de4cdd Output files for test_dl and test_errno
e00d4da7fa Added test_dl to harness
2362b58952 Revised strategy for testing recomended by bwarsaw
14ed5fb1ec initsignal(): Added SIGXCPU and SIGXFSZ.  Left in the definitions for SIGCPU and SIGFSZ but we're (Jeremy and I) are actually unsure whether these were typos or if there are systems that use these alternate names.  We've checked Solaris, SunOS, and IRIX; they contain only the SIGX* names.
8ba76d3cf3 Added test_errno to the test suite
529fcfe31f list2set(): correct return value (an int, not a PyObject*).
0969ad213d Better tuple hash function.
cc15b42e59 Change comment about MINSIZE -- 10 is optimal for Python.
81a6fe9b98 Removed a #inlclude <errno.h> since it's implied with "Python.h"
24c4b3d4e8 list2set(): PyList_GetItem could fail.
094579e677 (libtime.tex):  Merged in changes from Tamito Kajiyama.
4b3f0312c9 (lib<all sorts of stuff>.tex): 	Merged in many typo corrections and fixes to support GNU info 	processing; submitted by Tamito Kajiyama.
6dc2aae3cd (tut.tex):  Normalized all uses of "UNIX" and "{\UNIX}" to use "\UNIX{}", 	per usage needed for GNU info processing.  Based on comments from 	Tamito Kajiyama.
30824246b3 (myformat.sty):  Added a note about using \command{} v. {\command} wrt. 	GNU info processing.
0e12032748 Renamed.
7eee08d04f Test for the dl module.  This only works for SunOS and Solaris. I've attempted to make a test that silently exits if either module dl is not present, we're not on a Sun OS, or a standard shared library ('/usr/lib/libresolv.so') is not found...  Otherwise, It does a simple test of dlmodule on that library.  I *think* this would be ok to add to testall.py but I'll wait till I hear some feedback on the liberalness of this approach.
2cc8163e30 nonstandard_expectations is only added when in verbose mode, so we don't need the if test for verbosity when checking for results of an unsupported option.
4c23b5fdbc Hmm, now that I think about it, we *can* use time.time() and 'date' if running verbose.
4eb01cd372 More or less portabilized.
3c700ed613 Fixed
4e7f62229e Get rid of it -- use bsddb!
bd4b961a0d Opps, fixed a couple of newly introduced wrapping problems.
e7ee8c3753 Reindented via GvR recomendation ala Bwarsaw cppy-style.el
8d40c843c1 Added quote_plus() and unquote_plus(), to do space/plus substitutions for form field values. Also corrected substitution example (the original changed the spelling of "conolly" to "connolly" :).
0564e12367 Added quote_plus() and unquote_plus(), to do space/plus substitutions for form field values.
fbcfd52a9a Added the example "thin ice" from the extensions manual.
d16ddb610a Typos reported by Tamito Kajiyama.
f630f6b93d Renamed, and scrutinized for missed potential error conditions.
e3c0170ba0 Output file for module struct test
27eb14d894 Added support for 4-channel on SGI. Allow specifying the test file on the command line.
25bcdb0e56 Added QUADRO.
8496d39478 Renamed, however there is no test case.  I did test some of the module out manually, and it does compile, but I'm not sure how to write a useful portable test case.  Maybe later...
0caa7ec206 Fixed conversion between seconds and milliseconds.
07a0eeceaa A test of the struct module
30695fa3cd Renamed.
eb14d61e28 (python-cc-style): typo "c-offset-alist" => "c-offsets-alist"
c2feec3378 Renamed, but *not* tested or compiled.  I don't even have the STDWIN library.
cb17a465eb Print final report, either all tests OK, or list of failed and missing tests.
1c92eba2dd Print a more meaningful message when a test's output file wasn't found.
c1cb360683 Reworked to eliminate all potential memory problems, including deletion of object from list argument during callout to fileno().
32616fbee6 Make sure ok_builtin_modules, ok_dynamic_modules and builtin_module_names are always tuples.
15d1079dd2 Fixed test_strftime to be silent when called from autotest.
483705c5a9 Added test_strftime (Skip Montanaro).
6cdd7a0433 Add mktime_tz() which turns a date_tz 10-tuple into a standard Unix timestamp.
21be147094 Added remark about time() and sleep()'s subsecond precision. Added hint about using clock() for benchmarks etc. Removed non-portable strftime directives and field width, and added a warning about non-standard features.
3486f27428 Added soundex (sigh)
c0967cd4a2 Added a bunch of new winfo options; we should now be up to date with Tk 4.2.  The new winfo options supported are: mananger, pointerx, pointerxy, pointery, server, viewable, visualid, visualsavailable.
e4ac0aa618 Several changes... Guido *please* take a look!
792c94a320 A test of the select module that is actually reproduceable!
3176bb1df2 Some more tuning of quicksort: use pointers instead of indexing.
042a207061 Output of rgbimg module test
8bc74ceb8b Added test of rgbimg module
66e7f3ac43 minor formatting nit
7bd9fbdea2 Grandly renamed.
dbfed710a1 Be more careful with the shuffling of stdout.
50c5cf132a Renamed.
d96dfb72ea Output of the nis and pwd module tests
3d070fb391 Test of the pwd module
ebfa2c4417 Added test_pwd
2b6c2faa64 Rewrite without using try-except to break out of two loops.
870d5c67ae Just test one key/value pair for one NIS map.  I.e. don't test them all because it can take a really long time.
3236b334ef test of the nis module
7822681992 added test_nis
1abda0fb12 cat and puste errors
3696c524a4 nis_maplist(): Use check of yp_get_default_domain() return value that's used in other parts of this module.
adbf4e66df Renamed, and bug fixed:
3f236dee3a Added new quicksort implementation, tailored to sorting arrays of object pointers.  Should be a bit faster than the C library's qsort(), and doesn't have the prohibition on recursion that Solaris qsort() has in the threaded version of their C library.
53699e9ec1 Renamed.
dde5c70c8a Test output files in their new location
e4a252ef88 Directory for test output files: Output => output
2e644a0f86 When run as a script, runs each test and sends results to stdout (i.e. this restores the old functionality).
272c00b634 New regression testing harness.
0aa9ee65ab Moved the raise logic out of the main interpreter loop to a separate function.
6c31a14de7 The usual
ce458517b0 Added -lld to AIX LINKFORSHARED.  Monty Stein.
1d75734608 Added a provide so the corresponding require will succeed.
924e5d55b7 A test of the `new' module.  The new.code() test is fairly bogus since I'm really not sure what the proper inputs are.  I do flex the function call though by passing in arguments of the proper type.  I don't try to exec the code object that gets returned!
0f150e41be Added test_new.
a6b7c7146c Renamed.
5de1f8dac8 The usual; added several test modules, too.
bd01374da8 Add optional data argument to urlopen() and open_http(), to trigger POST.
8b82baa398 In the HTTP reply header, be more accepting in the HTTP version.
caf783793d Added remaining declarations needed/used in glmodule.c; keeps gcc -Wall happy.
c1547d930f Better way to handle 64-bit ints, keeping gcc -Wall happy. Tested with AMK's help.
1a2c5cbcc4 Add unistd.h to make gcc -Wall happy.
067998f35e Add const to error and newstring functions
36dd0d27c4 Fix operator priority bug found thanks to gcc -Wall.
e29ed8fa7c Make gcc -Wall happy; remove dummy variable (can't see where it's needed).
fb4130d1f1 Added extern decl for gethostname() to keep gcc -Wall happy.
55db515a51 Great renaming.
09f99dfdba Removed redundant inclusion of <errno.h> (sorry, Roj!).
b0dfe969d9 renamed in a grand fashion.
16f9fd2bcf Added a test script for dbmmodule.c and added it to testall.py and updated testall.out
3ac30af867 Added test_new
abb7efeb7c Renamed a few symbols that were found in comments.
3bdf746c5c Renamed, ungrandly.  We don't have the GNU MP library here so we can't really test this module, or even compile it without a lot of work.
56c345b235 renamed grandly.
75362381b5 new test script for cryptmodule.py
b6b85ddc95 Test script/output for cryptmodule.c added to testall.py and testall.out
5632ce033f (python-cc-style): Although open braces for substatements typically hang on the right side, if they are on a separate line, indent them under the keyword.
24070ca391 Renamed Grandly
3daddda165 New test module for complex math module
b71035782e Added test_cmath.py to test complex math module
3ab26b9d75 (testall.py): Slightly improved test harness to make it easier to add simple tests.
8b43b19ec9 Renamed
5817f8f717 Removed some unneeded header files and reedited with a fixed-width font from emacs as per recomendation from GvR
8c0710fdd3 (python-cc-style): Oops, we decided to use TABs for 8 spaces where possible.
0b32459004 C coding standard for Python C files.
49852831fc Added test_strop
ad522facf7 Added tests of all strop module functions, and touching of module variables
6c832ebfe9 Added test_array output line.
2919eaaf08 Renamed Grandly (I think).
8db1b0764b module to test the arraymodule created and added to testall.py
ece35bc22f Changes to keep gcc -Wall happy.
7ce52be627 Added `void' to declaration of initgl(), to keep gcc -Wall happy.
665f9198fe Added a bunch of extern void decls, to keep gcc -Wall happy.
3d65fa3488 Include <sys/ioctl.h>, to keep gcc -Wall happy.
cd165cc092 Make dummy int public (with _Py_ prefix), to keep gcc -Wall happy.
37273177be Add ``extern void bzero();'' for SGI, to keep gcc -Wall happy.
66a7013c5c Include unistd.h to keep gcc -Wall happy.
259552dbd9 Added ``extern int get_default_domain();'' for SGI, to keep gcc -Wall happy.
52174577eb Added #ifdef around ``extern int ftime();'' for MS WINDOWS (which has a conflicting definition somewhere). Resolved line wrap for error message in ins().
f52560197f Greatly renamed.
ec775c52a2 ins(): missed a renaming in a string: dictinsert => PyDict_SetItemString.
9a2a8a8d31 Greatly renamed.
6ab7f077ff Added test_time
5bebca2ac2 Added 'test_time'
b0c2232011 test of time module.  not terribly fancy, but it does touch every function and variable in the module, verifies a few return values and even tests a couple of known error conditions.
843e712bda Added descriptions of parsedate(), parsedate_tz(), getdate_tz() (all contributed by Andrew Kuchling).
61ed4db9e8 Added section for operator module (compiled Skip Montanaro).
ccaf3b6d11 The usual.
5dab3d815f Test for sys/file.h. Determine sizeof int and long. For HPUX, add linker options for shared library usage.
1bb126fa13 Add extern decl of ftime() to make gcc -Wall happy.
9478dd40c2 Fix core dump from pow(x,y,0). Make gcc -Wall happy.
d560605ae6 (Makefile):  Added sym links for each manual, i.e., index.html -> lib.html. 	This makes addressing the manuals a little simpler.
fc8f6f3ed3 (Makefile):  The sed hack is needed for all 3 manuals processed by latex2html; 	the comma must represent a bug in the modified process_command() 	function, but I haven't found it yet.  This will work for now.
f1e6707ea6 (Makefile):  Rip out old partparse.py / texi2html.py stuff -- use latex2html 	instead!  Updated some comments.
0d58d44da1 (myformat.perl):  Don't italicize the '[]' characters around optional 	parameters.
dce22add1b (.latex2html-init):  Restore one setting to the default (no real need to 	change it), and correct a typo in a comment.
a376cc5cc8 Keep gcc -Wall happy.
60fca2c90f Add case for 'R' and a little bit of cleanup.  Andrew Kuchling.
049cd90b93 Jim F's brainchild
81b24c0221 Fix bad format char in error msg (%s should be %d).
80bb9655f0 Keep gcc -Wall happy.
ed0af8fe70 Support __complex__ method on instances, for complex() conversion.
150b2df682 Change the Don Beaudry hack into the Don B + Jim F hack; now, if *any* base class is special it gets invoked.
3afb5959aa Some extra flags that an HPUX user wants me to add.
b0c168cbe8 Tentative changes to make this work better on 64-bit machines. A plain int that doesn't fit in 32 bits will be marshalled using a new type.  32 bits machines can't handle this and will issue a warning.
9abe64a395 (libparser.tex):  Added note that the line number for a terminal token 	indicates the line on which the token ends rather than starts 	(a side effect of interpreting the parse tree nodes directly). 	Maybe I'll fix this for Python 2.0.
ba469ba9d7 More stale info.
794137903f New URL for Swiss ftp mirror.
da9c2710c7 Make gcc -Wall happy
472c04f18f Fix newlongobject so it will work for 64-bit as well as 32-bit hardware (although for 32-bit hardware it's a bit slower than it was).
a0a69b8b42 Experimental new implementation of dictionary comparison.  This defines that a shorter dictionary is always smaller than a longer one. For dictionaries of the same size, the smallest differing element determines the outcome (which yields the same results as before, without explicit sorting).
685a38ea94 Make gcc -Wall happy.
04f95d5238 Better implementation of PyCObject_AsVoidPtr().
cbd1e4eb5f Yet more elaborate message for exception in __del__. Make gcc -Wall happy.
3c5936afc5 Added missing PySequence_List. Correct typo in error msg (expec[t]ed). Make gcc -Wall happy.
2adf06b04c Added missing for PySequence_List.
36a484fb52 Correct typo -- repeat implements *, not +.
102dc417bf Describe the new Unpacker.get_buffer() method.
75eccc5bcf Unpacker.get_buffer(): new method to access the internal buffer of data
fd8a393086 Make gcc -Wall happy
bda7ca7772 Added [nh]to[hn][sl]().
dde9c2c1d2 Added .ilg (makeindex logfile)
4745a274a5 Added some more turd files we can't avoid: .MIF, .ps, .auto.
f06ee5fa07 /usr/local/bin/python -> /usr/bin/env python
cd612d5e5c Webmaker instructions
558c09e4c1 Script to write MIF files from ref*.{book,doc}
58a7856961 Pass self as master to Entry() widget constructor.
499181a833 Changed so that it replaces /usr/local/bin/python with /usr/bin/env python.
d5c58c34db Changed logic so it now replaces anything that has #! and python in the first line, replacing the entire line.
fc0588241c Script to fix cprt notice
29e77816f5 Added safeguard against failure in __del__.
bec74843de Added note about "boot" implying "clobber". Added definition TARGET=python for more flexibility.
47427674f6 Corrected *noconfig* to be *shared*; added cc: vlad back.
4662b87604 monty -> grail in Grail URL.
b916faf66a Upgraded new.function() contributed by Tommy.  Also got rid of #if 0'ed code.
40a172c779 Added ALL='all'.
58103d3b11 Turn leading minus sign into underscore for image widget name -- the hyphen confused Tk into thinking the name was an option.
27cb8a4884 Added support for timezone in date field.  getdate_tz() and parsedate_tz() return a 10-tuple, the last field is the tz offset in seconds (e.g. -18000 or -5 hours for EST).
3c8484e866 When re-raising an exception raised by a module used internally as IOError, keep the traceback.
3ffc503682 Removed the USA'isms that aren't really true
3d919c4d5b Added reference to pdf documentation and bbpy, correctly explained difference between aetools.Error and MacOS.Error for appletscript programs.
7081a69b24 /usr/bin/env is slightly more portable
00bf8efe0b Added a few meta info
0fb1d82698 Added reference to pdf documentation and bbpy, correctly explained difference between aetools.Error and MacOS.Error for appletscript programs.
e1d8c9bade Fixed FSSpec->pathname code to add colon if the fsspec points to a disk.
56c3c7632e Fixed bundle to allow any object (file, folder, disk) to be dropped on an applet.
a918b8c4f6 Fixed to allow sys.path initializer to be longer than 255 chars.
2a6e68f693 Output original address
de0e8f763b Updated country codes as per ISO3166 10-Feb-1994
cb2b672015 implementation complete.  need to update country codes
3a7212c86a Added `ru' --> Russia
f6d53448e5 A rewrite for better Python-ish style
e41d00bb6a Fixed a bug: files that no longer exist remotely would never be removed from .mirrorinfo.  Now they are (even if -r is not specified -- the files are not removed, just their .mirrorinfo entry).
c59120ba17 Added os.remove()/unlink(), rmdir(), rename(), and [f]truncate().
caa83c4b9e Added Q. about enabling *shared* on Linux.
3508d60f99 When removing a messge from all sequences, don't remove from 'cur', which needs to stay unless explicitly set.
3e1fe89a0d (myformat.perl):  Fixed handling of "\e" -- argh!
b4d4e25a62 (Makefile):  Updated comments about using LaTeX2HTML for the library 	reference.  Made the extension to the input files for makeindex 	explicit; if not made explicit a directory of the given base 	name can cause makeindex to blow up.  Specifically, if there is 	a directory ./lib/ created by LaTeX2HTML, "makeindex lib" will 	fail, but "makeindex lib.idx" will not.
4464022799 (myformat.perl):  Simplify generated HTML for "\optional{...}".
b33021b572 (fix_libaux.sed):  Hackish little sed script to modify lib.aux to get section 	numbers right for latex2html for section titles which include 	"\sectcode{__.*__}" in the name.  Perhaps less general than it should 	be, but sufficient.
784c6d3684 (.latex2html-init):  Perform some limited setup for the reference manuals; 	some defaults are set here, but mostly this allows the "\," command 	to be used the way it is in the Python documentation.
9b550d992a (myformat.sty):  Simplify \varvars definition.
e08c04c387 Added 'strict_parsing' option to all parsing functions.  This causes a ValueError exception when the query string contains fields that don't contain exactly one '=' sign.  (By default, such fields are simply ignored.)  Added this to the doc string describing parse() and parse_qs().
73eba25f5f Don't require leading '-' on option name to Text.tag_cget
c5d7e80739 Fix the way the Authorization header is sent (how could this have worked?).
c384d7560e (myformat.perl):  Updated to allow library reference manual to be handled by 	latex2html.  Mostly added support for custom environments and some 	of the smaller commands used in the library reference (\e, \optional).
d8597858a9 Add twit "home" location to sys.path (so you can put the applet on the desktop)
052b7e1cfb Make Py_ReturnNullError() statis as it should be.
08ef9d98b2 Only call sq_length in Sequence_GetItem for negative index.
115c1144ea Changed project segment structure to (more-or-less) match directory structure.
abc2db7b68 Updated (which should have been done before the 1.4 distribution).
6c11f7444c Added PyMac_GetFullPath(), PyMac_ApplicationPath and PyMac_ApplicationFSSpec
84fb1fab1f Got rid of nfullpath()
26ee1260a2 Got rid of nfullpath in favor of PyMac_GetFullPath (which was pretty much identical anyway). Initialize PyMac_ApplicationPath and PyMac_ApplicationFSSpec to point to the current application.
8096daad4f When loading a PYC resource check whether the filename is the application, and if so take a shortcut. This should speedup loading PYC resources when running off a CDROM quite a bit.
6c06590305 More sensible default sys.path
297d7dd2c9 Keep the folder structure in Mac:mwerks:projects similar to the toplevel build folder structure.
612db8f679 Removed addpack calls
7b6aa0a78c Removed old project file, als restructured projects directory to reflect build directory structure (the latter done by hand)
7d42d95bd7 Fix syntax of commented-out variables
b54f4dea73 Added 'Introduction' section head and 'Memory Management' subsection.
8dbcdd0a4c correct typo in return variable for PySequence_Index()
0b1ff66920 Should compare errno to 0, not NULL
76e47f3d75 Change last Ellipses to Ellipsis :-(
f93f101450 (Makefile):  Updated latex2html support.
7a7480dc84 (myformat.perl):  Added handler for cfuncdesc environment.  This is needed 	for the extending & embedding manual.
eb33c781f3 (myformat.sty, extref.tex):  Moved definition of cfuncdesc environment to 	myformat.sty; having it in extref.tex confuses LaTeX2HTML.
fd255e433f (tut.tex):  Added matching \normalsize after \small font control command 	(and the contents it was supposed to be affecting).  The latest 	LaTeX2HTML handles these, but didn't close it as expected.  This 	handles that problem and does not affect the PostScript output.
3622e0d090 (match-string): Added a definition for older Emacsen.
abcb38250b (texi2html.py):  Minor improvement to HTML 3.0 output for code examples.
893e5e0a15 (partparse.py):  Fix nasty bug where \e got translated to @e only within 	the optional arg of an \item[].
6c3a3aa17b This commit was manufactured by cvs2svn to create tag 'release14'.
61f9139125 Added disclaimer.
d266eb460e New permission notice, includes CNRI.
478f4871d7 Added disclaimer.
f501b4e524 Ready for release.  Added section on the book.  Removed bugs/gripes emails. New copyright.
819889dd0d Noticed a few more things that have been done.
7704bb7f32 Added last-minute changes.
58e7a1a388 Updated notice.
130575dc80 CNRI additions, approved by the boss and his wife :-)
6240b0b773 Small nits only.
c45289cb81 The usual :-(
52cf578382 Touched by FrameMaker :-(
fa7bfce0be Include updated title page.
f73f79b5fd Done with this for 1.4.
3a26dd88af Done with the "New in 1.4" chapter.
b0259bc3ad Add SHELL=/bin/sh definition, to override SGI make's default to $SHELL.
71445570c6 Removed CNRI copyright, changed notice to standard notice. Added date and version to title.
40f7a55608 Get rid of bogus binding of <Delete> to a function that deletes the next character (this is already a built-in binding now).
a5a4c2a7d8 Correct truncated paragraph.
16d5b113f6 Fix truncated paragraph in doc string. Bump version to 2.0.
9ec053c4f9 Removed NumPy instructions.  Add note about VC 4.0 vs. 4.2.
93df314d74 Removed NumPy files -- no time to fix these.
9b67621b66 Cast mtime gotten from stat() to long int -- else it won't work on the Mac.
8542c8e1af Set /MD option for *all* projects (even python.exe).
a83f3b82b9 Barry's latest (2.83).  He likes this version particularly because 83 is a prime number.
9e0e4dd7b2 Added answer by Greg Stein about threads on Linux.
7cb505c89b (py-indent-line): take an optional universal argument which says to defeat extra outdentation for block closing statements (return, raise, break, continue, pass).
0cbaff440d Fix case where you start a new group immediately after a label. Thanks to Ka-Ping Yee.
c148cd6cdd Ignore Frame backup and lock files.
71ec03b731 Adapted to migration of reference manual to Frame.
1775a517f5 Regenerated to remove hidden text from page 1.
5265ae4c6d Probably just binhexed again...
230ad2cb8b Different default location for distribution templates
c42c0b76c6 Only copy project files from build* and plugins to the projects folder, leave other projects where they are
d2034c1a63 Build imgmodules.cfm68k too
3a9b3b5943 Added USE_MALLOC_DEBUG (disabled)
05d9836462 Project files for 1.4 release
46ed276bc3 Malloc debugging now flagged with USE_MALLOC_DEBUG
6b9e56012a Updated to cw10
d6fccdffdc Fixed gusi preferences
a1255e0c4e removed unused var
176f3a9339 Added support for tab hooks
b7e82c1c0c Raise a more intellegible error in the case of missing keyword args
ae178eaea6 Added HAVE_STRFTIME
70e413dee0 Added a note on swed and htmled examples, added tab support, fixed typo
92ca16c335 Modified to work together with BBPy Re-enabled splash screen
d804bab721 Make self.rfile unbuffered (self.wfile already is).  This should fix CGIHTTPServer.py when used with the POST command.
fde7a75b78 Fixed compare function to do first char comparison in unsigned mode, for consistency with the way other characters are compared.
149574767c Added support for floating point resolution to Scale.get().
db2318580a Frame versions of documents after mangling by Robin.
bed266ab89 New version for 1.4 from Manus.
cb9fe887f2 Version number and date.
1f17543ee7 Removed LaTeX version of reference manual.  Added ref/ref.ps.
6a05f951cd Got rid of most XXXes in the News chapter.  Bumped the version to 1.4.
fd1e543316 New date and version number.
176f10e3d5 Get rid of evil workaround for Python 1.4b2 bug.
a31e084136 It turns out that VC1.5 does not necessarily define _WINDOWS.
84872293dd Get preference file name from a resource. Changed for 1.8.0 CWGUSI release
d09deac2da Also put aliases to PythonCore{PPC,CFM68K} in the extensions folder
2d359bf212 Updated the instructions for the 1.4 release
e272303dc1 Added a note about incorrect "PythonCore not found" message Added a few comments on preference file handling.
061ac50ec9 Added a note about PythonApplet name
baffd68a19 Version upped to 1.4, removed some unused dialogs, added STR resource with preference filename.
83c74dfa2a - Get preference filename from a resource - Create the file if it doesn't exist and don't be fussy about it
d081b13c0d Added resource for preference file name
5b1b33c7f4 Fix another case where...
58055847f4 Changed version to plain "1.4".
a4e41a805a Added question about error from misuse of mangled names.
36845ede60 Changed URL for PCT again.
02afd080ec Added all current changes.
a80c3988df Added chapter on restricted execution.
6e308d7e40 Start new chapter on restricted execution.
095538dd10 Actual text submitted by AMK.
c3d090cd4b Background chapter on restricted execution.  Additional sections are rexec and bastion.
9cb018e693 Change the default seeding -- use 8 bits of sub-second precision and fold in the higest 8 bits of the time as well.
b6685dcfeb The usual...
0c373691ae (Tkinter.py):  Fixed bug in re-implementation of OptionMenu.
28574b557b (Fred Drake:) Re-wrote the OptionMenu class to allow access to a real Menu object via om['menu'] -- this is necessary to use a post-command with an OptionMenu.  The API has not changed.
cc55c2d295 Changes in description of NeXT options.  Fixed reference to newsgroup (above instead of below).
8bcf369cf9 Support passing in an empty dictionary of keywords to newinstanceobject.
1d6fddb776 Changed _Py_EllipsesObject -> _Py_EllipsisObject.
a1b1cdbab2 Major upgrade by Vladimir Marangozov.
6b02b3e9fc Checkin before ticking changes off..
d8b4dd6c25 Don't recommend unzipping in the root.
22a67707e9 Changed _Py_EllipsesObject -> _Py_EllipsisObject. Added PyEval_CallObjectWithKeywords.
cf6c0ea29c Add an XXX comment about apparent incompleteness of Borland defines.
bc2e6319cb From: "Mark Hammond" <MHammond@skippinet.com.au> Date: Fri, 4 Oct 1996 09:08:19 +1000
f8c684d32c Ported to CW10
319f1a25fc Added a warning about gusi cfm68k "far data"
b75fba04c7 Forget about Ellipses b/w compatibility.
6d1356e9a6 Changed Types to types.
59b912adf5 Fixed xstat to again include resroucefork size, creator, type. Obtain thru macstat(), but other values via stat() (so os.stat() and os.xstat() agree).
3a4b3b0132 Fixed flashing in ProgressBar update.
008ec689be Added warning not to import directly.
4808dcb564 Allow code objects to be passed to run() and eval().
7e42caba01 Patches for Mac module docs by Jack
acc8754031 (partparse.py):  Small change by Sjoerd to improve handle of X11 extension 	documentation.
9c5dc29c3d Added item about bug in Slackware96 libdl.
084814624d Don't close an already closed socket.
9b0581192d Added embryonic description of fcntl.lockf().  Added pointer to that in posixfile (which is obsolescent).
22f7f9e671 (texi2html.py):  Added CLASS=Navigation attribute to DIV around top/bottom 	navigation links for HTML 3 version.
4bf1296e05 (libtypes.tex):  Correct reversal of two words in description of 	formatting strings.
e449af7da9 Ellipses -> Ellipsis rename (the dictionary really says that it should be Ellipsis!). Bumped the API version because a linker-visible symbol is affected. Old C code will still compile -- there's a b/w compat macro. Similarly, old Python code will still run, builtin exports both Ellipses and Ellipsis.
8741b2b988 Added Slice and Ellipses types.
1dde7b737c Typos detected by Sjoerd
c153d12738 Got rid of almost totally obsolete Demo/www subdir.
a58d89eec4 'documented' resource-number useage of EditPythonPrefs
145c92dfb5 Moved resources to 510/511: the numbers above 512 gave problems when editing preferences in applets with their own dialogs
11b6d24da0 (partparse.py):  Small fix to do_datadesc():  in some odd cases the name of 	data item was omitted, which also affected the indentation of the 	description.
43e6661d25 Add a dependency on clobber to the boot target.  Now, if you run "make -f Makefile.pre.in boot", all traces of previous runs are removed.
b030bc026e Fix some cases where self.openedurl wasn't set.
b5fa1cb855 Don't add names that start with _
5f2aa7113d (Makefile):  Push texi2html.py options into a make variable.
0282726643 (texi2html.py):  Tightened the generated HTML slightly.  Added -p option to 	print section titles even when the debugging output is not enabled. 	Added -3 option to generate HTML 3.0 constructs where meaningful.
0b95abcba5 (Makefile):  Add libformatter.tex to the library document dependencies.
8f925959c6 (libhtmllib.tex, libsgmllib.tex, libformatter.tex): 	Improve indexing somewhat.  Add small intros to the "implementations" 	sections of the formatter module doc.
7edd8d3c58 (partparse.py):  Rationalize some behavior around unexpected conditions.
e1980ed1f8 (lib.tex, libwww.tex):  Include the sgmlib chapter before the htmllib 	chapter to better reflect the relationship between the modules.
0eb8837560 Prepared for Tk windowing implementation
b96aeafdc3 tweaked some of the positions of interface elements.
ca8cdc6066 (formatter.py):  Simplify NullFormatter definition of add_hor_rule() to match 	documentation.
53e84d5342 (lib.tex):  Added entry for formatter module.
08d301ec53 (libwww.tex):  Added entry for formatter module.
e83b30d51e (libformatter.tex):  Added documentation for abstract writer/formatter model 	and implementation variants.
58d7f69168 (libhtmllib.tex):  Revised documentation for HTML support.
42439ad738 (libsgmllib.tex):  Revised documentation for SGML support.
58124880cc A first stab at describing what's new in 1.4.  Still many XXX'es left. Also would like to add an "author's note" at the beginning, basically pointing everyone to the books.
f17fa685aa Nils Fischbeck, Tim Hochberg, Terry Reedy, Ka-Ping Yee
434882e6e9 Added 'static' target; add variable TARGET replacing python
8a91302cf1 Toss Q 3.10 on posix.listdir on NeXT.  Add revived vpApp.
098331529b Toss the outdated QuickRef.
a63518436a Add waitflag to down_sema().
6e8583dcb3 Check for NULL pointer returned from localtime()/gmtime().
c196202e3d Speedup of makeresult() by keeping a filler of (-1, -1) around.
cf1474b73a Sjoerd's thread changes (including down_sema typo fix). Note: waitflag not supported on NT.
5b1d9bad32 Remove RCS crud...  Sigh...
a4a75278d9 Removed RCS crud from official Python release version.
b8cc6ae5a1 The usual...  Sigh...
6592f88fc0 Removed debugging print statement
edaf1c931c Simple test module for strop.
3159e1e1ef Change to always call list.append with a single argument. This does not mean I still support this code!!!
2715bb20db Changes to always call list.append with a single argument.
b7f48e39c3 Change to always call list.append with a single argument.
3c7739a754 Create img modules for cfm68k too.
a97b8eef70 Set the __file__ attribute of the imported module in both versions of load_module(), to mimick the behavior of imp more closely.
ccd8b19c99 Add provisions to set the (to be documented!) instance variable 'writer' of the NullFormatter to the writter passed in, or to a NullWriter if none (or None) is passed in.
36fc11e894 Compromise on test in find_class(): a user-defined function is okay, but a built-in function is not.
cab3c3b8d4 (Tkinter.py):  Improve application basename determination to make .py and 	.pyc extensions completely equivelent when locating the "profile" 	which should be read on startup.
4be63d1725 Added getparamnames() to Message class -- return a list of all parameters of the content-type header.
8299e46831 Don't auto-install on import.  This slows down apps that use some of our modules for special purposes (e.g. rexec).
3faf9b4d48 (Tkinter.py):  Fixed dumb typo in Misc.tk_setPalette().
6f1ee20501 Use mac_image (from cmif stuff) Fixed off-by-four error Keep data around so it won't get reclaimed
30fe363fd8 Fixed progressbar cleanup
a0ca4c402d Replace all uses of strncmp (in split, find, rfind) with memcmp, so embedded \0 in the delimiter is handled properly.  Thanks to Sjoerd for suggesting this.
fe779a1dc8 Don't mix stdout/stderr.
7df3606f0d Fixed object-handler-install bug
9f2ff9124c Fixed bug in object-handler install arg handling
cfb60ee1e8 Fixed very nasty null-dereferencing bug in DisposeControl/destroy object.
cc778ebd62 Add main program similar to pdb.
7a73ef852f (py-process-filter): Make sure current-buffer is restored, even in the event of error.  Can't use new Emacs primitive save-current-buffer, so use unwind-protect instead.
24611f80e8 Always open file objects in binary mode.
336c699236 Fix subtle bug detected by Jim F.
dfd9cb1e12 Don't die if an ok file method (e.g. fileno) doesn't exist.
eb76b8484d Added DebugStr method to drop into low-level debugger
05cf7e040b Added VCHECK compile time option that fills allocated and freed blocks with garbage.
e86cbc43f2 Protect '&' signs with '\' in description of PyNumber_Coerce.
3f247ade66 Nits corrected by Fred
3c602d7d0c (Tkinter.py):  Many revisions for Tk 4.X:  Added clipboard support, updated 	selection interface, handle the -displayof option intelligently in 	many places.  Added "wm colormapwindows" and "winfo colormapfull" 	support.  Removed "focus default" and "focus none" method: these are 	not in Tk 4.X.
e9c515adc7 (Canvas.py):  Added definition of CanvasItem.cget() as suggested by 	Nils Fischbeck.
a1560cfb29 - Simplified inheritance structure (still not good enough) - Added menubar in stead of buttons - (optionally) switch menubar back and forth to facilitate debugging   FrameWork applications - Handle "Open Document" appleevent - Fixed click in grow-box location - Allow a new debug session after previous one has finished
b1667ef782 Menu callbacks can be strings, in which case they will be looked up in the top window. The menubar is redrawn in the event loop in stead of for every change.
e7b9fde1b8 1. Correct typo in FileWrapper.close() (fix by AMK). 2. New trusted built-in modules cmath, errno, operator, parser. 3. Corrected bogus s_apply() -- the new one actually works (reported by AMK).
13bfbe77d6 Fixed PM debugging Added different arrow-icons for running/calling/returning/exception
5c30388861 Disabled splash screen, added ShowMessage
4892ab7f79 The Window Independent Tracer (which will probably move elsewhere once it is truly window-independent:-)
f5b31c94a2 Changed about box to come up invisibly (so we can move it to the right location without flashing).
0e06e7e7d5 About boxes should be at 20% of screen height, not halfway
04df9d5ad4 Added dialog-centering code to splash()
d96cb5088a Added support for GetDialogWindow and other accessor functions
0d1069e42f Finally *tested* effect of fg and bg yield values (and changed them:-)
d617c57dce Changed default background yield time to 1 tick
b9e5e14158 Use auto-start functionality of aetools.TalkTo and aetools.Error for server-generated errors.
977fbf271e raise aetools.Error in stead of MacOS.Error on server-generated errors
433a48ef36 Regenerated to use aetools.Error in stead of MacOS.Error.
c46f56e35f - Added optional "start" argument to TalkTo initialializer, which   starts the app (if needed). - Added aetools.Error, which is returned in case of server-generated   errors (better than MacOS.Error, which was raised previously)
0585d41198 Convenience routines: wrappers around some of the scriptable finder functionality.
924ca855da Added macfs.FindApplication() to find application FSSpec given signature.
bdf03a0072 - Regenerated suites - Use (and document) "start" argument to TalkTo initializer
35bfd3f9d7 Created Finder 7.0 AE interface and a test program that uses the finder to launch an application.
6244867e56 Revamped test case and updated doc string.
452a9833c9 Added line number to most compile-time error messages.
ef5cd05c3d Calling Application._quit() is now preferred over raising self.
4cb945454a Added _quit() method similar to FrameWork in stead of setting self.quitting by hand.
647535d390 - Use a flag (self.quitting) as preferred method of exiting mainloop - Added optional "nomenubar" argument to Application.__init__
29a3355ab9 Added macostools.touch() calls to inform the finder of our changes.
57d53a90d9 - Optionally copy file times for copy/copytree (default on) - Added touch(file) routine to tell the finder a files icon or   something has changed (*finally* found out how to do this)
df34cf1206 Fixed macos.splash to actually *draw* the splash box:-)
0bdf979af7 Added [GS]etDates methods to get and set creation, modification and backup times.
a39a25e5ec (texi2html.py):  Use "if __name__ == '__main__':" test.  Adjust indentation 	to 4 spaces per level (no longer 8).
0bc253dba7 Explicitly call rl_initialize(). Set rl_readline_name to python. Move extern decls to more logical point.
24048580ca Oops...  Need to clear c_error before calling c_quot().
3be12e97cd Properly(?) implemented remainder and divmod (Tim Hochberg)
934a4cea85 Show names of locals in disco (Ka-Ping Yee)
dc082eba02 Added editline fix
3f3691e12f (Demo/parser/FILES, Demo/parser/Makefile, Demo/parser/parser.tex,  Demo/parser/texipre.dat): 	Clean up support files for stand-alone documentation formatting, 	make sure copyright statement is consistent with the copyright.
be5e34204e Note obsolescence
07886d0e01 Rationalize MS #ifdefs
f156f503cd Correct typo: return -1 for error, not 0
3863abb921 Correct typo: return -1 for error, not NULL
c35f933c44 Add text of argument to errors for atoi(), atol(), atof().
6beb479b39 Force O_BINARY in flags if defined, for e.g. Microsoft platforms.
622f577eac Dynamically initialize ob_type field, for Windows DLL
c864364395 Added lockf() call
6fe01d4ba0 Added Setup.local feature; make shared libs readonly
9b38a145e2 Rationalized MS ifdefs
d4ab3cde8e Raise exception instead of dropping imag part for conversion to int, long, float.
22a85e5308 More detailed error message about exception in __del__
b7fc304109 Correct typo in setattr: return -1 for error, not NULL
e1607a8d0e (parsermodule.c):  Fixed sloppy typo:  '==' -> '='
4b7d5a49ab (libparser.tex):  Revised parser module documentation; improved logical 	organization.
36f219dff8 More performance and layout improvements by Fred
2f666639f3 Added long getopt docs; by Fred
eddcb3bae1 Multiply by 1000003 instead of 3 in string hach
b23a60fd6e Get rid of bogus MSC_VER undef of CHECK()
c8ce571c16 Rationalized PC compiler defines: require MS_WINDOWS or __BORLANDC__ or __WATCOMC__.  Add ALTSEP for PC filesystems.
1550ff722d Layout and cleanup by Fred
28d4ba24c9 Another batch...
c458e945a4 Rewrite sections on GUI and DOS/Windows, various other small edits, added 1996 copyright, $Revision$.
6e8ec59eb4 Implement lower by calling lower, not lift.
6b7a7e9fe0 Bug fixes in index&icursor suggested by Nils Fischbeck.
ee09fc1c30 Don't dump core on complex % or divmod -- raise a TypeError exception.
946cf890d4 Improvement suggested by Sjoerd: use $(MAKE) in boot target and use $(srcdir)/Makefile.pre.in
5f18d6c7a0 Reformatted with 4 spaces indent. Got rid of most redundant \ continuation signs.
49604d3182 20% speedup by Fred
151fcfd101 Zapped obsolete opcode LOAD_GLOBALS.
04831d133e Use 574PATH, not $(PATH) -- it's a shell variable
563e708080 the usual
2bb4f5598d Shortened some lines
1631cbe03a Added Makefile.pre.in, my generic makefile
f62e5bf339 Update based on Python 1.4b3.
694f7010ed Rewritten by Ka-Ping Yee.
ba885ffaa0 Added linux2 specific code :-(
5f8ea10bc2 Fix bogus len() call
ec577d53a9 Correct sys.path[0] when used stand-alone
974e46cc5e Fix type in loop stripping '__.' from name
2ea05098eb close module file after loading
be0a8a6042 Added bastion and (dummy) rexec docs
c05797dd15 Fixed coerce docs
e6ad8913e2 One fix by sjoerd and one suggested by him.  Bumped __version__ to 1.5. Fix 1: add a method geturl() to the file-like object returned by urlopen(). Fix 2: treat http error 301 the same as error 302.
cc88341e6d Changes to setpythonpath(): Test for / as well as for SEP for MS filenames. Drop trailing separator from sys.path[0] for MS and Unix filenames.
688bbfc217 simpler version of the previous fix
8535b29f39 compatibility changes suggested by Jack, for tk_menuBar and tk_bindForTraversal (i.e. don't call these for Tk >= 4.1)
4b6b57980f Changes for NeXT by Lele
6f2260ea7f Fixed nextstep buglet; check for libreadline w/o libterm*
2c349bbc77 Rewritten by Lars Wizenius to add long options
8727df4623 Removed some obsolete questions and references to version 1.2. Added some cross refs about broken lambda and broken recursion of nested functions.
daed771fbb Py_GetProgramName turns out not to be obsolete (used by _tkinter).
ffb170ee37 PPC companion to Python68KSmall.
4bc0566a7c It turns out that Py_GetProgramName is used after all...
1247a4612b Fixed to use appletbundle in stead of bundle resource file
d9877c1869 Code to add shlib resource fork was not enabled, also made project layout more similar to ppc project layout
e1c3f36cc4 Documented preliminary CGI applet.
09da209ce4 Added ref to cgi.html
5a1a175170 Example CGI applet
f4c4f9e9e1 (preliminary) framework for scriptable applications
f428c9e317 Turned off debugging output
16e99c06aa Added note about modified gusi
7d5f9e847a - Put all options in a struct - Unified initialization code for interpreter and applet - Implemented new options to skip AE-processing for argc/argv and for   disabling interactive option setting
6d653ab1b6 Got rid of toollibs, moved some libraries around
0890857adf Removed faulty gusi resource
10496eb571 Added handling for new options, fixed applet option setting
b072150d7f Stupid bug: complex(x,y) would yield x+xj
87755a24c2 Use #ifdef MS_WIN32 instead of _MSC_VER > 850.
b2fb36498d Sleep() turns out to be win32 specific. The timezone etc. overrides are win16 specific. Hope I got this right now...
c8adefef70 PS: use -O2, not -O3
6c4e987443 Allow editing selected bits of the GUSI preferences (creator, type and delayed-sioux-window flag).
ca3cddd4a2 Removed duplicate gusi pref from bundle Added "Delay sioux window" to template for gusi resource
3f7d2b4319 - Rationalized override preferences support, by remembering   application resource fork RefNum and looking there only - Added support for loading gusi prefs from Preferences file (needs   modified GUSI, but Matthias promised he'd incorporate the fixes in   the next release)
3d228879fe macglue: added PyMac_AppRefNum pythonresources: elaborated comment on preferences, added new options
1383939e45 Removed -- we now have python_nt.def
e982ee326e Move Watcom to the end.  Added description of all Win32 specific files/dirs.  Slight editing.
ebd8706fcd Add W95 to header
026f01a297 A directory with a working example of how to build an extension.
5c1d1ee8a8 Change to allow keyword args for Group,  suggested by Nils Fischbeck, adapted by Fred
8130054c81 New email and zip code for Guido
566b35f1c3 NEXT shared libs instructions
42b78e6441 Fixed Entry.select_from() to acually call the "select from" widget command instead of the non-existant "select set".  (Fred)
a25e5e9ae9 PyMapping_DelItem[String] are actually macros.
ed227f0589 Correctly document PyNumber_Coerce.
cac6c72105 Some changes for better Windows portability.
3469e997b4 Python about box implemented. Slightly convoluted, since (a) we have to override an internal sioux routine and (b) we have to override the "about sioux" menuitem after sioux has created its menus.
c204c70c1a Added logging support.
e5e46e0d29 Fixed embarrassing logic bug in read_lines_to_outerboundary().
2caac73aa6 Added Menu.insert*() methods [Fred]
e1a7a3b3b3 Add initial values to variables to avoid crash in __del__
932c06e4ff Added PyMarshal functions
0cc24730fe Taken the plunge -- changed to Unix linefeed convention
73695eccc8 Include file for users of Mark's build procedure
ac4d869433 Completely redone. mkestrres now parses errno.h and Errors.h files (which have the descriptions of the errors in comments) and generates errors.txt, macerrors.py and errors.rsrc
6c3d35aeb9 Regenerated, now also includes errno values plus explanations
f12e7093d5 Check that our override pythonpath is actually coming from the application, not from some system extension that happens to use the same resource id.
b9bf6e2dde Removed unused vars
4a5be817da Symbolic names for all error codes from Errors.h and errno.h
22fa64249c Added a note that redirecting stdin/stdout does not work due to gusi bug.
983c552c43 Different unpack instructions for vclibs41.zip
54d9fa2e40 New project files from Jim A.
f469d5b05d Get rid of nobody_uid() and import pwd -- not used here.
c14a747d4b *** empty log message ***
f6865f77d4 - Fixed PyMac_DoYield:   - Update lastyield correctly   - Do event handling if PyMac_YieldEnabled > 0 (previous cmd-. fix     broke this) - Use our own GUSISpin routine: fixes crash when exiting with sockets   open and keeps windows, etc reacting consistently when waiting for   accepts(), etc.
2e049b2b05 (python-font-lock-keywords): with Python 1.4 `access' is no a keyword
b3e81d58aa I have been increasingly annoyed about the fact that add-change-log-entry-other-window is so bad about guessing the proper name of Python functions, methods and variables, so finally I wrote the following (unidiff patch against python-mode.el 2.73):
01af401e27 #stylistics
550a02e6ae (python-mode): typos
615d4a458f (python-mode): font-lock-defaults must be make-local-variable'd
2b88061c9c Added elaborate trouble shooting guide. Added more specific directions for editing the environment on Windows '95. Made the section headers more visible.
03dea6d026 Added uninstall option
604cefa8df (py-dump-help-string): Use documentation-property to get docstring.
b1f895150a (python-mode): font-lock-defaults necessary for Emacs 19, but doesn't hurt for XEmacs.
c72ad871ba #py-shell gets an autoload cookie
f71f6133d0 Initial release (+ 1 bugfix in setup.py)
90eea07d28 The usual
3f13e48484 More thorough test for working <stdarg.h>.
6eed906533 Typo (missing _) in _xdr line.
6c0b234006 #include <netconfig.h> seems not needed and is harmful on NeXT, so drop it. Add proper initialization of rtn = NULL in unpack_double.
2b3ac69a3a The usual
f2f7eb34c8 Added checks for strdup and changed checks for hypot.
5ab007b098 Subtle hack so the eps printed is not dependent on the formatting habits of the C library we happen to use...
213a685cd8 Move backup definition for hypot() to Python/hypot.c.
ace527cbc2 Change comments/#ifdef structure for declaration for hypot().
57b1822459 *** empty log message ***
927f6e68fb Needed more includes...
bae29713ec *** empty log message ***
62cf605a04 New version submitted by Jim Fulton.
f71bd68673 Fix $PATH and add $PYTHONPATH used to run regen.
7629bbc73c Fix paths to match python1.4 installation. (Forgot LIBP)
be725fdddb Fix paths to match python1.4 installation.
e3c90a4232 Merged Guido's mkaliases and Jack's MkPluginAliases
86288976b6 Completely revamped: it now uses separate instruction files per distribution. Also, the user interface has been cleaned up a bit.
a662cf401a Removed RunLibScript from build
055782a15e Removed silly dialog
0a3a74c071 Projects for 1.4b3 distribution: debugging off, optimizations on, etc.
4ecc8c2b03 "Small" 68K interpreter, without waste, img and tkinter
a82b045e8d Version upped
4634130aad Added setwatchcursor() and setarrowcursor() functions
a1293dae7b Updated for 1.4b3
a78d76dcaf Added note that these instruction are for a full source distribution, not a mac source distribution
a9b60d9411 No double underscores for globals please
754afd94ed Added /base:0x1e100000 to link options for python14.dll; randomness created by vc40 internals.
b2b1ed1781 This commit was manufactured by cvs2svn to create tag 'r14beta3'.
a8763e54ff Another batch of updates...
52a42fe9e7 Remove the entry for private variables (it's supposed to be a surprise!)
5f9aa9e1f0 Some final changes.  I'll give up on nicely reformatting and structuring it, for now.
78c9637075 Bump exposed __version__ to 1.4. Correctly handle a URL containing user:password@host when using a proxy.
dfcf35dc59 Reformatted some stuff.  Put FEATURE FREEZE in all caps.
0c8cf888eb Don't die when getuid() or getpid() aren't defined.
3df7b5a546 Don't do truncation to 8+3 format -- this is used on NT file systems!
c75db0b7f4 Added Mime writer module (formerly in Grail)
cfd89355ef typo (cotinue -> continue)
8e44991b34 Three sets of changes from Grail:
f8abb38737 Slightly faster (un)quoting.
f480c674b1 Use correct separator for capwords(s, sep).
9e3f42909a Emacs font-lock de-bogo-kludgificocity
6eea32622c typo (#indef -> #undef)
e5920bc4c6 Use getstringsize where available instead of strlen.
dd6798c691 Added NumVersion definition.
c30461dd38 Insert filename in IOError message.
c9970eecc2 Call __initialize(), not __sinit() on Mac dynamic loading entry.
96c4dd95cf OK, now it uses sys.[exec_]prefix and supports a -o option to specify an output directory.  *Much* more convenient. Removed a whole lot of hullabaloo from the README file, too.
6498cad34e Get rid of it totally
f34bf1c07b Added warning that this is unsupported
aa233f18b2 Changes for 1.4 install targets
d0fe8454dd Updated for 1.4beta3
4a67a16d8f Added all changes in beta1 and beta3. Still very rough (needs reordering etc.).
8206fb9c4c Final set of changes by Fred before 1.4beta3
d8a6d1c2e7 Afterthough: leave both leading underscores in, so __spam becomes _ClassName__spam.
fe2236f3c8 Oops need to mangle global statement separately
8ff077b094 Name mangling, what the heck!
93fccacc84 Newly tweaked
3db4103ecf Use MS_DLL_ID and similar changes
8b9ea873ad Use MS_DLL_ID as sys.winver
057971528d Fixed names of vairous plugins to build, added a couple and added possibility to create standalone pythons and fat pythons (the latter not functional yet).
f57df795ad - MWRuntimeStatic{arch} are static versions of MW shared runtime   libraries - Except for the above the whole library architecture conforms to MW   documentation. - PythonCorePPC also uses .exp file now - Static pythons have full complement of modules - cfm versions of all possible plugins created (not tested)
cbc66767c5 Added dllbase_nt.txt and python_nt.rc; added notes to readme.txt about NumPy targets; added some symbols to python_nt.def.
bc17d299cc Turn on USE_TK and MAC_TCL by default
93e2ee5753 New version/date
5bd85d93c4 Always call __initialize(), also on PPC
27b10eced7 - Added cfm68k instructions - Changed names of various things - Explain how to recreate .exp files.
97662c89fa Version number; started chapter on what's new in 1.4
f8daa4f7d9 Changes to dependencies (Fred)
0011d93ee3 Niceties by Fred
5c8c91bbc5 Changes for Canvas by Fred
ad8997887b Be a bit more careful with printing a warning for a failed __del__.
2a516c8f2c Bump patchlevel (a bit early, but what the heck...)
6100d914e8 Allow whitespace before '#' in preprocessor directives.
ac279109d4 PYTHONWIN -> MS_COREDLL
2ea0b06498 Add PYTHON_API_STRING, which is PYTHON_API_VERSION as a string literal. Under Windows, add MS_DLL_ID and MS_DLL_VERSION_ID for Mark H.
67d4ab0946 Added NumPy projects
f813f56bcd imghdr.what(): check for not h'.  This lets you do:     imghdr.what(None, '') And still go down the
bf57ed5f95 Added thread module (it was already in the project!)
331a8973ac Description of the new build procedure for Win NT/95.
eaf9b6cd7b More changes for NT, Guido style
497aedd2ff Get rid of unused local variable.
c417ef8e57 Added a small test program.
c1d5053882 Add needed #include <ctype.h>
4f903463b8 Removed environment, objc, sybase modules
f00eb71d90 Get rid of some obsolete modules: - environment.c (we now have os.putenv) - sybase (a better one is in contrib/Databases/Sybase.*) - objc.c (incomplete and unsupportable by us)
2a2884645d Patches to make it compile with K&R C
3bcf7d2f0b Avoid complaint about inconsistent hypot() linkage on NT.
cda848f49e Remove dependency of $(srcdir)/Lib/$(MACHDEP) on python, since it would try to do the mkdir whenever a new python has been built...
a4ddb238bc update -- Undo is now entry 1
4ec060ad28 unicast pendant for broadcast.py
171191efb2 Raise ValueError on empty string passed into atoi(), atol(), atof().
d0f11dec30 Added documentation for PyObject_DelItem and PySequence_Del{Item,Slice}.
360a934609 Support for old CPP
ae92f01029 Hacks to support being a Windows DLL
6cdc6f4146 Added PyObject_DelItem and PySequence_Del{Item,Slice}.
c9fb47ef08 Added delslice and delitem. Renamed and, or to and_, or_. Renamed all internal identifiers so as not to start with '__' (which is a compiler privilege); remove AIX hack.
16d27e3b14 Demos for Fred's parser module
6dbd190f5e NT specific files supplied by Mark Hammond
019f424a0a More efficient handling of "__doc__" lookup.
f1d7413445 Add explicit #undef _POSIX_THREADS for use on Solaris 2.5 (Sjoerd).
4747887880 New batch from Fred
3a1fbb4c70 Added Vlad.
e8c0a15697 New generic makefile by Jim F; drop pyimenu.el
b4d37791c1 Minor updates.
5c8e256678 typo
bf0dc9fb14 Add #define MAC_TCL for Mac.
d7abed3b14 Get rid of access statement
3e065ada2c Attempt at Windows-NT compatibility.
34f173110f Add optional separator character to capwords(), for completeness.
63f0cf0840 delattr() can raise AttributeError, not KeyError. Use keyword arg to set verbose flag in test func.
422869a75c Correct description of splitext().
0f6a3bf490 Added locking hacks for AIX
f85de8a440 Added print_exception() convenience function.
6ba66d0116 Improved tests; run twice, onece in normal mode, once in restricted mode.
880d1eee95 Barry's 2.73
5c9bfe2b80 Get rid of debug print statements
504f4a9901 Don't require <dlfcn.h> -- rely on existence of dlopen().
6ba1120767 Barry's 2.72
261f87dac1 *** empty log message ***
89227eb0f5 Write warning about exception in __del__ to stderr, not stdout.
613b943bf9 *noconfig* -> *shared*. Add # -lm comment to modules that need it as sharedlib.
4355454232 Support *shared* and *static* as aliases for *noconfig* and *config*.
d62d8bced3 Test for xdrmem_create() failure. Minor lay-out changes.
cde317ae62 Install shared libs with executable mode -- needed for HPUX, doesn't hurt elsewhere.
1fd5b21425 Mention warning for exception in __del__.
0a94dfcab8 Erase all memory of the access statement
25b361fc14 Adapted for cfm68k, new names and split off of qt.
e420178ba6 Rationalized header files: - mwerks_nonshared_config.h for standalone pythons - mwerks_shared_config.h for shared pythons (PythonCore, app and   applet) - mwerks_plugin_config.h for plugins Only the _tkinter plugin uses a customized header.
4b2c386777 - Gave PPC shared libraries (and projects) .ppc in their name - Created CFM68K projects (not all tested yet!!) - Moved quicktime to its own module - Modified the README file to (approximately) resemble reality
7bbd1a5327 Added void before main
16ff8728d8 - Renamed USE_BGEN to USE_TOOLBOX - Moved Qt and Cm out of toolbox into private library (so people   without QuickTime can install PPC Python)
bbe2ae168c Re-binhexed
272841c439 Changes by Rob Hooft for GMP 2.0.2
56b30ea664 Document actual behavior of splitext().
8823972cea Documented class exceptions.
305ed11a74 Remove mention of HAVE_CONFIG_H
73363b526e Added _xdr module
40006cfd9b Added imghdr,xdrlib; reformatted Makefile somewhat
72fba794d6 Rename __test() to _test().
731630b5bf XDR interface, evolved from Demo/rpc/xdr.py by Barry.
bf66c64ffb Added note about standard library module xdrlib.py
7cf1fcf347 Always include config.h
1e6124902a Many little fixes: - support for SCO_SV dynamic loading - on Mac, auto-detect dynamic loading by __CFM68K__ or _powerc) - on Mac, long shared library extension is .cfm68k.slb or .ppc.slb - on hp, don't redefine hpux if already defined - add __file__ property to successfully loaded module
71bd363d9c getprogramname -> Py_GetProgramName.
6d43c5de5a Raise TypeError, not KeyError, on unknown keyword argument.
3f3bb3d3c9 Added *PyMarshal_WriteObjectToString() (moved the relevant code there from marshal_loads()).
49c70a7a4d Added declaration for *PyMarshal_WriteObjectToString().
8b51d227f6 Add prototypes for c_sum() etc.
8f3032da10 Declare initregex() as returning void, as it should be.
860986812a Remove some unused variables.
2977e5d660 Declare a bunch of internal routines as returning void.
1720230399 Made it palatable for K&R preprocessors.  The spam macros don't have to work as hard (but "stringizing" is still used, so we test the newly introduced HAVE_OLD_CPP config define).
a29756c1dd Recognize *.sl and *.so as library (i.e. linker) arguments
07b983da99 Incorporate LDFLAGS calculated by configure (for --with-readline)
84e7b248f0 The usual...
300fda7a6d Several refinements: - check for pre-ANSI preprocessor (needed by operator.c) - SCO_SV shared library support (Lance) - improved AIX shared library support (Vlad & Manus) - finally fixed --with-readline=DIRECOTRY, using LDFLAGS
8e09a9ffa9 Add HAVE_OLD_CPP to list of known defines
fc8ebb1d3f MACHDEP and regen problem is now taken care of
aa35465ccf Support for keyword arguments (PyArg_ParseTupleAndKeywords) donated by Geoff Philbrick <philbric@delphi.hks.com> (slightly changed by me).
926518b683 Changes to make the file acceptable to K&R C compilers (HPUX, SunOS 4.x).
bf05d4cd6f Fixed command-. handling Added hacks for GetEventQueue (so you don't have to edit Events.h)
a06f13dc78 Fixed to work for ppc and cfm68k
7e124ea86a Guido: - define USE_CHECKSTACK - Comment on defines used
499a8afd0f Removed debug printf
3bc6fe636a Removed obsolete cfm68k ifdef (Guido)
007fa82581 Include config.h
cfadbd40e1 Guido: - new SpinCursor (replacing Jack's almost-identical one) - use GetEventQueue in stead of GetEvQHdr
76ceece75a Guido: added some void's to declarations
9ff06cea7f Guido: changed __sinit to __initialize for CFM68K.
cb7f3fc72c Fixes by Guido: HAVE_CONFIG_H, USE_STACKCHECK and USE_MAC_DYNAMIC_LOADING are no longer needed. Also, WASTE and IMG removed in some places.
32b27f11c1 No USE_MACSPEECH for CFM68K (the interface library appears to be missing)
7ac70afed1 Dummy SpinCursor() if __CFM68K__ is defined
e5649c75f0 Removed {Set,Get}SoundVol (old calls not supported by cfm68k)
ee8662febd Fixed viewrect/destrect calculation
e57c96ee4c site customization hook...
bf51afa049 Don't test here for negative number to float power; that belongs in floatobject.c.
79d96d6bff Don't die in resizestring() on filter(<func>, "").
c13bcca268 Test for negative # to the nonintegral float power here. Expanded powi() in-line.
fe58e3e22c regen for Next
7ffa7617c7 Changes for Windows NT -- this time it works, with Tcl4.1p1 (p1!!!) etc. - Use ckalloc(), ckfree() everywhere. - Default FREECAST to (char *). - Added comment with Tcl/Tk version info.
dcc057a793 Added routines to print, format and extract the current, ``live'' stack. Also added print_list() and format_list() which format the output from an extract_*() routine.
0dfcf753ad Disable support for access statement
aacdc9da75 Define reference count admin debug functions to return void.
d86b38003d Added extern declarations for reference count admin debug functions.
f67a57efc4 (py-no-outdent-re): Added return, break, raise, continue since we already outdent for those statements.
8b004d36ed Renamed to pyerrors.h
29901ff528 Some improvements by Fred Drake.
eb8d5032b4 Separate .dvi and .ps targets. More rational destination for texi2html.py.
e5e55d784d Added capitalize, capwords, lstrip, rstrip, and optional 3rd argument to split.  Document new conventions for split(fields) and join(fields), where the *fields variant is identical to the other.
0b3f9512ac Added capwords, splitx, and optional 3rd argument to split/splitx.
7a7d5d8fcf Use splitx() in capwords() (bugfix after interface change for split()). Give capwords a default pattern argument which will recognize words as sequeces of [a-zA-Z0-9_].
12f0cc325a Suggest using default values for __init__ arguments to make classes unpicklable.
4a5b27b525 Get rid of parrot dropping (spurious 'E')
267e80d4d4 Added doco for abstract interface
22277c860f Added footnote about lamda bodies being the same as function bodies.
45687bb976 Add warning about exceptions in __del__ being ignored.
0bbf253e97 Insert "./" in front of pathname when it contains no '/' (if USE_SHLIB)
2878a69922 Optimizations by Sjoerd: - define tp_getattro, tp_setattro - use precreated string objects for most common exceptions and method names
d8eb1b340f Support for tp_getattro, tp_setattro (Sjoerd)
929f1b83ea Use pre-created string objects for most common exceptions (especially IndexError which is caught by 'for')
86c04c252b Correct wrong calculation of pow(0.0, 0.0, negative_number)
0693dd232e Added tp_getattro, tp_setattro (Sjoerd)
9dc7833988 New AIX-NOTES
36eb6c7331 New AIX-NOTES
abfd8064d8 This is the third time I check in this change :-(
99d90c0d0e Include "mymath.h" instead of manually declaring math functions.
7999a5c525 Added lstrip() and rstrip(). Extended split() (and hence splitfields(), which is the same function) to support an optional third parameter giving the maximum number of delimiters to parse.
339cfa39d8 Need config.h (for Win etc.)
ec185bde77 Added hack to get it to compile on AIX.
8a170cbed6 Rearrange include headers (needed on some platforms).
6412b1de5d Hack for Mac (where fabs is not usable as a function pointer).
97867b2ce2 Add optional casts to free() calls.  (Jack) Set Tk variable argv0 to classname passed in to Tkapp_New.  (Fred)
82df03e35f Rationalized instructions for _tkinter.c
6554419e1b Also remove *.sl (AIX shared libs) in make clean.
1dc19ba2ee Removed
a93b504a23 Latest AIX changes from Vlad
b6b43e00f8 This commit was manufactured by cvs2svn to create tag 'r14beta2'.
b4ae6a3999 Re-install aix files (what happened?)
3bedce0185 removed old file
1a62311cfb Changes necessary for AIX.
1741d60725 Added casts from unsigned char to char when calling rds_object() on frozen code.
15cc9a0a76 Removed unused var; added error check for ``lambda: x=1''.
fe4b6ee775 Include mymath.h instead of declaring prototypes for math functions. Fix leak and unchecked error in complex().
1d60614d42 Correctly use Py_PROTO, not obsolete PROTO.
6f90e9862e Renamed errors. -> pyerrors.h (for Mac, where Errors.h is a system header).
578cedde35 Typo: PySequence_Lenth -> PySequence_Length.
afb5e93e77 For method=POST, append a query string from the environment or from sys.argv[1], effectively merging the fields.
306a8a6338 Add optional third parameter to split() and splitfields(), giving the maximum number of delimiters to parse; e.g. splitfields("a,b,c,d", ",", 2) -> ["a", "b", "c,d"].
a59d3e6d50 Changed split() to be compatible with changes to string.split(): the optional third argument gives a maximum number of delimiters to parse. The new function splitx() is like split() but returns a list containing the words as well as the delimiters.
37a6f16d2e Slight update of doc string -- suggest default args for __init__, no longer complain that __getinitargs__ is an ugly name.
4033ad7576 Restore 1.3 behavior of gettempdir(): if tempdir is already set, believe it.
0523d63a5c Don't use 'false'; use '0'.
5468a7b76b stupid typo in latest fix ('Name' should be 'name')
524e9a450b Need to import * from types
fcce630a7d Added test for math module
47347f0425 Use fcntl.h instead of sys/fcntl.h; use h2py.py from Tools/scripts
d44e0c3ace New AIX specific subdirs
c442d43ab9 Changed to use 8-byte doubles. Also re-enabled optimizations, 68020 codegen.
3638935bcd Moved build.html to building.html
4c1e56c742 Changed instructions for new releases of cwgusi, waste and tcl/tk, moved some urls around, reformatted.
3d159f09a6 New releases of CWGUSI, Waste and Tcl/Tk.
bb708ae12c Updated for new tcl/tk release
3ca6eddb12 GUSI mkdir() lost its dummy second arg
eb1284be97 New waste release
2268af5873 Upgraded to Waste 1.2f
cf34d2a010 #updated commentary
5490a06fc7 (py-menu): Create default value
c5a8cbd35d (py-forward-into-nomenclature): Slightly better regex for stopping on underscore.
6aadd26419 rebinhexed
8f2d802a9e Build instructions for source distribution that were somehow never checked in. Modified: removed stdwin references, added note on tcl memory allocation.
a766182f08 (py-electric-colon): Use (py-next-statement -1) instead of (forward-line -1), to properly catch continued statements.
bbe04d0f9f Removed references to mactcp, macdnr and stdwin modules Rebinhexed resource files
402030fbff 1.4b2 projects
4f1fe327c2 Upped version number, rebinhexed everything
1d2f863e51 Guido's 1.4b2 fixes: Py_GetProgramName, Py_GetPrefix and Py_GetExecPrefix.
d84e7aaf00 Regenerated
84c21a803e Regenerated from CW9 includes (only QuickDraw really got a few new values)
70463665d3 PyMac_BuildNumVersion added
3fcaf61768 #updated comments
755c6714cc (python-mode): automatically install imenu stuff.
8143746750 (imenu-example--python-show-method-args-p, imenu-example--python-class-regexp, imenu-example--python-method-regexp, imenu-example--python-method-no-arg-parens, imenu-example--python-method-arg-parens, imenu-example--generic-python-expression, imenu-example--python-generic-regexp, imenu-example--python-generic-parens): New variables.
ce60bc7192 (py-keep-region-active): Zap duplicate defun.
6d9cc808a2 Final text for beta2 release.  Hopefully no pre-1.4 information is left.
ff0c4b532a New project files, with sliceobject.c added.
6e527d2ca3 (py-delete-char): Check for py-honor-comment-indentation.
a7891718e1 (py-mode): comment-start is now "# " so indent-for-comment does the right thing.
e5b7b850f7 CW9
880e6eb409 Removed debug output
a6d78c44a7 Removed unused var
5674e4ec17 NumVersion stuff has changed
d1f06313f6 - Minimum stacksize is now 8K for PPC, 4K for 68K - Added PyMac_BuildNumVersion
64d376a670 New .pyc magic numnber, too.
9e43ae4770 Use Tcl/Tk 7.5/4.1 by default.
9caf77a485 Put definition of _REENTRANT in config.h
cee555bda2 Allow compilation by K&R C compiler.
42dcad36a9 The usual
8a2574e09e Changes for AIX; also remove all references to _REENTRANT.
d5962adb44 Changes for AIX sharedlibs.
02530b0f74 Changes for AIX shared libs
9e277db76b #comment update
c08a949549 #comment update
5c0d00f553 #updated to do list
68f56e45f6 Don't trip over empty string in sys.path.
170ffa775d (py-parse-state): stop searching backwards when we found a keyword at column zero.  Perhaps a kludge, but similar in nature to Emacs' beginning-of-defun shortcut.
f831d81999 (py-statement-closes-block-p, py-compute-indentation): Outdent one level after a return, raise, break, or continue statement.
32aa1a72b2 getprogramname --> Py_GetProgramName
3823420ca4 If NO_DYNAMIC_LINK is defined, load_dynamic_module() will always fail.
5e41644ddd Added _REENTRANT definition
0c5e3c8d6a DESTLIB and MACHDESTLIB are now derived from variables set by the Makefile. Clarified some comments.
276de58927 Collect together all detailed installation directories.
a68acba5ad The usual
d02ba45edc Added doc para for --with-libs
93ee6e0b63 Add entry for _REENTRANT macro
c5a3903472 Three changes: - Improved version of NeXT patching of $OPT - Added new option --with-libs='lib1 lib2 ...' - Define _REENTRANT when posix threads are in use
bed23fe1ce Collect together all detailed installation directories.
b8dccd29b3 Add a variable so you can easily install more than one machdep directory.
6d47298acd Correct typo (intall -> install)
8d7d4ede2c Numerous changes, but still a lot of XXX thingies.
ccdfce386a Exhaustive list of news in beta2 compared to beta1. Now all we need to do is do the same for beta1 compared to 1.3.
24cf88d31e FreeBSD platform specific modules
7a7eb37a10 patch level 1.4b2
91f87ca69b Note that the values are ints.
e288f9dfa3 New zip code and release; added guido@python.org as alternative email.
557d6d6608 Don't make an exception for NeXT (BBUM says it's no longer needed). (But hypot() should really be defined in a separate file, triggered by configure.)
64b65677c9 Some more install changes:
02ca3ab4f7 Remove "." from default path.  Also rearrange so that SITEPATH comes after DESTPATH.
6e12d56cfd Don't have "." in the default path.
94a9667f1a Always insert script directory in front of sys.path -- if there's no sys.argv, insert "".  Note that "." is removed as a default component of the path (see changes to getpath.c and Setup.in).
9afdabffa9 Add missing close parenthesis.
74faed299f Got rid of all references to stdwin. Documented insertion of script directory in path. Updated author's address. Changed MAILING LIST section to INTERNET RESOURCES.
2108a50465 Remove comment "SGI only"
3df1d1b89f Simplified and rationalized.
c163ae5237 mac utility
db9c054f60 turn a pile of RCS files into a ChangeLog file
ef253701a6 print MX record
29b1606951 Adapted to CNRI
72ba616066 Added note about Python's support of complex numbers. Added exp(z).
89cb67bb64 Updated for Python 1.4
c30e95f4b0 Moved 1.3 news to HISTORY; put some 1.4 news in NEWS
0d20cfa108 Added two new questions; about globals/locals and about recursive imports.
63d9cd708f Added Bill Tutt
3b9c6677f8 Better error message if stride used on normal sequence object
6ffd553899 Add 'Ellipses' object.
fd4904c630 repr("...") -> "Ellipses"
053313a507 Change to use keyword args instead of dicts
8cf2db47ba Moved description of mktime 9-tuple to top. Added description of strftime format string. Minor small editing.
f4d0d5784a Added maketrans() and optional 3rd arg to translate() (chars to delete).
910a671ba0 Added SetFolder
a29cc97285 Document the *new* cgi.py
d61ad53c19 errno docs.
c0fcc44804 Added liberrno
7b3853fb02 Follow new configure.in
b418f89bcd Changes for NeXT.  Some improvements to long lines.
94d46d52ad Added C_THREADS
3ff96dd8f7 Various changes (not done yet even for beta2 release)
b535da38f9 More changes to install targets.
d19828d706 directives for Tools/scripts/fixcid.py
31df6ab065 New versions of binary files.
950a12602f New versions of almost all files.
2b65444b9f Converted to new style
037b940cd7 Operators like __add__
63df09acfb Some NeXT changes (default certain symbols to others)
9de624d784 Added extern defn of hypot().
d3c1bd3931 Added operator.c.  Moved errno.c. Changes to PYTHONPATH so it includes VERSION
704fef2268 Refinements to installation, now uses $(VERSION) etc.
8861b74445 Changes for slice and ellipses
3ecebf1732 Changes needed by NeXT (the only platform that seems to use this).
f2d125bdad Added sliceobject.c
310968dc06 Speedup suggested by Sjoerd
14f44516a4 Changes for stride in slices (x[a:b:c]) and ellipses (x[a,...,z])
e15d0dea07 Slice and ellipses interface
fdebf25705 Turn on CACHE_HASH, for 2% speedier dict lookups
db3b04104a Added BUILD_SLICE opcode.
ae8a99e3f5 Two bumps for the price of one (PYTHON_API_VERSION)
26a70f6b32 Changes due to slice and ellipses grammar changes
03eed47512 Added sliceobject.h.
be33c37fae Sh script to recreage generic machdep subdirectory
3bb710d647 updated again
c8b4791d9e Two independent changes: - accept empty string from focus_get - map coords() return value through getdouble and splitlist
8d12a1bcbc Function to guess which db package created a database.
3534a8932a New, improved parseaddr() by Sjoerd.
7698d12a8b Changes to make it work on FreeBSD 2.x.
f17361d314 Two changes suggested by Andrew Kuchling: - move compile() inside try-except - add code so you can do "python pdb.py <script> <arg> ..." to debug <script>
81749b0754 Added optional second arg to what(), giving the data read from the file (then f may be None).
56a733856e Added BUILD_SLICE opcode.
8ec318d43b Obsolete
42f707f40f (python-mode): Added menu support, requires easymenu.
8431733c07 Allow only one selection (this tests settability of selFlags)
16038ee18e Regenerated
6451cff2c3 Added access to selFlags and listFlags members (both read and write)
ded835c7f5 Mods by Just: - Better staggering of windows - Windows have zoombox by default, and zooming works - DrawControls->UpdateControls - Better scrollbar show/hide
c846f46113 (py-forward-into-nomenclature): small fix to not infinitely loop at underscores.
fb3494276e #comment update, re: py-mode-syntax-table
9e5a9c8c99 (py-forward-into-nomenclature, py-backward-into-nomenclature): New functions.
57d091557c putenv
dde4317643 Added putenv to AC_CHECK_FUNCS list.
3912fd8781 Append version number to library install directory. "make libinstall" no longer implies "make sharedinstall". "make altinstall" and "make altbininstall" install the python binary with a version number, for tentative installations (this does not install the include files or man page).
4daf6adfe1 Added version number to destination.
a63d9f4d9f As a side effect of calling PySys_SetArgv (setpythonargv), the directory containing argv[0] is inserted in front of sys.path. If argv[0] contains no directory, an empty string is inserted. If argv is empty, nothing happens.
3b8e20d2c2 Added hook to os.environ to call putenv(), if it exists.
4dc6622057 Added Sam Rushing's errno module
dfe8ad969c Converted to new style names by Skip Montanaro
9687a921c8 Different lines for bsddb module.
f1af3fe8eb Added simple-minded (i.e. leaking :-) putenv() interface, if os has it.
761f7922ad Updated pointers to Andrew Kuchlings fine software.
ed7253ca50 Added 3rd optional argument to translate(), a string of characters to delete. Added maketrans(), a utility to create a translation table.
4dd0bf92e6 (rmt.py):  Updated to "modern" python coding conventions, somewhat.  Keyword 	arguments and explicit calls to .pack() are used; no more dictionaries 	are being passed to Tkinter constructors.  Otherwise, the example is 	unchanged.  (The app isn't implemented as a Python object.)
99aa2a4132 Remove all CRLF -> LF translation for file uploads, since we cannot reliably distinguish binary files from text files (and Mac Netscape sends all files in "binary" form, i.e. it sends text files with only CR delimiters...).
71e315b9d9 (py-shift-region-left): When checking for left edged code, watch for blank lines.
d3876d33d3 Renamed all occurrences of posix to os.
773ab27f04 Changes by Jim Fulton: pass environ around as arg; keep_blank_values option to parse().
a48bf79977 Added splitext()
54afb3bf60 New versions generated on a Linux 2.x system by AMK
c7c5e697c3 Optimizations and one intentional loophole by Jim Fulton.
77c29a1734 This is needed for users of Linux 2.x
56b6fa98b6 Got rid of ChangeLog -- too bad, but I can't keep it up to date.
6c02a2fe25 Use NEWOBJ() macro instead of calling newobject() directly.
d99d283383 Added SetFolder method which sets Standard File initial folder
1ed9529a68 Added PyOS_CheckStack() function which returns -1 when we are running low on stackspace.
98bfad75ac Added USE_STACKCHECK define
5c971677a5 Fuck.  For PC support, this must be in the distribution.
ad8b3baa91 Restore the capability to pass a class (usually Pack) as an option to widget creation; no longer support this for the config method.
81652ab67a Use gcc, not gcc-elf on Linux
aaa54309db Additions to the cast of thousands
8e7a54f525 More changes by Sjoerd & Jack
e47d5f9c52 Addition by Jack to test for missing type support
a3b4b61a74 Added extra notes for AIX and SCO.
70a8659d9d Use INSTALL_PROGRAM for makesetup
450b9b33a2 Added Jim Fulton's "asharedmodule" target
be6da271a1 Use INT_MAX/LONG_MAX instead of non-ANSI LONG_BIT
3d602e31b1 New submission by Fred Drake.
ac56b03f9a New style names for getprogramname and getargcargv
3be7140d31 Rewritten keys() and has_key() to avoid memory leaks.
9e720e390a complex -> Py_complex
f5030abca8 Hacks for MS_COREDLL
3cb486879a Only __dict__ and __class__ are read-only instance attributes
42cd305b25 new .pyc magic number (** operator)
7cffd1322b added 1996
530956d247 Py_complex; and WITHOUT_COMPLEX added to getargs.c
519b4339f1 renamed complex -> Py_complex
5a84914803 Hacks for MS_COREDLL
bb864062f1 added new names for getprogramname, getargcargv
4f4ce68085 Added prototype + doc for PySequence_Length()
3317e63cbb added parser module to overview
38e5088aa4 added plock
ed43073e00 Minute changes by Fred Drake
66774a973b changes by Jack to Mac docs
17f2b2dfed Don't use tktools, dummy!  Reworded test message slightly.
421bb0e389 fix canvas bind commands
6d6a15bab2 Added option to refilemessages() to keep sequences
154a539460 Changes for new parser module (Fred Drake)
6e21cebfbb New opcodes BINARY_POWER, RAISE_VARARGS, CALL_FUNCTION, MAKE_FUNCTION
7a1c7918e0 add mac compatibility
024a387f89 - Added a file dialog example - Added pointers to library documentation
a547dcaff0 Old names changed to Py_GetCopyright, etc.
84d0bfcbe0 inittab is a "struct _inittab".
5220d020b9 Given a module/pathname file created by findmodulefiles compile all needed modules and create a file full of PYC resources.
fc9cc3a9ce added a thing on the to-do list
44b7220b8b (python-font-lock-keywords): added class and def
8e9d7d7e83 (py-mode-syntax-table): revert underscore to word class, even though I don't agree with it.
039707399e (py-delete-char): Obey numeric argument.
dea4a29e9a (py-shift-region-left, py-shift-region-right, py-indent-right, py-outdent-left, py-mode-map): Folded all functionality into py-shift-region-* commands.  Bound C-c C-l to py-shift-region-left and C-c C-r to py-shift-region-right.  Removed py-indent-right and py-indent-left.
c6143338b3 This commit was manufactured by cvs2svn to create tag 'r14beta1'.
88dc264b0e New versions of VC project which has no source files in PC/
22b6db625a added plock
0068267750 split autoconf target in two
6f489d989d Slightly different Windows ifdefs
919c576254 added comments about tcl/tk -l options
1bc716f2fc Added PC files from Jim Ahlstrom.
c012547142 Added plock() system call. Changed test for Windows times() emulation.
cd6aab91a5 Fixed restore_files(); added reset_files(); made these more flexible.
7d844a7c8a aix sharedlib helpers
236f62da7a Corrections to aix_loaderror(), by Manus Hand.
f21506076d Jeremy's patches for more robust handling of unmarshallable types.
bbb1e26a67 Add docs for planned improved handling of the marshalling of unmarshallable objects.
f2e98b4f55 new versions from Jim A
80b0fa0d99 socket wrapper module around _socket for all Window platforms
ca318ec12e Some updates.  Still out of date.
3cd7fa40fa new contributors
746ea3598a url2path for NT
2281d35578 add nturl2path
2d38f9146b result of new configure.in
a2ef383623 Split some long lines (headers, functions). Rework --with-readline and --with-thread.
1a5356006b Added Andrew Kuchling's explanation of regexp's.
8c593b1db5 Ignore latex intermediate products.
1dead9bd0a Added __doc__ to predefined module attributes.
b7c6620e7f typo
a95a1405a8 expr_list -> expression_list
7710f1f00c explain global better
00ed6a3279 added '**kw' to parameter list syntax
036eae6647 mktime returns a float now.
6076ea51e2 Added thread unsafety warning.  Added optional retain arg to split.
7c2fdda0b3 Better and correct words for split().
1e8b63eb88 Document some process group stuff; mkdir mode arg optional; mkfifo.
db9a7bba22 Give correct length of string.
4d206541be Slight update; file args are no longer optional.
50ec5c074a Add flock; warn about lockdata system dependency when using fcntl.
164c36b6c3 Change of address; 1.4 beta 1.
ecae0b7ebb Fixed for Latex2e by Dave Ascher.
84fb82dda0 Patchlevel to 1.4 beta 1.
9d81b5594e Different logic for defining CHECK(); 16-bit MSC specific define.
845547d54b Added CWI copyright. Updated some comments. Fixed bug in Merge() called with NULL args. Get rid of TkDefaultAppName() -- it is not used anywhere. Pass error message on when Appinit fails. Create/Delete FileHandler assume fd is a socket on Windows.
8d665e6b51 changed windows test symbols; removed debug printf from sockets
8026febbd6 Made comment for getprogramname() more helpful.
be32c8921c More rational support for Windows (tested on Roj's NT 3.5 machine only). Use PyArg_ParseTuple() where it makes sense.
920b13d529 Added HAVE_FLOCK
faf681a154 Some cleanups.  Change of address.
bfc1bbe57d Some cleanup; make for loops over subdirs less noisy, more informative.
0e41c8c848 Cosmetic change to the dox_8x3 hack.
fd03e2b4b1 Clear waitpid() status arg in case there's no process to report with WNOHANG set.
3b4da59cd6 Renamed static pow() to powerop() to avoid name conflict in some compilers.
d3901028cf Sjoerd's StringIO speed-up
d4cc04c672 Add test that script name ends in .py. Cosmetic changes to usage message (refer to "make install" now).
f75f80eb48 Get struct _frozen defn from Python.h; new variable names.
2bd37e6c9b Added more entries to create required target subdirectories for sharedinstall.
bd6187fcce get rid of temporary README about Tommy's efforts
990e619b45 new simple dialog module, incompatible
84a00a80a2 Change defn of splitnport() to only accept valid digit strings.
4e15599daa Import marshal before using it :-(
6afff6139a Memoize _deepcopy_tuple() -- maybe this helps Tommy's problem.
7c46a920ae New style interface via pointer variable.
cfd0a22252 struct frozen is now struct _frozen and comes from import.h.
04527a22c8 frozen_modules is now officially part of the API, remove _ from new name.
4ee68d91c3 Add defs for struct _frozen and struct _frozen *PyImport_FrozenModules();
8fa9b6f932 Define sys.prefix and sys.exec_prefix (see Modules/getpath.c; from Makefile).
529c963d36 Test for zero-length argument in capitalize().
26b310a3fd Added new.instance(class, dict).
53725a2858 Added splitnport(), which is like splitport() but returns a numeric port, is forgiving about semi-numeric port numbers, and allows you to specify a default port (default is -1, None returned for nonnumeric port).
2745753b91 added capitalize()
4f0fbf884b Yet another pass at fd2obj -- this time for Windows
c34c9a5001 provide access to $(exec_)prefix
006bf91530 ntohs, ntohl, htons, htonl -- thanks to Lance
d639d4d6d6 more changes for Windows, sigh
601d332a3f Bastionification utility (useful for rexec clients)
4cc4ab1735 Add third arg to split().  Add capwords() -- which uses that.
8775d8b9dc Added capitalize() and capwords().
2e1beeac2e Add a hack for Solaris threads (why not, there are zillions of hacks for Windows and DOS here already :-( ).
8bac546e11 Avoid core dump in resizestring() on read() with 0 bytes.
65af28a0f4 Calculate length of AF_UNIX addr struct portably in getsockaddrarg().
53a9bf8164 Get rid of obsolete allowbroadcast(). Avoid core dumps in resizestring().
ab28c56fd3 Avoid core dump on symcomp("").
6602099e7c Got rid of florida hack and made it work with Solaris 2.5 pthreads. Wonder if this will break it on all other platforms :-)
3c0b79ca0f A fcntl implementation for systems (like Solaris) without flock() call. By Sjoerd.
8c1529dc29 regenerated files from IRIX 5.3 headers
a7e4b28422 Support optional filename argument for retrieve() and urlretrieve(), to specify where it should go (if specified, even local files will be copied into the given file).
34e1777807 Note that EOF is ^Z on DOS.  Spell Unix as \UNIX in some more places. Note that .pyc files are platform independent.
69155682e6 small fix by Sjoerd
eaa1959c07 Use py_resource module
0acb7f7a57 Module to handle PYC resources
31dd5c083b PyMac_GetFixed() didn't return 1 on success
1835c4f1b4 Use correct field of sigaction struct
3672aa2dcd change DumbWriter to derive from NullWriter
3fd32ecd92 optimizations due to Fred Drake; added urldefrag() function
1acbffe2e0 Conversions between mac paths and URLs
9787bdafe0 Many improvements dure to Fred Drake
d2560b0f2e Docstringified and PASV support by Siebren (including new ftpcp() function).
3ada87a508 fix typo in load_dynamic
f4aaf862fd Be more careful about default temp dir
7a623d7e7c added &quot def
1b5a1d0770 Total rewrite
72e316428f made it work again with changed Tkinter
0978f993e3 Major overhaul:
51b708ab61 don't export selection
5feb54c461 added hdl protocol properties
3c998825bd removed history comment
2539528810 add translate() -- which was in strop per release 1.3
a13edb489b optimization of getheader() using a dictionary
fdd45cb858 Fix some obsolete names comments.
9e6aa9d55b avoid eval() like the plague
dc42b8aa3d change Mac creator/type
6cb84f3cde change return values of simple run* functions
8460b94b50 removed unused globals
508a092e2e added setcontext and parsesequence; several small fixes
22a18904e4 export error == IOError
fa59cd73d4 bump version (sorry)
503e50b0fa capitalize H3 headers; add 'cgi.' prefix to example code
ce84920e0c added * and + operators
48bdbfc1a9 see new configure.in
68242b5a8b Some more header files and symbols. Split the AC_CHECK_FUNCS() line using backslashes. Added FreeBSD support. Added XXX comment -- need to be more liberal or careful about -lreadline.
554e96fd3d Added HAVE_ symbols for mkfifo, sigaction, sigrelse, ncurses.h.
87d5e705c3 config files for DOS and Windows (all versions, all compilers)
586480b80c Added some comments to the top.
a0e71303d9 Changed NT -> MSC or WATCOM
582646aecc grand renaming; added copyright to some files
0a8626eb88 Plug memory leak (variable names in code objects were being leaked!)
9a97d6ce53 Added Py_GetPath (getpythonpath)
68ded217f7 minor fix to mime header regex --Sjoerd
507f15b254 Auto-install on first import. Added quick reference.
ddcb36b5da Use ../install-sh to install files.
9c8a0c4b1c Made all c_* symbols static.
5f1563cd93 rename more symbols
652f108faf rename exported symbols with _Py_ prefix
53d0de4b05 rename exported symbols with _Py_ prefix
3d86cc0dbc make soundex_hash static
8c1e150215 Removed some done "to do" items. Changed #ifdef DEBUG slightly.
ded690fc35 rename printrefs, getobjects to _Py_ prefix
363078afa4 make some things static
9ea917ebaa Only define PyOS_ReadlineInit if WITH_READLINE defined.
5048de2bc6 rename parser internal symbols with _Py_ prefix
e1cd6c175b don't use NDEBUG
01b68fd224 X11 install.sh script
814842f395 Removed most of the README text since it is all about the Mac specific examples, which no longer live here.
faefe4cb60 Fix typos (need to use tag_bind, not bind).
a4916fa54f Added mkfifo, ftruncate.  Windows/PC changes.
dd96ca77da Be more careful about default args.
2c26cfe776 Use struct _inittab def from import.h
3539b1e919 Added flock().
7081cf54bf Microsoft C changes
88661e8f41 Subtle Windows changes
fb0df944ca Use sigaction if possible
5555854e85 Windows/PC changes
5038412d0f Added __doc__ strings.  Added get_soundex().
bceeac8dc1 Watcom changes. Add mktime() overflow test and make it NeXT robust by initializing the structure from localtime().
dadc824c6e removed verbose decl; added win3.1 dynamic linking.
40f470f7e0 moved verbose decl to pydebug.h; added dos_8x3 feature
f857a6becb Added copyright. Include config.h which may define COMPILER.
5e3e426961 removed sime redundant header includes and decls.
795ba583f2 Removed some redundant header includes.
441e4ab802 new debugger symbol names
7f3f2c1819 TRACE_REFS -> Py_TRACE_REFS
4b0538c472 Added PySys_SetPath.
b9d876020d Don't declare Py_FatalError. Add Py_mport_Init and PyBuiltin_Init.
b221ac4f33 Define DL_IMPORT if necessary. Include pydebug.h instead of declaring Py_FatalError.
dd197e91bf Added __WATCOMC__ as DOS compiler.
39c2aae198 Added decl for PyImport_Init. Changed decl for inittab to define struct _inittab first.
2514ec7fa4 Used new names for PyBuiltin_GetDict, PyBuiltin_GetModule. Added PyBuiltin_Init.
b422c24934 Added PyFile_decls for PyFile_WriteObject, PyFile_SoftSpace, PyFile_WriteString.
12669749f6 Debug related variable/function definitions go here.
1799eb59da Non-trivial DL_IMPORT must now be defined in config.h. Include <stdlib.h>. Include several more Python header files, including new pydebug.h.
aae0d32f66 Use new names for debug macros.  Don't include pythonrun.h.
84a9032cd3 TRACE_REFS -> Py_TRACE_REFS. Added disgusting hack to force loading of abstract.o.
60be1db9a9 Added some visual enhancements of debugging ifdefs. Added PyNumber_Coerce decl.
0578851964 Removed TRACE_REFS and REF_DEBUG b/w compat hacks -- they don't work. Added defs for getbuiltindict, getbuiltinmod (bltinmodule.c).
f97632639e Plug memory leak in the previous fix :-(
993952bfb2 Fix obscure bug in string%mapping where the mapping creates its items on the fly -- there was an unsafe DECREF.  Actually save some lines of code by using abstract.c:PyObject_GetItem().
422cc7ffec more changes copied from Grail
4122216739 Modified for 1.3.3 distribution
ab7fcdd770 Added splash method (to quickly display splash screen without first having to load a zillion extension modules)
9d640a3d84 Added waste
25241d9978 Fixed callback handling on 68K machines.
12fe9fb18e re-binhexed for 1.3.3 distribution
ee21706f18 Added waste and _tkinter modules
4f0456d95d Recreated tkpython.rsrc, upped version number
5fb54324cd Added USE_WASTE define
1b63b27c78 Fixed up for 1.3.3 distribution, removed various old (and nuused) project files.
4915c99248 Export OptResObj_{New,Convert}
86a853ff77 Changed for 1.3.3 distribution
9c9a07c9c9 Remember source filename as <module>.__file__.
63e39ae933 Made Place.info == Pack.info
a5f875f504 Yet another mini fix to pack/grid info.
6878436366 Patch from the net for 4.1 file handler changes.
54ac1891fb Add __sinit() call according to Jack.
3626999377 Some more changes from the net...  Typos, 4.0/4.1 issues, new tkButtonInvoke().
37dcab197c Resync with Grail's Tkinter.py.
955c5d156d Set the base for atoi() and atol() to 0, since we're reading Python numbers here, and so that atol() doesn't barf on the trailing 'L'. Add a test case involving a long integer.
6dabc98400 Added __name__ attribute to class instance method objects. Removed im_doc attribute; __name__ and __doc__ are now handled by special casing in instancemethodgetattr().  This saves a few bytes and INCREF/DECREF calls per i.m. object allocation/deallocation.
3355be3f35 Added _id attribute to GrafPort objects (real id of grafport, numeric)
d9585c936b Fixed reference to cr/lf problems
1df16d095e A version of swed that can import html files. Also demonstrates implementing object handlers in Python.
42bc4b245a Added call to initialize standard (i.e. implemented in C) embedded object handlers
756522f426 Added support for callbacks (for embedded objects)
316a430098 Removed some spurios biindex calls. Added description of file.truncate(). Added warning to write() about buffering.
59b328e11e Added warning about behavior of open mode 'a' (or 'a+').
e71c5a7585 Removed broken tst.py
0f6dc5b888 Added MenuItem methods setstyle(), seticon(), setmark()
782405fb78 Extension to wed that handles styles, fonts and sizes
8ae8e4f963 Made style and soup handles optional
efe8c9c746 An interface to the WASTE textedit replacement library.
f2331de3ae Keep .exp files in cvs tree
b4c93811cb Copy .exp files to mwerks project directory too.
3ba03b291f An example of waste
c4eec9fce1 - Confine window moves to screen boundaries - Added windowbounds() function to help programmer with staggering   windows - Added event parameter to idle routine - Added settext(label) method to menu entries - Erase/invalidate only visRgn in stead of everything - Correctly handle clicks in inactive ControlWindows
2cc41604c7 Minimal waste test program, modified from ttedit.
08365425f6 Added documentation on FrameWork, TextEdit and Waste Updated minor things in the other documents (pathnames, etc)
8444507faf Use FrameWork.windowbounds(), fixed idle routine
dce32a93d3 Idle callback is now supplied with the null event causing it.
a2408e9d6a Fixed code generated for an argument of type ****
7bfc875270 Fixed ScrolledWindow to disable scrollbars if everything is visible.
111fdcf86c Added correct handling of cut/paste menu enabling, scroll bars
ded81a1ffe Removed ...gen.py files from repository
19171a21fd Added support for accessing a few more TERec members
90ecdf49df An interface to WASTE, an all-singing-all-dancing TextEdit replacement
6528b1feff An interface to WASTE, an all-singing-all-dancing TextEdit replacement.
bd9565a3e5 Clarified working directory stuff, added some paragraphs on using import and reload() to run scripts.
d544d0126d Moved customization to bgenlocations.py module.
eba88567a2 Added missing setport call to mkdistr_ui, and added scrap to mkpluginaliases.
46d9e79de6 bgen-generators now drop the python definition file straight in the Lib:toolbox folder.
819fa1a794 Added scrap manager
c574b43d35 Fixed a nasty bug where FindControl could return a reference to a destroyed python object.
da6a971994 Interface to the scrap manager
e353215bf7 Added ScrolledWindow (a window with one or two scrollbars)
7853647dd1 Don't atoi() the memo key. Use atoi(), atol(), atof() instead of load_atomic for seed-up.
e7b900d04b A simple scrollbar-less single-font (but multi-window) text editor. More to come...
c9c0dd3420 Fixed ttedit to actually work Fixed minor update bug in tlist
cef2c597fe Added enable(onoff) method to menus and menu items
5c6e3738cd Added lost docs for crypt module.
4bffb8b3b5 Added warning on memory use of tcl/tk
476d568785 rebinhexed
8494967f77 Added a region arg to update calls
5f962c2a75 Added a tutorial
822a30b0ee Added region arg to update calls. And binhex files rebinhexed.
270f411f17 Binhex gif files too.
f04fa7259d Changed to allow the user to do partial builds
3422f2cae2 Moved a button in the message dialog. and everything got binhexed again.
0b690db57a Added region argument to various ...Update calls. Also, some rsrc files got rebinhexed (sigh)
2b72417da0 Replaced various dummy updateRegions by real arguments
fcdf4378ac TextEdit sample code (not yet complete)
0701d623e9 Added TextEdit interface
8a452d6fa1 Interface to TextEdit toolbox
9a2c546e75 Create files as temp file and move to real location only when complete. Added some try-except statements around listdir and mkdir operations.
adf876938a Separate readline initialization into new function PyOS_ReadlineInit(). For Dave Ascher's readline extensions.
d17057745c Add list() method, analogous to tuple().
a5a3db70d4 Under NT, interface to mysterious module registry.  (Mark H.)
e71a947f8e Under NT, change "long" sharedlib extension to ".dll". (Mark H.)
c606fe186f Under NT, define sys.dllhandle and sys.winver (Mark H.).
4f1c59b818 Add'l change for NT (Mark H.).
f2389a0b24 (py-indent-right, py-outdent-left): fixed placement of point after adjustments.
43ecf8ee58 (py-parse-state): make sure we don't land inside a triple-quoted string
ab69eb9673 Added resource-ids for override preferences.
a486a55f59 Added support for override preferences
db0baced23 Added support for editing override preferences in applets
bbb4e10e91 Subtlety: ~root/a should expand to /a, not //a.  Everything else unchanged.
ededb58c14 Update reference (it's now RFC 1808); added http to list of protocols that use parameters.
48766512a0 Reformatted with 4-space tab stops.
5f204775bf (py-indent-right, py-outdent-left): Watch out for (mark) returning nil.
cce074e273 new binhex from Jack (much faster)
975aa22bdd Don't change Standard File folder on chdir().
415571cc9f Replaced non-ascii chars by backslash escapes
e6dde149e7 Removed one level of "mac" in path initialization
5196d00cc6 Compare sourcefile to hqx file (if it exists) before binhexing. This should stop us from continually updating the .hqx files, at least for resource files.
a220e67a9e Finally check in Jack's latest version, which fixes all known bugs.
4669d7e415 #updated some comments
826255ba32 (py-indent-right, py-indent-left): support indentation of regions or current line.
71ac945321 move mac url2path conversion to separate module
857e88eab5 Updated to reflect new situation, added a warning on fmmodule.c
ac0a21abeb Added a note about removing unwanted sys.path stuff
94a71aba52 re-binhexed
ef51d1351c Removed addpack calls
f63abad4e9 Removed addpack calls for toolbox modules.
1a0dafb1ce Somehow the <<terminated>> got mangled. Fixed.
ca5e5edc69 Fixed pythonpath to include tkinter and mac:toolbox, and source-tree locations for mac libs. The others were re-binhexed for reasons unknown...
e15f6fef8b Fixed for new directory layout
32cb80cea8 Removed addpack calls for toolbox modules, re-binhexed resources (sigh)
442e7202f8 Added proxy handling; upped version. (Proxy handling uses <proto>_proxy environment variables by default.)
bb653772f5 Oops... I Inadvertently lost their cvs files...
0f7af3f795 Were copied to Relnotes-1.[12] long ago...
065796072c Fixed binhexer
a6308130bb Explanations of the examples here
f4875af09c Minor fix
18a99f5597 Changed creator from PYTH to Pyth
1a06e1d6ba Binhexer fixed
52a40ac03b Added option to set queue size
dca8788d1c Added a few file types
a8738a5642 Added print_arguments() function.
0603319846 Use MacOS.openrf (if it is available) for opening resource forks Copy in .5Mb chunks in stead of 1Mb
db9ff36ad9 Added checkmenu() method (to checkmark an entry) and delete() method to remove a menu.
e355c4568f - Allow setting of argc/argv in <option>-start dialog - Set "ok" to be default button
4032c2c1ce Change to use real temporary files instead of StringIO.  Correct and add to documentation.  This will be released as cgi.py 2.0a1.
0147db07ef Considerable documentation changes and a few import rearrangements.
867a32ab53 (py-comment-region): obsoleted by comment-region
7aee384dbc Reformatted with 4-space indentation.  Added some quick docs to the FieldStorage class.
a0e2422615 A few missing casts (Richard Neitzel). Don't append Unix paths on a Mac (Jack Jansen).
2429c722d7 Added missing include of Fonts.h
57fb8cec3a New binhexer
3fff8c43fb Config files for shared PPC python with GUSI and for _tkinter plugin module.
0acaf07377 binhex fixed
d19db60301 - gusiprefs.rsrc added (note: must be in application/applet, not in   library for shared python) - binhexer fixed.
243ddcd7a9 Added FieldStorage class, which stores parts in files. (Not documented yet, and the files are currently StringIO instances.)
62d9d6ed40 (python-font-lock-keywords): make it a defconst
391b4e60e6 Reformatting only.
6d627754c1 (py-honor-comment-indentation, py-compute-indentation): allow other than nil or t values.
378815ca86 Replaced previous gusi-chdir() fix by a call to PyMac_FixGUSIcd() after each chdir call.
7275561d34 File upload and revamped documentation.
911ad6b067 Added code to make fsspecs work for gusi-python
6648fb749b Removed unused vars
33d6ec062e (py-honor-comment-indentation): new variable.
6245a3ca3f #removed font-lock cruft
33ab6e4915 (python-font-lock-keywords): Much improved descrimination between keywords and names with keywords in them.
fd0fb38055 (py-compute-indentation): fix skipping backwards over comments by using forward-comment (and Emacs 19 function) if available.
76a0589986 Added openrf method, which opens resource fork. The resulting object supports a subset of normal file functionality.
8ab1148762 Added __sinit() call, so C++ initializations in shared library work
405ab2378e *** empty log message ***
01fbc68896 - Reorganized init code - Fixed serious bug in code to get options from a resource
dc1c64a148 remove unused variables
25e852985f __FreeBSD__ shared libraries
1b66a4f01d default CLOCKS_PER_SEC to CLK_TCK if it exists
b0824db52c Made 2nd arg to mkdir optional
1266a01e47 Include ncurses.h where needed
468fc6af68 Include stdlib.h or declare getenv
485f2da5a1 Add unsigned char cast
ec22c92e36 Changes needed to build with Tcl/Tk beta 2!
dfd428dd7e Changes to make it work with Tcl/Tk beta 1.
b137a3341c Added TMPL for startup options app.
a4b7e14df8 Store default startup options in preference file or app.
532e3c2bf6 Changed MacOS creator code from PYTH to Pyth
be1a6e29e3 Change Mac creator from 'PYTH' to 'Pyth' -- 'PYTH' was already taken by someone else, 'Pyth' is now officially registered by the PSA.
1023dffb36 - AppleEvent timeout set to infinite - Continue even if a build fails
22586993c5 Script to recursively change PYTH creators to Pyth
23b8841d74 Tk resources (but with a different name, without a space)
243b29b169 Mods by Guido: mkdir 2nd arg optional and remove as alias for unlink.
a406c7b695 - Added Tk projects - Ported everything to CW8 - Renamed Runtime-Python to PythonCoreRuntime
5bfdc9281a Added config file for Tk-python Removed mwerksglue.c (which was useless anyway)
eb263680bb Ported to CW8
56ed26ed11 Ported to CW8 (added PRE_CW8 ifdef for CW7, for the time being)
b697173b5f - Added Guido's fixes - Removed CW4 ifdefs - Rationalized ifdefs for dup, fdopen
8eca2c2c95 Added ref to Misc/NEWS file; added hint to run regen script on Linux.
2bb57b81f2 Changed makefile() args from r/w to rb/wb, for non-unix compatability.
0d12ead05c Try to normalize urls referring to local files (code copied from posixpath)
e708f4005d Include GUSI.h if compiling for mac with gusi-sockets
5ebca871d9 Allow makefile('rb') or 'wb'.
c743c8d166 Modified for GUSI
b852b74c71 For gusi-based python
3df881c5a5 GUSI-based python projects
2d3f94ebc4 Comment fix
508537b9c9 Include GUSI.h if using gusi-sockets
e8a0a5c92a Module to convert a mail message to or from quoted-printable.  The message may consist of several MIME parts in which case each part is converted independent of the others.  Only converts when necessary.
5416e20037 mark strftime as varargs
f4a5912d51 add remove==unlink; mark strftime as varargs
ad1f7eeb32 get rid of bogus name for init_tkinter()
0f6f812acb better way to define ComplexType
a98b0a1ff5 improved test()
7bb7ecd39e even better way to normalize spaces in add_flowing_data
93dc801b06 better way to normalize spaces in add_flowing_data
f69da220bf fix several bogus var refs in error reporting
feeadef61e document OverflowError exception on mktime()
264302de3e atol supports trailing l/L if base is 0
c1715527fd document non-BSD SIGCHLD behaviour
789742b8f8 change jars email
8c07bb4565 listdir no longer returns . or ..; added remove==unlink
71b1815c1d hypot is now always supported
d2966cb95a don't die on unreadable files etc.
3326b672bd Re-binhexed all projects.
4fbb6d9a15 Added cmath module
d390325bbb Modules implementing WWW and URL suite, and a module to control netscape.
7e156a70fa Added missing get() method
bdd0747193 Fixed access to Quickdraw globals. Unfortunately, they now have to be accessed as Qd.qd.xxxx
05a6d8f4c7 remove rcs history
e36e1fe516 support fast mode for gdmb
15ad9a6e52 only use 'j' for imaginary constants
c96ef6ab9e properly initialize optional arguments to apply()
faa436c70b use only j for imaginary constants
efa3143abd add keyword args to CanvasItem class __init__
15c4fecffc more recent linux header files
8c8a02a258 speed up unquote() by using atoi() instead of eval()
44a4d59b56 support 'whence' arg to seek()
0eaa74bf8d add acct() method to send new account name
ba426640dd fix typo in _setval() return value
6700142d83 backward compatible interface for bsddb
0182c068ab inherit error from _mod.error
13ad35a7d6 real test for executable script
5bb05da6f7 correct retrieving return value of os.waitpid()
eacce12fdc add missing loop step to parseplist()
f7476c5088 fix default arg for read() -- should be -1
06d74418e5 add ComplexType
724187929a use 'j' instead of 'i' for imaginary constants
1e7b2aa5d6 Removed unused var
9fbcc6a6c2 (py-shell): Fixed Emacs 18 bug, use of boundp instead of fboundp.
996e6dc959 Corrected format string in api_version_warning.
b89f32e869 Added prototype for PySys_SetArgv
6c6ad83e54 Set default item for dialog
76c79e9ba8 Added 16-bit pixel support for some operations.
ba1de3bafb Fixed off-by-one error in rle-decode, and allow whitespace in base64 ascii input (thanks to Donald Beaudry for pointing these out)
61f3df4543 Added rgbFgColor and a few other members of CGrafPort
79fb732d5e Added Fm module
00bd2e5853 adde cmath; added version numbers to tk/tcl libs
3206268692 added default hypot() implementation
b123691384 64-bit patch
b28911cdef added new.classobj()
c0fd1c0b83 fix argcount bug for build_node_children
ca42b1673b clear addr buffer before calling getsockname
71aa32f4af complex math
f595fde47b changes for pow(**) and complex
c7fea2feed add sigrelse() call for SunOS 4.1; add some fflush() calls
d8b49250e9 added complex and c objects
97ead3fb8e Hack to force loading of cobject.o
39739ea0ed better power implementation
cf3d1087d1 Added PyComplex_AsCComplex
ff4af06735 __hpux -> hpux equivalence
b0352fa3fc fix args options for setcheckinterval
beeda8a7ba changes for power (**) operator
50564e8dae changes for complex and power (**) operator
8a5c5d277e changes for complex numbers
0bfd6c33fa Added power (**) operator
5990592b71 added decl for PyComplex_AsCComplex
3d1f09557b changes for ** (power) operator
b17d5dea48 changes for complex numbers
e0dbd590ea bump api version
3ca2a95078 added complex and c object.h; get rid of Py_FatalError
f9fca9252f complex numbers a la Konrad Hinsen
77654a7e5e opaque C object a la Jim Fulton
3a50f8a51e - Added FontInfo support - Added (read-)access to members of [C]GrafPort object
bf220a16aa Added font manager toolbox module
195e33efa2 - Fixed bug in getfillable() - Added setcallback() method to set a user-callback
6259af9bbb An interface to the font manager
c8a9949407 Various fixes/enhancements, thanks to Ivan and Just: - Added window.SetPort() method - Added optional bounds and resid parameters to Window.open() - Fixed apple-menu DA handling - Fixed activate-event handling - Added default Application.makeusermenus() (File:Quit only)
1d8ede7bbe Fixed GetPen and SetPt arguments
04a02e7e11 Added support for PenState and Patterns (and the accompanying qd globals)
b539406643 Added support for cursors, and a way to get at the qd global 'arrow'
7d1eba9783 Added extra module argument varstuff, to declare extra module-level vars
29c612111b A different binhexer, apparently:-(
6601964f7b Fixed example
e8ea21b0fe Added pathname2url and url2pathname methods (only correct for unix and mac, so far)
b678975167 (Minimal) instructions on how to build python from source
b696b252b3 Added missing newline
5a01fe005e Common header file for all plugin modules
f4e7d2a396 Added (dummy) expanduser and expandvar methods
dc3e3f69db Fixed local file access for macintosh
4f508ad495 Sample image drawing code (not fully functional yet)
6f47bf44ca Minor bugfix in keyboard input handling
425e9eb6cb - Added color window/pixmap support - Added support for obtaining pixmap data - Added OptResObj_* routines for optional handles
72b56e831f don't return from main loop when error occurs
9cfea10bf2 It now actually works. Also, MovieInWindow and VerySimplePlayer example programs translated to python and added.
232f3cd190 Added support for RGB objects (tuples in python)
1e4ce733fc Added Sint8 and Uint8 types
0a54ae24c3 Added cm and qt demos
cbc0358e30 Added QuickTime module
641e8d7566 Added component mgr and quicktime modules
992ded8f12 fix free memory reads in dictlookup et al
e5fe4af070 Use global statement instead of importing ourselves to get to global variable.
453ced57dc still untested (but it compiles)
8b13703fc8 Added Cm.slb, the component mgr interface
cb4eaadd68 QuickTime support (not yet functional)
b996856d12 Component mgr support
41058c0d0b BitMap object support (only lightly tested)
135fb71481 BitMap object support
93fa45c9c5 A variation on PICTbrowse.py that displays the picture using DrawPicture.
fa4d5d0414 Added converters for Fixed
b7abb18cd9 Added support for GrafPort object
330381cbbb Added (minimal) support for a GrafPort type
7830ab8f49 Added definitions for GrafPort object and Fixed type.
e7bea57d0c Example: control eudora using AppleEvents
1dcbcc3abf Sample extension module: InterSLIP control API.
4ac724946a Control InterSLIP using modeless dialog, uses FrameWork
310c657d75 Control InterSLIP using a modal dialog
07043b4573 Browse all PICT resources in the resource chain. Uses SetWindowPic for display.
330f57699f - Added support for PicHandle - Added (by hand, through winedit.py) support for WindowPeek accessor   functions that are currently declared as macros.
a01a8f78cb New universal headers, a few bit-flags were added.
54c8f7e4bb - Fixed handling of InsetRect, OffsetRect, MapRect - Added support for PatHandle, CursHandle - Regenerated from new universal headers.
cdaa3d95b8 Universal header changes: some new bits defined.
754d4a4fa0 Regenerated because of minor changes in universal headers
b5cf5dad43 Changed file signature to CW7 project mgr
5d9579707f Allow '@' for ' ' in uuencoded files.
40b546d40e Initialize GUSI on the mac.
8a5d0d4980 Updated for the CW7.5 release, and some minor tweaks that I don't remember.
06d1632909 Project to build alternative version of MWCRuntimePPC.lib, needed for PythonCore as of the CW7.5 release.
c436d87f1a almost-but-not-quite working python with tk.
350b2b956e Documented ProgressBar and idle()
a550328432 MacTkPython configuration file.
e3342e8a87 Added progress-bar dialog
e2b5d046d6 Changed for the 1.3.2 compiler (CW7.5)
79559dcf47 Initialize GUSI for MacTkPython
da38f2d6a3 Added 2 missing SetPort calls
3a87f5bb09 Added a ProgressBar() class (which shows a progress bar). Needs new resource.
e48aa966c1 Fixed bug in cts error message handling.
e2ac51efcc Added _tkinter, if USE_TK defined
dbe75ae1d3 Continue looking for "open doc" events even after "open app". This allows you to debug the interpreter in non-interactive mode.
38e976665d Cosmetic change to event handling.
1e8557a9fe For MW Python, update titlebar of window when python exits.
8324836329 Disable pythons own eventhandling on the mac.
38186782e5 Added idle() method, called when no events are available.
e0371b8415 Fixed basejoin.  There were two main problems: - basejoin('some/url', '#name') would strip the last component of   some/url and resturn some/#name. - basejoin('file.html', 'relative/path') would return something like   file:/relative/path, making a relative path into an absolute one. These bugs are fixed by some drastic changes.  No scheme is added when none is present (i.e. it works as replacement for posix.joinpath). If a scheme is present in the second argument, it is returned unprocessed.  No hostname are added in this case.  If no scheme is present, the scheme of the first argument, if present, is used. The algorithm is commented profusely. Also fixed a typo in a comment.
17914f4e17 (py-indent-offset): Change default to 4.
825bae7c35 Also remember the module a class is defined in.
fa7aece225 - plugin tkinter module for ppc python - minimal python for cfm68k - sample project for plugin module
34cc5c31e8 Fix to load needed resources on a mac
81299f10f7 Added providence mailer support
4ec940ad04 Added (limited) compuserve error parsing
a8304b6bd1 Updated 'vers' resource to 1.3 (forgot before the distribution:-) Changed option dialog to include console-window close options
0168f279cc Added options for keeping window open on normal/error termination Moved whole exit-handling of console window here (from pythonrun.c)
66a8977b0e Moved mac-specific exit handling to macmain.c
9513f2c95a Made a bit more robust against out-of-memory situations
10d0f8fc40 Renamed module tkinter to _tkinter
f39ca24ebc Removed unneeded reference to tkinter
ba0311ecff Renamed module tkinter to _tkinter, moved source to _tkinter.c
9715779810 Added class MHMailbox Added optional third parameter to seek.
173c8bd310 MACTCP renamed to MACTCPconst
85c9aea6e2 Added prototypes.
4e1786689d Added localport/localhost initialization. This fixes socket.getsockname().
9a78536900 CW6->CW7
9bc4690e7c Take care that filenames for .hqx files are ascii (no more mu's, etc)
0a72e8d4d2 Added missing include for <Aliases.h>
945b7b8eaf comment fix
8968624574 Script to read and parse error messages from mailer daemons. Written by Jack, some minor changes by Sjoerd.
2bbe49bf6f changed underscore to have symbol syntax
52bc17cd9e (py-indent-offset): this should be buffer local.
349a988ba7 Added third argument to call()
99bbd18067 This commit was manufactured by cvs2svn to create tag 'release13'.
0638b60af0 Added imgpbm and imgsgi
84c8baf040 Added missing imgpbm and imgsgi modules
178652b06d Export strdup (parsermodule needs it)
d0f26784fe Last few notes/bugs
c925291ee2 Last minor tweaks: debug off, added missing img mods, minor things
6c066885f1 set date to oct 13
b50667d229 rename binasciimodule.c -> binascii.c; disable parsermodule.c
bf032a97b9 mention syslog upgrade
5e6a3564b0 undo opaque=fopaque changes; make test script more flexible
81a07ceddc idraw on top of an image
e7d92d5f41 all sorts of minor nits
5e639d446c transcribed changes from tut.tex
c102a13f61 added two names
aa93ca834b mention Fred Drake's parser module
46f92d2eba add Listbox.activate()
b61b28b07d added listbox selection modes
a61bdeb8a9 add delete() method to ftp object
d9e9f9c05d Fred Drake's new parser module
ca81470a15 add libparser.tex
4b73a06e92 Fred Drake's parser module
c1822a4dd1 changes by Steve Clift
7d0590b544 Removed declaration of sginap because it conflicted with a header file.
4237efc7f0 Propagate variable calls both to the linker and the compiler.
da53c5277c Documented MACFS, macostools, EasyDialogs and FrameWork modules.
06cf5d0d4c Added base64 codec docs
ab71c3fca0 Fixed typo.
a8a277cbdc Fixed positioning of icon on copy()
9bd2d970b8 Updated for 1.3
83f45401e8 Removed unused variables
fc72d36825 Changed SIZE: minimum 2Mb is a bit over the top...
ae3d3ef180 Ported to CW7
3434a27036 Resource files for 1.3 distribution
b39a5d724c Adapted to CW7, added MkPluginAlises
703e2c153b Changed CW signature and fixed .as/.hqx creator/type
316ba5d2da Adapted to os and imp changes
d40f3c60ca New universal headers
732151473b Fixed bug in optional argument error checking (and generated all suites anew).
a1db48b75b fix Menu.add_command etc.
d462f3dc28 added 1.2 news
670ded8422 added some files
3ec97e5d52 interface for Emacs imenu
288527a162 updated version and date
fbe34faba9 syslog docs by steve clift
0447a32bcc release 1.3 for real
691d4ec0bf a fe more things: apply 3rd arg, ni, ihooks, rexec
8476d00060 footnote about keyword args
0568d5e92c apply() third arg
e38a752d25 new version / date
f36768eed5 set version to 1.3
c5d0d79714 make access obsolete
503b2e87c2 Barry's version 2.30; some chages for triple quotes
53f4524a92 disable code generation for access statement
447ae53eab fix for 4.0
9beefa2f85 describe more 1.3 changes
ed39cd05c2 change warning about C++
e5eb5eb55e Added all changes since 1.2 (from rcs logs)
c0c01f79c6 more elegant way to treat exit status
a176f585c4 add "-r revisions" flag to log flags
7bde92b65c added log option; cleanup afterwards
bffda89914 change log() to return the string instead of printing it
83d6bbf597 search for keyfile in sys.path as last resort; reword exception
5a6ad8fb71 flush before reading response from socket
11bb1743b6 mac robustness: use os.path.join
f6d69289a3 mac robustness: default timezone, unlink target before rename
903f487684 add BGN/END_SAVE macros around fcntl/ioctl calls
1c45ca310b keep exitfunc alive while calling it
f7f79ac0c8 better version sanity checks; get rid of Widget.unbind_class()
909507dd0b added NullFormatter
84175bacd1 strip <A> attribute values
650ba37e1d typos in attrfind regex
d58364e709 added lt, gt, amp back to entity definitions
ee3de2a8b5 small fixes
951213e8ca Use binascii module (resulting in a 60-fold speedup:-)
84bbc2e3e3 Added base64 support
5a49ffca5e Fixed two minor errors.
685e16d7d6 Fixed hexbin handling
8150760e6e Clarified some things, started adding mods since 1.3beta3
8ccfc93c2f Removed unused variable
95ffa23597 Removed unused variables
8426477bbb Modified/recreated to use keyword arguments
96ebbd3082 new after options; text.search; new image methods
275fbe21c9 Move some stuff around so customizations in Setup take precedence
896fc7ed4a re-enable new.code(...) with new args
64b24fb062 clear quitMainLoop when we fall through the main loop
8988fb239b Initial revision
c0e68d1e41 actualized example, catch EOFError, print retrieved lines if debugging>2
928fcede65 actualized example/reference, fix bug w/ nonnumeric port
c7ae92069d add flush_softspace() interface
e3d9320fc5 allow _ in attr names (Netscape!)
4f399fb642 more robust coding, adapted for mac
59c473be99 delete PyNothing_Check, which does not actually exist
05151e0354 +aaron watters, +PSA, +GC, -lance, -beta
65126d5a3d entity definitions from HTML 2.0 std
c52c1e9b82 Initial revision
59fcc5ae87 Added some clarifications and fixed host names.
bc12873e4b Load toolbox modules "by hand" using imp, so this script should now work in a virgin distribution.
3f14f4a3fc Changed the way .rsrc and template are copied: hopefully this will finally get the bundle stuff right.
9722ad8883 Mac changes
453534a84d added verbose option; added ismap/align/width/height to handle_image args
3c0bfd0dee fix <!...!> parsing; added verbose option; don't lowercase entityrefs
8421c4e833 actualized example; added xover, xgtitle, xpath, date methods by Kevan Heydon
3f6bb86593 fix bogus resize length in nextc
194e20a9db add file parameter to all printing fns, default stderr
095e9c6954 (py-align-multiline-strings-p): new variable
2242fd1c22 fix several bugs in tr argument lists
e7abf4e2c3 remove Modules/Makefile on distclean
57855b177f added strftime
ff84049b25 added psa plug
dc3372e943 new exec syntax
aada0d51a5 Initial revision
71b1a90bad added getitem/setitem to Image class; changed call wrapping (again)
1c9daa8ba6 handle missing QUERY_STRING
3b7b8131a6 recognize a few more file types
54c1510cb7 improved test/main program
a1e7e62893 fix bug with missing default for last arg (discovered by Tommy Burnette)
befa14f1b9 #undef argument, for the Mac
020dfe7f2e include Python.h
650ae0ab06 remove unwanted fatal() from err_badcall()
9d78d8d2fb spell TraceBack with capital B
8ca687a68e use Py_PROTO macro
8ba873b8ad adapted to K&R C
6f011d7ad5 Get ordering right for TRACE_REFS/COUNT_ALLOCS combination (otherwise may get inc_count sanity check abort).
0c6563f7c7 (py-electric-colon): turn off electric behavior inside strings and comments.
57697af9b0 (python-mode): comment-multi-line must be nil for Emacs 19
c01c5c859c (py-compute-indentation): when inside a comment, indent to under the most previous non-blank line.
e77438cce0 new version from configure.in
7c53b77733 plug some leaks
1c20648ba2 added SITEPATH and DESTPATH variables
55a214e39d on osf/1, never use gcc; added test for strftime()
bbc3410fa8 added 5th return item, clock time, to posix.times()
a3127e8e11 added strop.translate(s, table)
8d8c1eeed7 added time.strftime()
26ee80947e added strftime
f65f278b8f added string.translate(s, table)
1e150618a3 add realtime as 5th item to os.times() return value
93cf55e369 HP-Prec is not 64-bit
a67dee30bf move uncomfortable backslash
502d96021b incompletely converted to Tk 4.0
c27e04228c adapted to Tk 4.0 and CNRI man page locations
69428f1fb3 improve fonts; Tk 4.0 aware
bbf817557f simplified no Tk() sets _default_root
55618efad9 use $DISPLAY
c66394d049 Initial revision
23d7b4bbfd removed redundant C++ hack
a0dfc7ad65 fixed the test program
aad8692328 Initial revision
a5773ddb23 move constants to Tkconstants; added some; overridable error reporting; fix typo in propagate
1dc366f109 add (dummy) mode arg to open()
edd6376e5e added read/writelines, bufsize to makefile, gethostbyaddr
b9e39c8861 Filter button should set selection's directory, too
bf4d8f9d87 added OptionMenu class (tk_optionMenu interface)
cf9e27c72e support value-less attributes, using regex.group()
fd504d9f09 took out forms support (in favor a Grail extension)
a89b1bade5 rationalized os.path.split() so split "/a/" yields "/a", ""
6655c4e2d2 Build appplications, libraries and applets according to builtin instructions.
0f452fa557 Slightly reorganized so it is useable from another program, and put all print statements in 'if DEBUG'.
54500bb79f Fixed typo
8932a8223e Projects used for 1.3b3 distribution (I promise I won't check them in for every little change;-)
e83d201f5d Minor fix
05249f96f2 Updated 1.3 relnotes and added top-level instructions
b39be2173b Fixed to work on 68K (could be yet another optimizer bug or something)
54bc679d0a patchlevel set to 1.3b3
dffa123f99 Seems I had never checked the README file in...
41fa7ea719 Python will now attempt (again) to create at least a minimal preferences file if it is missing.
9119ccfadd Added List module
847e89ecfa Removed unused variables
57633c1a48 removed unused variables
61c32fe11f Release notes for 1.3
6c60b6e2c2 Added version resource Added dialogs for initial preference file creation
e220f509ec removed unused var
a6a55e9852 Removed unused var
c9c99f2538 Interactively create a distribution from a sourcetree.
7c86b21812 - Allow PythonApplet to be an alias - Correctly set bundle and init bits
8094f0ddae Added functionality: locate CW projects, copy them, empty them and binhex them.
fbac4bbf67 - imp seems to always want a file object arg - continue if resource file not found (may be an applet)
0223aa11d8 Obscure bugfix
0949055ddf its all in the name...
8961847e18 Modeless dialog test
423c798b3c copy() can now create destination path
f5101ee5dc Constants useful when using macfs module
13dc4f71a9 Fixed dialog-window event handling
7765dbbf0c Hexbinned CodeWarrior projects
f45e586ed0 fix typo in bsddb entry
1100dca602 Initial revision
7e183e902e Documented new argument order.
8b745126d5 Changed arguments and added a lot of functionality besides
ac4f8d3198 Initial revision
4324536644 forget previous change (content-encoding)
a5cf179f02 encoding can be content-transfer-encoding or content-encoding
ca44540bc8 support overriding how to open unknown url types
92d0932025 changed some commas into percent signs
edb21c4edc Fixed typo: == -> =.
4549b137e3 Documented binascii, binhex and uu modules. Put them in the Internet/WWW section, for lack of a better place.
6ec3c653da Implemented two new functions in sys: 	getcounts() returns a list of counts of allocations and 		deallocations for all different object types. 	getobjects(n [, type ]) returns a list of recently allocated 		and not-yet-freed objects of the given type (all 		objects if no type given).  Only the n most recent 		(all if n==0) objects are returned. getcounts is only available if compiled with -DCOUNT_ALLOCS, getobjects is only available if compiled with -DTRACE_REFS.  Note that everything must be compiled with these options!
b0a2ce515b several new questions, 1.3 beta mentioned
740f357363 Fixed calling of __del__ method with TRACE_REFS defined.
24260ec916 This commit was manufactured by cvs2svn to create tag 'r13beta1'.
d4901c890a changes by Barry, e.g. font lock & email addresses
e7017ba0f7 updates
bf8e7d598a new stuff
79118131a1 new people
06f4289d3f many fixes by anonymous contributor
d639b45ed6 dbhash -> bsddb
e03f277a22 fix bug in close()
66017aa1b8 fix leaks in keys(); fix bug in close()
05870115fc rd_object() with exception is fatal error
69f6ee6a9d err_badcall() is fatal error
97162b5b95 exec() -> exec
9d8c5a4cf3 add errno.h
84c8c7f9ee 1.3b1 notes
45ee2eaf29 improve ac_sys_system/release, add ac_syts_cpu
d4c26469d6 Generated anew
b95ea18a4c Added ResObj_OptNew declaration
91a6398b17 Use ResObj_OptNew for GetDialogItem return value: the handle returned may be NULL (for user items, for instance).
9f37c6d91c Added ResObj_OptNew, like ResObj_New but returns None when passed NULL.
caf7505edc Added WhichWindow function to obtain window object given WindowPtr (as returned by event routines)
2f21246c96 Test of list in dialog
b4e47839eb Uses new FrameWork, has multiple windows
8ce4d51068 Different arg to GetEventHandler (but I cannot really remember fixing this.... Hope it is correct)
7e0da905e3 Made separate window class (and subclasses for special windows like dialogs). This is an incompatible change.
ac7c0dfa93 Indent bug
9c4585acfa Removed addbase.__del__ because it can't work. If code keeps a reference to self.fp or any of its methods, you don't want to close self.fp just because no explicit reference is kept to self.
ebed45fe0f Documented MacOS module.
0e1337437c Documented PromptGetFile and optional prompt to GetDirectory.
4518577b24 Fixed incorrect tex-code for readline
479c1b3008 Put debug output inside 'if DEBUG'.
7a58336511 Various fixes: missing imports, missing calls to MacOS.HandleEvent. Also, prints are now inside 'if DEBUG'.
01c2309f2d Useful routines on a mac: - mkalias makes a finder alias - copy copies a file, finder info, resources and all. - copytree does the same for a whole tree.
32486f5662 Added PyMac_PromptGetFile, removed stuff gone to other sources.
819f1770f6 Lots of stuff moved to other files.
c2e6dd8179 New file: list resource-ids in one place.
56b14d4484 Lots of stuff removed: gone to various other files.
696c95800e This is completely different from the old mainmain (which wasn't used anymore) and is the new main program for MacPython. Built from bits and pieces of config.c, macglue.c and pythonmain.c.
12fce3eda9 macgetpath - sys.path setting code factored out of config.c and 	macglue.c macgetplatform - factored out of config.c
f717ac29f0 Merged Jack's macgetcompiler.c and Guido's maccompiler.c and named the result macgetcompiler.c (after all, *I* did the merging:-)
0e1c0ce4b0 Renumbered dialogs: 128-255	are for interpreter use 256-511 are for extension modules, libraries, etc 512 and above are for applications
d5d5f462f9 Added new call PromptGetFile (like StandardGetFile, but accepts a prompt) and added optional prompt to GetDirectory.
9c45a6504f Added missing initializer and extra error check.
9062fa2fb5 Added prompts to various file-select dialogs Renumbered resources to above 512
ad169272fb Added List.slb alias
3050a2dc5f Binhexify any .rsrc file in a tree
eaeb1c825d Added missing 'leftchar' initializer.
dc977a99e0 Shuffled include's around (name conflict on Mac wrt teclick())
9d19a914d0 Added prompt to getfile dialog Renumbered resources
ec38010808 Added basic mac documentation.
a4b1d0030e Interface to the Mac List Manager.
f33a69f273 Temporary fix for access statement. Definition of Error was missing.
e2cb7274ea exec() -> exec
a49d94af08 test for specific bug in vars()
1d59df28ac added select_present and select_range to Entry widget
abad1cc647 renamed DbShelf->DbfilenameShelf;added BsdDbShelf (David Ely)
e03a86c3d9 change default flag to match dbm/gdbm
1035a892a1 make sure the path ends in a slash in reload()
fe4254eb08 warn about bacslash-s lacking
9c3241d6d0 exec() -> exec
1a16c868d4 remove file: from list of protocols taking host
30642ab29f changed version :-)
eae892d232 added note about missing features
a62b1003a6 noted obsolescence; exec() -> exec
894a7bb995 default tabsize to 8
1859600357 fix reload use of __filename__
ba3e46b9ce fix stupid typo: r->RDLK
99bf06b2fc same thing as for dospath, plus HOMEDRIVE/HOMEPATH support
92794e30cb don't print Cannot open/stat messages
baf642ed16 exec() -> exec
9f824a7984 Initial revision
fda5c1a807 redefined normcase()
3b8e1604e8 upgdaded the test program
4ac0050304 revamped somewhat
3e7a697c55 temporarily disabled the access statements
0ec3126222 added normpath() and splitdrive()
f68ec3924e added note about obsolescence
0dbd1fd46e correct description of integer division; describe optional read arg
3e43d8382c clarify optional status
0bbbea15e6 typos only
eafe32a639 chapter on new things in 1.3
e164bd83e1 Documented FindFolder, GetFInfo, SetFInfo and the FInfo object.
ea79c876d3 re-enabled newmodule
d8eb8a7945 MkPluginAliases - Scripts (AppleScript and Python) to create aliases 	to PPC plugin libraries fixfiletypes.py - Script to recursively set mac creator/type based on 	extension
9f0a17b83f Better fix for creating extended pythons.  (getpath.c needs to be recompiled for the extensions)
ad5d2cf12c Fixed creation of extended python.
9d8fe6483d rather ugly temporary hacks to make it work in grail & restricted mode
6a0691aee4 fix bug in reload
bebe5157a5 add module binascii; add r_unload/s_unload; don't change 'rb' to 'r' in open
aa7634476f change blank line insertion at a few places and fix recursion bug for </var>
150316ee2e added getpath.c; added -P exec_prefix; added explanatory note
45a910475c added MACHDEP back in
6e39e53cde Initial revision
222c8924c1 add xstat (extended stat, returns resource fork size and creator/type)
08d2071acc set some fields to zero for directories
6d47d0d07e pass prefix etc. on when making sharedinstall; install getpath.c
1383356039 added sys.std files, read-only open, reload
221df24940 add splitdrive()
971ee13835 pass the command to sh -c
e0bfd50d76 correct typo (persis*ent)
ec8fd94aab use new "single" compile option
b7677095d4 make sure os.environ exists (maybe empty)
8755582ef1 add seekable option to __init__
65ab98c427 use mimetools; add close()
e7808778d6 added parse_qs(query_string)
f54d967fec new formatter module; redid htmllib module to use it
a0eab1d367 Initial revision
0a2eaac867 Use binascii module for inner loop
fcdffeaaa1 Implement binhex protocol.
cf6369394e Better error messages wrt missing resources and preferences
a7b6a820ae Added binascii
727811907c Helper module for uuencode and binhex coders
a68bfe29ec Added missing walk() function
3d18593e6d Added interfaces to {Get,Set}FInfo and accompanying objects
f8bddd8ae3 Mwerks now also has fopenrf
426fa79a7d Mwerks version of fopenRF.
67b4e6d4e8 Fix for cfm68k
fc596038a5 Moved here because it is think-specific
63bf598217 Added resource-files to CVS tree, in binhex form
d8c7a41ae9 Put resource-files under CVS, in binhex form
221ec0b97a new sendport() interface; add test() program call
28e99fe96f added format_* functions (suggestion by Ken M)
fb1a0cd74f subtle changes to relative rurl joins
bbb0a05972 use mimetools; add error handling and authentication
7ff5d7f7c7 major rewrite using different formatting paradigm
145b2e0168 changed comment parsing
667d704997 Initial revision
37ba0bc50b split config.c in 1000 parts; new main; new unfinished objective-C module
e3e61c1642 empty kw dict is ok for builtins
a1633cd993 split cofnfig.c in 1000 little files :-)
47ad5e7d81 moved stuff around to resemble main.c
6ec1efb645 add imp.get_frozen_object()
b7b45627e8 avoid resize of 0-length tuple
ac21f6a579 class objects are read-only in restricted mode
055968c068 better err checks in resizetuple
e7e578ffe0 Initial revision
40d1ea3b9c new package support, import hooks, restricted execution support
a22a70aaff added some missing constants
35f67fb552 keyword arguments; redid Photo image class; other goodies
9455063d1e keyword parameter changes
5968badb65 - Use new names - Use AEInteractWithUser
39fe80b7da Initial revision
e87e7a56bd New test program for server AE handling
7874b5d88c minor fix
5050199787 Fixed incorrect call to InstallHandler and a few other things
21eb0b56a8 mac CW-only fix for messy windows upon exit
b7d0df4a91 Allow mac user to set "command line flags" by option-starting python.
292b0f96f3 Added code so you canset "command line options" if you option-click/drag python. Needs a new dialog resource.
cc456fbe82 Un-installing of AE handlers fixed (AE is very picky that you specify the same UPP)
7571f30efe A new home for scripts/applets EditPythonPrefs - Edit the preferences file (sys.path, python home) PackLibDir - Convert a sys.path directory to a resource file RunLibScript - import a module and run as __main__ mkapplet - Create a python applet
0db1ef96ac fix bogus DECREF in finally clause
b158909b45 \temporary 'fix' for brokenness
23ebebaa4f Made more ppc-savvy
4cae5e6c0a - Added getplatform() - (temporarily?) removed newmodule reference
614cf81606 Undef 'argument' before including mac headers
8cb4b1f707 Module with one function to read Python modules and extract class and method definitions.  See __doc__ string for more information.
ff8b494cf0 changes for keyword args to built-in functions and classes
ce0a6ded4d never close the file in imp.load_...
a83f270a4b changes for keyword args to built-in functions and classes
bebdc376c3 changes for keyword args to built-in functions and classes
454674d5db add forgotten PyObject_SetAttrString
07b14dd8bc add locking where it exists
ef38b78f94 use newgetargs
f8afdcfef0 improved comments for curses, dbhash
e42fc2fd37 use getnewargs where it makes sense
53bb7fff11 be more suspicious of getlocals()
bdd207af79 better policy regarding NULL locals
3fc9d73e08 new version
ffa257d10e Initial revision
2e5168c9fc Get magic number from interpreter (using module imp).
aa3e163fa1 Added flush() method.
ff99a72f53 change obsolete isfile to isvalid; add lock and unlock commands
ec9ea611d2 remove comment about obsolete variable
a79f5a3256 implemented 'add' command and commit for added files
cf1025ba0d fixed arg checking for keys() and close()
79ae53e8f0 Initial revision
ae75f4955e added dbhash; Tk is now officially at 4.0
24f42ac74c suppress . and .. in listdir return value
681d79aaf3 keyword arguments and faster calls
11a3f0c2bc NT specific change for nicer error message (Mark H)
2271bf7187 changes for keyword arguments and fast function call; added abstract.c
884afd654a keyword arguments and faster function calls
e15dee5e3c Generic Abstract Object Interface
3c7807937e include abstract.h
a827537afa Generic Abstract Object Interface
e4b4038cb2 Various toolbox routines have gotten new names.
bc608646a8 The three most important suites, generated by gensuitemodule
5ccd826aab Gensuitemodule generates python classes from aete/aeut resources test_suite is a tiny test program for such a generated class
40775bafab Split aepack and aetypes off from aetools (it was getting too big) Added support for all basic types mentioned in Apple Event Registry Added support for automatically-generated suites.
5ae5fdf901 Generated anew after fixing aescan.py
7433568172 Also scan AERegistry.h and AEObjects.h and create .py definition files.
829f88c169 Added GetErrorString method (convert OSErr number to string)
761c5aba8e Tk 4.0 and Tcl 7.4 are now standard
677dfc37b5 Tommy's mail explaining status
7f64e2497c Official version 1.26 directly from Ken
1311e3ce73 args to call_object must be tuple or NULL
b89ab8c6d2 something close to Ken's latest version ...
d3f9a1ad83 fix read(0), readline(0); make tuple for call_object args
32120311ed rename arglist to alist (conflict with new grammar symbol)
9f02331d80 Ignore a few more names when comparing directories.
611be707c2 replace vars() with locals() and globals(); 3rd raise arg; typos
8fd02194c5 typos
ab330d47d6 add missing definitin of longstringitem
95a5b9c949 correct description of list.insert()
d6ac380d39 fix bug in example (should close file at all times)
6b686e94a1 correct typo; document sys.platform
fb502e964f documented globals() and locals()
abfa2cae9f added pointer to libimp.tex for __import__ example
0bf8475108 documented default flag, mode; changed gdbm into a pointer to dbm
f10570b9eb 3rd arg for raise; INCOMPLETE keyword parameter passing (currently f(kw=value) is seen as f('kw', value))
7faeab3103 new MAGIC; some changes to default files for imp.load_... functions
e78c5d0a16 ignore control-l (parallelling change to tokenizer.c)
aaf18390ee added sys.platform
e40bddc3ef new grammar
872537cc86 added locals() and globals(); [raw_]input() uses readline()
064a62bc8a err() should be varargs -- and fix one call
ef4ee62a0f added getpalatform()
807b7bec06 normalized flag arg and made flag, mode default args; minor cosmetics
55ea8a7b5b pass $PLATFORM into config.c
3b46a50d63 new opcodes RAISE_VARARGS, CALL_FUNCTION
5bb73ed5e4 new grammar symbols arglist and argument
94d32b18e0 ignore control-l in whitespace
a996b910f2 new grammar for 3rd raise arg and keyword parameters
fec75d66a7 #changed all email address to go through python.org
4dba7e2b67 (py-append-to-process-buffer): XEmacs doesn't have last-input-start or last-input-end either!
4d82c9aef5 (python-font-lock-keywords): merged with XEmacs 19.12 font-lock.el value
e64bfee412 (py-process-filter): if command takes a long time, input typed before the next prompt could end up in the middle of the line, instead of after it.  Fix given by klm@nist.gov.
6e98f3350f (py-shell): cope with make-comint instead of make-shell
f74f63a43f Initial port to CodeWarrior CFM68K support (mainly by disabling unsupported features).
eceb3e3f0a Porting to CW CFM68K
f9480ce4d4 Changed ifdef __CFM68K__ to ifdef SYMANTEC__CFM68K__: CW has its own unique set of ideosyncracies:-(
464f62b6c0 added support for -L flag (local operation)
2ba1b4c5f2 add -L option
bab4725401 delete file after checkin
903afd0441 add bug comment
c503c97f1a restructured index somewhat
ab75eb244e rewritten using rcslib.py
40de53c3bd use the new rcslib
8608ab65e3 initial checkin
72974f35fb define RCSProxyClient here instead of in RCSProxy.py
802c437a95 rewritten and documented
79ed32d553 barry's contributions
92457b9f8d added seekable option; save unix from lines; speed up islast()
6cb15a0572 add User-agent hdr; read and close the file upon http error
2ab19920fc make split and splitfields, join and joinfields synonyms
efe5ac404f make reporting unbalanced tags an overridable method
b47281539a use imp.new_module(), not new.module(); and /usr/local
8afa8245bb functions don't have a __name__ attribute
f71c79bb85 test other name variable
f4ef7e6a0b doctor the exception
4cdcef7e29 discard endrequest(); minor stuff; rfc822 no seek flag
2d95706f68 support <HTML>, remove <HEADER>
0daa13b188 set softspace to 0 in __init__
6ea3f92109 added notes about security
54175f7cbe import string; add 129.6.64 to security
f3d39abb25 add security
541df3e99e bugfixes
d1972af22a update -R; diff -r<rev>; send mail on commit
29cd62b343 add doc for extra field
45babef8c2 security stuff added
37a291180c placeholder for security measures
e830e55606 added ftp mirror script
b01b4fa130 Added tbd's on python-font-lock-keywords
98590187d5 removed all references to modsupport.h
303c179b92 add bind(0,''); better way of guessing our fully qualified hostname
8d2033f08b Two new methods
5214a29774 Fixed sentence about modulator
138497d65b Updated
9a69112f85 Jim Fulton's change to support doc strings
1e054024c1 Added methods as_Menu and as_Control to convert a resource to those object types
a177228ff8 Added as_Resource() method to convert menu object to res object
5d56f4b403 Added as_Resource() method to convert ctl object to res object
80adc227d2 Added missing setselftype method to ManualGenerator
ae12e19409 Added PY_RESOURCE (mac only) to imp module
2c67362f70 Added FindFolder interface
08305504f1 Added code to obtain sys.path from a resource Removed code to update the preferences file, use EditPythonPrefs.py in stead (actually, code is still there if you define USE_MAC_MODPREFS)
68f1d45531 Obtain path from a resource (unless USE_BUILTIN_PATH is #defined)
e5e2cdde15 Removed >From stuff
6a9df7a86c updated comments
268a39fb84 converted to python
f1945466e8 two mime encoding schemes
8ddd0addba derived from new configure.in
36bc68024f sys/wait.h; NeXT changes (no unistd, utime; getcwd?)
4a2698648e fix NL for Linux bash bug; special processing for -u options
ac56297421 edited RCS cruft
31affb2e42 new modules soundex.c and environment.c
30b6b2b032 add setblocking(); NT changes; null-terminate Unix path
6e69fc7a72 removed rcs cruft
9caac91641 NeXT doesn't like me to declare hypot(double, double)
75f288de71 re-enabled NeXT dynamic linking (#ifdef NeXT)
2e96eb9266 replace "\r\n" with "\n" at line end (Jim Ahlstrom)
b65a48e2b6 linux elf shlib; sys/wait.h; don't add -posix for NeXT
3c294caa7a add note about font-lock and fix doc URL
5d9acb6b9e Mac dynloading is now enabled by USE_MAC_DYNAMIC_LOADING. Mac dynloading changed to allow multiple modules to live in with each other in the same file.
3f0c1551e9 Added USE_* ifdefs for a couple of optional modules.
2a58638eae Ported to CW6
a7ee15c8ce Split shared-library support and dynamic-loading support (they were both enabled with USE_SHARED_LIBRARY, now there's also USE_MAC_DYNAMIC_LOADING).
3a15dca1a0 Skip old-style 'From name time' lines at beginning of message.
fbe6d33ffd Check if we've already loaded a dynamic module under a different name.
7d0bc8343f Ported to Universal Header 2.0.1f (i.e. CW6)
a0e76bebd3 Ported to CodeWarrior 6
b81cf9d61c Trying again to check it in. Changes to: - Use Universal Headers as input - Change addpack calls to not depend on Guido's disklayout - Checkge testprograms to use new names for some functions
ae8a68f40c Trying again to check it in. Changes to: - Use Universal Headers as input - Change addpack calls to not depend on Guido's disklayout - Checkge testprograms to use new names for some functions
c7cfb95559 Rather massive changes: - Make the stuff run on Jack's machine (and hopefully all machines) in   stead of Guido's only (addpack stuff) - Use the Universal Headers in stead of the Think headers - Fixed the test programs to use the new routine names
f301dcac73 Added img stuff (within #ifdef, so they're easy to remove)
c263286bc6 StandardGetFile without args now shows all files (in stead of none)
7be34a8bb3 next version; python.org changes
c8718c3ddd Backward compatibity module for constants from cl.h include file.  The values are gotten from the cl module.  CL_old is there in case cl doesn't exist.
3db845b6f7 Make constants from cl.h include file available as module variables. Also added Irix 5.3 constants.
ebed75116f Templates converted to new naming conventions (thanks to Chak Tan)
52e02998ef Made the example slightly more complete
7a1f6f4f2a #updated to-do list
ebaf104665 don't show print passwords in debug output
b1c1315ba3 new release by Ken, fix handling of from
2db6bfcd1d For anonymous ftp, make sure local hostname is fully qualified.
009e79bf02 unified join(fields), split(fields)
953dc1a079 added transferSize() method
a12bbff857 mods by Gregor Schmid -- very nice!
ad07f2b656 squeezed some space out of a line that was too long
2f7ef91a5e eremoved should be edeleted, tests for lseen/rseen should be lsum/rsum
ec8cfd4089 largely rewritten FileClass and RCVS
1c653bd6be moved proxy; added __cmp__(); made proxy optional for getremote()
6c1504629f extensive description of what's here
8b5e0fa862 added setentry() and use it in commit so CVS/Entries gets updated
cf97469407 removed duplicate defs for None, False, True
eea4d9e85d moved package to standard place
3d761b5548 addpack
2d2a60e29b only diff differing files add PostUsageMessage
177df7d7c9 get default directory from CVS/Repository
330e884082 add diff command; add remove() function
bafc14da68 implemented commit
d22f59fd5d missed setting eseen and extra when restoring an entry
ba244688c6 Handled new and delete properly
6bb4a51daa implemented action() now, plus some bug fixes
b07d729c2d correct call to unparse, should be putentry now
81be17bdae report() needs to report enew and edeleted
ae21ced5da Added some more machinery -- still not finished
8bcd301cc6 Initial revision
e1220ff0b8 testing
c218a7e7ea rewritten out of frustration (not yet finished)
78016d8630 renamed to CommandFrameWork added ready() message added PostUsageMessage
318b80d097 Initial revision
729529b1e5 Initial revision
deb627c06e test -> main
547e8d8c0f if __name__ etc print filename when asking log message
00bbf09e1a largely rewritten, out of frustration
68abf54d71 got rid of debug prints
9aeee75c59 added Entry.dump() method
4d4ee8bdb0 major update
097c55ad75 accept more invalid dates when reading sums file, ignore files not in entries
c51237cd70 dunno
bec818a14f first remote commit test!!!
5f07b84796 Initial revision
107c747009 DL_IMPORT needs an argument.
45ff77f43e - The prefs file wasn't updated correctly if it already existed. - Guido's r1.23 fix wrt PyMac_DoYieldEnabled had somehow gotten lost.
e08dea19c2 MW does not always set errno on failing fopen()
1ff2f218ca Removed seeks beyond eof (MW doesn't support them)
e99c824bad Mac-specific code for setting filetype was outdated.
5dbc7231a0 DL_IMPORT macro was called in a funny way (and MW barfed on it)
d39f5f6453 This commit was manufactured by cvs2svn to create tag 'release12'.
decd2df475 micro lay-out change
e530c584f2 changed path references
ac3f212cd4 Some more changes for 1.2
0082c1a121 updates for final release of 1.2
91cb9d2fda revamped README; the usual elsewhere...
5dd52d37eb commit -- why not
5b98ac5b14 added hello world
4e620374b8 added rpython
3beff4164b add pointer to ../ibrowse
9e712fdd17 remove ref to howard subdirectory
07a272d9de commit -- why not
21bc15b73d commit -- why not...
f4449def3b small clarifications / lay out
6233293ce5 OS/2 thread support
48aa82e2df correct typo in example
96628a90c4 typos, layout and other small things
eae3f73b1c Graham Matthews
7ec5957022 typo bf should be \bf
96044da680 first update from Ken
fa486a2d53 call test() when run as script
5232590bf1 original received from Ken
e9df727176 change comparing instance methods
f1bb334950 Use variables from module cd instead of CD.
d8953cb8d9 change in counting freed objects
91e7a0bd2a Also count UNREF's as freeing an object (only relevant when COUNT_ALLOCS is defined).
8f7871eec3 finalizing 1.2
bf6bdb0100 removed some harsh words and added some clarifications
e956386283 Jaap V's version
6d67b607b2 backup Makefile too
9a707e8c76 added Linux specific files
8f4b6adb77 two new modules for the Mac toolbox
a075feba1e changed treatment of local time
02ee80d408 minor things
25f6fcc550 more complete examples
93dda331ef update list of supported os-es
5b7f3cd3e1 Use mappinglookup instead of dictlookup for looking up __builtin__.
f9adf48750 documented termios + TERMIOS
86dc1e696d added TERMIOS.py
4e2e0f9225 renaming phase 3
2ddd978fcc rewritten Abstract
233aa1d4fc rewritten introduction
45416028fb change \dfn to be \em not \sl
4bbe9c0add added WNOHANG
d45c1560e0 restructured docs for callback types
9a1f388676 init sys_checkinterval to 10
527c2643d1 flush stdout before writing to stderr in print_error()
74ee2878b6 move decl of realmain() out of #ifdef
de4e124c9b add WNOHANG
cf5394f88e rename debug() to set_debuglevel()
189f8fb8f7 added "pystone" benchmark
6f9e433ab3 fix dusty debugging macros
07432c0ef6 fix subtle refcnt bug
5ae34bfd0b Don't reference removed files in Makefile
ecde781dd1 restructured library manual accordiung to functional group
557ed94ebb don't print PLAINTEXT = ...
cfc2f980f6 remove (C) from copyright msg
adb6bf65d1 add input time.sty; don't fiddle with sidemargins
84099363ef version 1.2-proof-3
93487db9bc use {} instead of \ after \copyright
542659bbd0 Use newgetargs instead of getargs. Check if objects are closed in getattr function instead of in each method. Removed functions sbtoa and timetoa. Added functions msftoframe. Added variables that used to be in standard module CD.
ffd6de1049 New documentation on the CD module.
3caad8c291 adapted to new naming; clarify comments somewhat
1b91cdae97 completed nntp docs
e375b3f1e5 use PyMac_Yield() instead of PyMac_Idle()
a4007eb816 added listing of argument types encountered
28aa229fa3 optional mode, bufsize for global function open()
cca8d2bb48 some new material
b022eb54e6 This commit was manufactured by cvs2svn to create tag 'r12beta4'.
7b4d460bdc the usual
795a48cd4e cope with class exceptions
ee6310a4de moved some stuff to Tools; added some descriptions
fefbbe5085 fix bogus hasttr usage
2e0d2dd23a fix typo in electric colon
684ed9891b remove unused code for tp_call
aaec403a75 added index entries for __*__ identifiers
3aca2a1f1c (py-electric-colon): use a save-excursion instead of a progn in indentation calculation test.
cc8914fb22 fix comment about exit()
903abee9c4 fix typo in tag_nextrange
b92112da0e yet a better introduction
f1245a8291 adapted to modern times; added section of HTML
73827c6efe use macros more; added some more docs
86cb0928e3 added nodename macro calls for new very long section names
e56db434a9 first cut at the whole quickdraw.h header file ...
86c3af7d12 moved OpenDeskAcc here
f23e0fe3be micro change
7e9394ab97 add TkVersion,TclVersion; don't drop in debugger
470be14c8a mass changes; fix titles; add examples; correct typos; clarifications;  unified style; etc.
7760cdea81 recognize more latex commands; add obindex
e83e380930 added lots of comments
8e6b1aad21 add (c) symbol
46965bca6a new date and version
4dd6b84e5f added table of precedences
55dd113bc8 forget about html.sty
14ece169ab Added some (method) casts.
385e7c6919 implement exit_thread through SystemExit exception
fbd30e9159 added firstkey(), nextkey(), reorganize() methods
13c503e93b default mode="r" and add optional bufsize
27e177d005 fixed up comments describing interface
f4b012a9e0 use PyCallable_Check; split some lines
4f17e3e2f9 test signal module
a54754719d made palatable for latex2html: removed $math$, added braces to \item[\tt...]
a521c1b751 Barry's 2.18 -- don't indent, only outdent
2ed5354792 Barry's 2.16 -- more electric colon cruft, add py-outdent-left and py_indent-right
d97cc37489 barry's 2.13 -- minor reworking of code (added py-outdent-p)
d865bc5984 #(py-electric-colon): updated comment
a6a714eb3b (py-electric-colon): don't indent, only outdent.
1a6c82f1e6 (py-indent-right, py-outdent-left): new commands, bound to C-c C-r and C-c C-l respectively.
00198bef6a 1995 copyright
d983cde886 change of address and date
1133aec893 versions and dates
b819bdfe83 handle a few new things
26a9d37e5c new, from ../Demo/www
47b4c0fb35 replace ASCII by macro call
9b623b3d63 (py-electric-colon): don't re-indent the line if it starts in column zero
464c94af2a (py-no-outdent-re): fixed the regexp for try: clauses
3874a3d7ef (py-outdent-p): new function
1c1fbf817e Barry's 2.12 -- fix some bugs in electric colon code
1d5645d727 Barry's version 2.11 -- electric colon
4f009fb092 (py-no-outdent-re): new constant
b5e0ecbd33 (py-submit-bug-report): fixed summary querying
4c7fa4b774 set mac path separator to newline
8c1688e132 add dummy base to atoi/atol; careful about negative start indices in find/count
55d2f3997e rename copy.Error to copy.error
030afb1d3a add execvpe -- mix of execvp and execve
dcce73af48 fix typos in escape() and print_form()
0012c1ec74 (py-outdent-re): new constant
b86bbada37 #(py-indent-line): cosmetic
b91b743476 (py-electric-colon): new command
0c891ce61a pickle classes; add format_version, load(s)/dump(s) shortcuts
cc08112ff4 tiny additions for Windows 3.1
6b14491bb4 mode and optional bufsize for makefile()
b045afc711 plugged some memory leaks (Steve Clift)
e333d167fe 1995 copyright
a44823b776 In NT, write fatal() msg to debugging device
5049bcb164 another round (sigh :-( )
6bb1adc7ee small changes by Soren Larsen
a8a8d4aadd removed GPL mumbo jumbo
deaa1054fa Lots of formatting changes by Barry, and a few real changes.
cfec359016 #updated copywrite notice by removing the GPL language according to #Guido's request.
6f4f5f7892 some more changes for NT and Borland
caffcdfc8c moved some stuff around for fewer confusion
06d511ddf5 added PyErr_SetInterrupt(); NT ifdefs
575d561c65 added PyErr_SetInterrupt()
e23e1fbaa6 moved bgen to Tools
2cc9b2b5b4 why not commit the bug list and ChangeLog
7a84c5a354 pseudo progress bar (not finished)
7aa87cc5b3 added morse library (not finished yet)
b7a38354f4 added evtedit.py for SystemClick()
227a4232e6 the usual
fc8a01fc5a (py-delete-char): must have 'supersede value for 'delete-selection and 'pedning-delete properties.
1b761a6ef9 cope with triple-quoted strings (says Barry)
04cba5bcec the usual
e109aa71f2 add warning about recompiling myreadline.o; add Tools/
8b131c5f27 the usual
03ad99f09f added test for CC value not matching cache
7849da8631 added PicklingError exception
a320fd308c changes for MPW
b6fe7048e7 add casts to malloc() calls
5fe605889a a few peephole optimizations
8d617a60b1 various tuple related optimizations; remove unused b/w compat code from ceval.c
53e8d44eec changes in NT tests
59461c7052 use PROTO macro around fn prototype
599de5ab9f addet SETTUPLEITEM and added cast to GETTUPLEITEM
65bc7a7bf2 (python-font-lock-keywords): better defaults.
74d9cc5b73 (py-keep-region-active): new function.
c723b75fe3 #(python-font-lock-keywords): paren typo
4f005cf5d6 (python-font-lock-keywords): new variable
850437a932 (py-mode-map): py-mark-block moved to C-c C-m (was C-c C-b). py-submit-bug-report placed on C-c C-b, and py-version placed on C-c C-v.
14af844145 bump to version 2.0 now that I'm taking over
7b0f5681d8 #initial stylistic rewrite
3b0a5cdb23 Initial revision
6c4f003202 changes (suggested) by Soren Larsen
d01c100713 clarified expanding %xx and form for print_form
85c4ff298d added macdnr
ea6e19c3d4 added code objects
3d54de2ab9 clarified code objects
46f2157279 added ref to vars()
124107b2a4 reverse sense of PyMac_Idle test
5510dc23f9 socket.py
50d5e8a23a no longer need to include IN.py or SOCKET.py
687ec1892b changes for MPW
0374771cc7 remove some unused local variables
23f43d1bd2 correct some return values and remove some unused variables
d5f53857dc include macglue.h so we can use HAVE_UNIVERSAL_HEADERS; and correct sens of PyMac_Idle() test.  But should'nt this raise KeyboardInterrupt instead of silently returning?
cfa00ea19a don't use math at all
51b1c1c145 avoid math, don't abort when overflow check fails
1dba24eeca remove redundant backslashes; some cosnetics
7b5430f2e8 raise EOFError when load() hits EOF, instead of KeyError
cd259d0b40 fix several cosmetic things, add buffering to makefile
09b39fad8c moved lots of stuff to Tools/scripts
ed3c791050 moved lots of scripts from Demo/scripts to Tools/scripts
fd218ca865 moved Demo/modulator to Tools/modulator
309e8ac579 moved Demo/freeze to Tools/freeze
5f858801a2 new
b5f9460556 allow safe_import to be called with up to 4 args and check for . in name
f16d5fa46f The final bit of my Mac documentation.
d211220cd2 checkin of Jack's original version
df804f8591 converted docs for Jim Roskind's profiler
f4aac48cc3 minor update
0bf4d892eb add warning about strop
dc46c7f734 small nits and new files
b721ef1d4c Half the mactcp documentation (macdnr still to come)
81b3060b14 en weer twee!
51bbdfb2ff totally rewritten, for new macro set
64f08451c0 Added a missing line
dcb0a9bde8 Yet another one...
ad0ee8369c changes for NT/Borland C
6964f73b85 include mymath.h
d9b6b5c756 Write track artist info if given.
8675115e5f a few typographical changes (e.g. -- => ---) and lots of new stuff in the WWW chapter
e4be9be99a Three down, two to go...
ea39abd56c more stuff
e26c263e71 more stuff
a12ef9433b added WWW sections
7defee7a06 document restriction on group names
8df3637fee changes refs to SO_* symbols
61d34f47c3 added quote and unquote
d6304d09cc added cgi
2120d12265 In interactive mode ask for output file
16df2aa57b Under MW also be more conservative about events to request
7c750e1e09 added html parser and supporting cast
eb9e9d2b2a layout changes; quote & as well
c7acf2a106 handle class exceptions
cebfa70a79 fix stupid bug (db should be dict)
780620f2fd added DictType as alias for DictionaryType
5e38b6fda1 handle class exceptions; added runeval; made runctx obsolete
051ab123b4 make the type a parameter of the  DL_IMPORT macro, for Borland C
0fbec64c56 for BorlandC
464a0a100f for MPW __SC__
07e3a7e781 for MPW __SC__ compiler
caeaafccf7 don't complain about too many args if arg is a dict
ea64dea05f another round
8cebe3815f all bgen modules now work with MWerks
e7134aa0f2 return old value of PyMac_DoYieldEnabled; -1 means do not even check for interrupts
83c434b145 get creator from Owner resource; set attrs
2e1db7756f Update
76efd8e7a1 MAde a few things more orthogonal and did some cleanups: - Applications now have their (minimal) main prrogram in   macapplication.c and the rest of the init code in macglue.c. - A new define, USE_MAC_APPLET_SUPPORT, independent of   USE_MAC_SHARED_LIB - chdir to script directory now done in PyMac_InitApplication.
397c3fb4d7 Added BINA to unknown filetypes (what mw uses)
32b2f8222d Rationalized mwerks config files: they only differ depending on whether there is shared library support. Libraries, applets and applications are distinguished by the sources they include.
585c6dcf88 more fixes by Steve Clift
57836fe998 change in staticforward -- added statichere
4f508cc806 add explicit 0 flags for methodlist
3097c3a87e change ifdefs and fix "%#s" format
edea408f88 changed ifdefs and comments -- more modules are good
e6d9ccc33a change SC ifdef to MPW
8656ad5b30 a few new things
4410d571a8 ported to MPW/SC
7fb1dcc437 added ctb
0437e89041 fix bug in filterproc interface
f74c36c9dc fix bug with volume root
24a45e3c18 ported to MPW, moved main() here
850f44b47c moved main() to macglue.c
7c496ec629 ported to CFM-68K
42a69c8425 real dialogs for warnings etc., copy applet.rsrc template too
f45b53b13c replace %#s with portable solution
4cbb0e3a2d applet to run any script
156380e382 added shared library glue
bcf3b56ea7 also set cur dir for standard get/put file
86b4049b87 Some more modules temp excluded in mwerks, and a comment fix.
3ec804af85 - Added PyMac_GetDirectory call which asks the user to select a   directory. - No __main__ resource found message is now a dialog - Fixes wrt stdio window handling in applets.
77b5828cf0 Always set type to APPL
b2f6a7ec00 Minor bug fix
81f51c74ea Added GetDirectory() method
6fc5aecd53 ported back to Think C
9784295b15 another round...  ported to __SC__
295d171650 explicitly init flags in methodlists
2b7e04a9d9 for __SC__
c388068431 magic number changes of CR/LF are swapped
8c89a6fdc7 use PyMac_GetArgv (in macgetargv.c) for applet inits
dbfb282d2c get argc/argv from AppleEvents
40d94e05b7 added copyright header
d1ef5962d2 explicitly init flags in methodlist
e71d853fc9 hacks for atoi/strtod in __SC__
57128fd367 accept file arguments and loop over files
23c0150b14 The Makefile
6a0fb6e217 fancier version copies template file
a6da03fbbe newer stuff
00effaf688 asdded applet info
1f5c6007fe different MPW notes
9fed183f22 cfm 68k support
c3d1c8e9fc added applet initialization; fewer restrictions on loading modules from resources (+ fix!); macstrerror -> MacOS_StrError
f71a9a9c6e macstrerror -> MacOS-StrError; added applet and cfm-68k support
99d20f618c added imp; forget ctb and math for __SC__ (for now)
eabdbff717 put #undefs insize comments; rationalize MPW support
e5df962958 moved most of it to macglue.c
8bdd33386d changes for CFM-68K mac
e9fbc0992c rename macstrerror to PyMac_StrError; no EINTR test in CW
8a1e8eb62f fix bogus test for negative float
6a75d26622 ported to 68K Mac; changed suffix to .slb
0acd4b6e82 changes for Mac CFM-68K
6b13ba22d9 continue after failing for loop
9e575ff7d8 remove bogus ## in front of gcc __VERSION__
a38a503576 fix comment opener after #endif
5f05eb421a add INADDR_* symbols
3a205f7ea0 hope to fix DEC Alpha gcc problems by declaring ints instead of longs
d9dfaf5a3b fix typo (== for =) in assignment
1d339e8c35 fix bug in try-finally with class exceptions; declare different func pointers for different uses
fe299f9408 add Py_FatalError
b13afdd6f4 added PyObject_IsTrue & PyCallable_Check to object interface
1b2fe8e62b new Makefile and everything
2d54692fcc completely redone
930b36b349 main program for applets
5bc76cdaab add casts for __SC__
8318f2fb8f add __SC__ ifdef
8fbf82b26e bump version, add __version__ back in
8573847a4d Steve Clifts version
256cbd7487 minute comment changes
a8db1df6aa document www interfaces
ed2bad8ef8 added lots of constants
5680b95b15 added list of restrictions
bcc958259a no need to reference doc strings for documented modules
817a842ad2 added www chapters
74162f311f Added support for loading pyc code from a resource.
9c96a923fb Added hooks to support importing pyc code from a resource on the mac.
3cfc8bd841 exec_dode_object/PyImport_ExecCodeObject is now externally visible
d1883588ae added docs for pickle, shelve and copy
e1ff7adbf6 added lots of useful info
4f4c9b42ba make __import__ 4-args
194e57caa6 added chapter on new things in 1.2
3075b326c4 different #ifdefs
872eeebf6d completed aete decoded now that I have the docs
4c14a69ff9 fix version number
a3966e7563 ...
d4837daa8d added some clarifying comments about -lcrypt and Tk 4.0
24c137432c call __import__() with 4 args instead of 1
becdbec806 ported to Think C
e2aaa9dd61 This commit was manufactured by cvs2svn to create tag 'r12beta3'.
ee1813de2a fix stupid bug in strip and split
26a9f7467f Some of Guido's bgen modules aren't think-only anymore
6cfab2346c Changed PyMac_GetPythonDir to use a preferences file to store the alias resource. Also added a few comments.
fc0ff42034 Open library resource file read-only
4e04373073 Added code to import dynamic modules using mac CFM.
f2038a3593 version 1.2-beta-3
af07a44428 the usual
57c33af90e tack compiler name/version to version string if known
67ca701939 NeXT/Sparc 3.3 fix
5693412892 malloc debug only on ppc
e9f29bf4ca remove unused vars
cc9bc8f824 null-terminate the error string in macstrerror
e6c884cadb added QuickDraw
b95ff40e29 adapted to 1.2
42e193605d add class exceptions
38862dfe22 new example that Matt posted to comp.lang.python
c889b760d7 Added RawFSSpec and RawAlias methods which turn their string arguments into fsspec and alias objects.
bd06e96217 mac changes: - Assume files of types 'PYC ' and 'APPL' are compiled python code - For mwerks, show status line when program has terminated while   keeping window open.
7467ce3eea Startup code for applications using the python shared library. Modified because the startup code has to work together with the runtime support in the shared library.
2e4679db8e Glue for the python shared library: an init routine that remembers where we're loaded from and PyMac_AddLibResources() which adds that file to the resource file list.
c6647c6079 Mwerks header files for shared python and the applet template
0f6ca80e71 Use PyMac_GetPythonDir() to obtain python homedir fileargument moved here from macmain.c
f950f8d414 Various changes wrt shared-library python: - Moved fileargument to config.c - Added PyMac_AddLibResources() call in case of shlib python - Build argc/argv differently in case of applet template
8cd2b720f6 Added PyMac_GetPythonDir routine which obtains python home directory from an alias resource (or from the user). Note: this uses a dialog resource so there's an accompanying change in the resource file.
b3642579fd Added getfiletype routine
7f7f274839 use Py_CHARMASK
760dd1031a add some casts
9fa2c11613 use Py_CHARMASK; and don't check for neg. float to the float power here
2497eada60 make size arg signed
2165158ab3 test for float to the float power here
b7d3d4e5d6 make newvarobj's size arg signed
10f8efd87a add Py_CHARMASK
cc6764c1ba added __doc__ strings etc.
6de668f3aa test class exceptions
077793581d version 1.20
a3c3f2c5b0 use PyCallable_Check; export TK_VERSION and TCL_VERSION strings; some Tk 4.0 specific changes
3fdf58b5cc add socket related constants
d1b3481d69 correct typo in utime stub
03e8ffa345 patches for NeXT weirdness
f5c6d47e96 clear errors between failing calls to PyArg_Parse
6b6e0aafe5 DECREF result of run_string
0b3449010e init_frozen non-static, frozenmain.c not in Makefile any more
262e124107 print class name for exceptions that are classes
9e89f0a5b3 added callable, removed run_pyc_file
eb8b0d20c1 added classes as exceptions
626c1e7882 added libsignal.tex
3c3eda2b7b stuff by jack to create a set of Estr resources
81920f1b75 manually defined Resource() function
315592383e more support for different kinds of objects
b19a645b69 more think/mw changes
d9ff26b1a0 reorganized class structure so Manualgenerator works again
4df16c7996 read repair instructions from file
9bcb641ad4 added Resource(), to create new resources from Python
0818a4c152 get rid of obsolete low-level routines
bcf0854b53 added README
b6aa92ebf1 fix formatting of stack entries
08e767bdc5 Under CodeWarrior, make the window go away on exit(0)
971e1df3df Quick hack so PowerPC macs can access system structures
c76fd39587 Added stuff so CodeWarrior isn't so verbose about its stdio windows
a76382a6ac Added HandleEvent method to macos, so python programs can hand back events they don't want to handle to stdio
8828fcf738 Added [GS]etCreatorType methods to FSSpec objects
992ff06e98 Made play method more robust by adding a try-finally.
3d697ce447 Support for album.notes and trackN.artist via notes and trackartist instance variables.
d09b41bf05 remove last bits of mac specific code
a715299a14 remove unused variable
90f0e07a5b fix glaring bug in get_magic
42a5124101 Think C mod to suppress pausing at normal exit
d503913594 plug leak and improve error handling in dbm_keys()
17448e2408 Committed a more or less working version.
80ffd6683c bgenGeneratorGroup.py: changed placement of some blank lines in output bgenObjectDefinition.py: support chaining of object definitions macsupport.py: support functions returning pointers to existing windows/dialogs bgen.py: tighten rules for recognizing simple symbol definitions
cc0d879069 added <OSEvents.h> for Think C
b2f524ae44 fixed StandardGetFile argument handling
d56c109272 Changed the way mac mainloop event checking is turned off
ee23d6ec87 - Moved interrupt code to macglue.c - Added possibility to turn off mainloop event handling - Check interrupts even when not handling events - Be more carefulabout which events we want - Use different method to determine fg/bg
9fc3989c66 Mac interrupt code moved to macglue.c
7e4b2def34 changes for the Mac
f808012f5e Use case-dependent variant of fnmatch
c2ed415a1b removed frozenmain.o from objects added to library
a46d51d9a4 round up list item counts to improve realloc performance
6978503235 added findmethodinchain and methodchain data types
5279ec683a reverse h/v in Point and Rect
efd9767f56 added (method) casts and 1995 copyright
3d7f6bd3b7 Added a global 'stdwin is active' flag.
fdbc79e779 Prototypes for new routines.
e8e8ae0f2c Added eventhandling in mainloop/busywait routine plus leaving some cycles for background apps. MacOS has a new method to set the amount of time for bg apps.
9eeb82dde1 CodeWarrior 5 has more unixisms (open/close/read/write)
17ba43f1e4 Complete rewrite.
51f4b8dc78 New cmd-. handling for the mac.
da88dadabd the usual
ea8ee1dfc5 fix bogus test for regex match
71001e4355 add OSF/1 LDSHARED; add IRIX5 conditional for sockets
0de81bfec9 don't dictclear deleted modules in doneimport
8bf7c484c1 allow classes as exceptions
8ae87c0489 make call_pyc_file static
164d4ff0e5 added missing case to get_docstring
a6f6050229 moved callable() to object.c
e95d92b65e removed unused vars
27e916fd35 apply dictclear to dict of deleted modules
49b11fed70 move callable() here
f8803dd6c3 uname 64-bit fix
39cb5ce85d unused vars
1253960407 mem leak
c9a3569416 split PATH over multiple lines for clarity; added some generated modules
bf068b1505 Got rid of the Resource and Sound interfaces, in favor of the ones generated from the header files (with some hand-holding :-).
cf27c2d541 Some layout changes; added EventRecord Get/Build functions (as a tuple).
01f5a81d11 Lots of new stuff again.  Moved buffer types to some separate files. Added some new-fangled features to bgenOutput.  Generate doc strings!
5679e56bd1 ported CW5 changes back to Think
c2544b3788 fixed comment
b7e79e5f94 Got rid of {Get,Set}FileType in favor of {Get,Set}CreatorAndType -- the former had their arguments reversed compared to all Apple's routines (e.g. FSpOpenResFile()).
c02311ba53 added printf -- hack for Think C to init stdwin and stdio
d8373d82fe added Res module
b340466af9 cosmetics: copyright, comments
f8de0685c9 Lots of changes. Renamed some things. Added support for methods directly to bgenGenerator.py. Completely reworked buffer, string and and structure types.
7cbf4803a9 Make malloc stats routine available under MetroWerks
673e142e00 Ported to CW5/new universal headers
a1c5602a7a Removed imgformat reference
860dc048ca Ported to CW5 (or to new Universal Headers, actually)
2fc94eecb2 - Ported to CW5 (which has more unixisms) - Added (rather crummy) malloc debugger
6bb347fc1c The last missing file of the mwerks port (this is the 'prefix' file)
f2e5129820 reallocing large blocks now doesn't copy if not needed
8239f0ffa0 fix leaks
62de97f29c make routines static
27fda28973 cleanup
811fbbc4ce create $(DESTSHARED) library if needed
ec25b91ba3 rename sigcheck so signal handling works again
64fc649095 don't overwrite error already set (e.g. from O&)
9aa3d1370e renamed Get routines to PyMac_Get; added macfs to config.c
796b259a1c intermediate version -- why not...
ec4982761b fix strncpy call (uninitialized memory read)
badadd2165 typo
e9c6bcd813 fix leak in func_dealloc (forgot to decref name)
40b261966a removed getopt.o from OBJS
3952cb0725 fix mem leak (localmap in optimize)
d1b9393ba5  support "O&" taking an object constructor  a void*
1919ca7b28 add missing INCREF in RAISE_EXCEPTION
10bb1c46f1 don't use function prototypes
46c76a6c66 added changes for NetBSD dynamic linking; removed shared linking for NeXT
7f9fa97ca2 fix import related leaks
855d0b3602 corrected two unconverted names
6403d284b0 define INSTALL_PROGRAM and INSTALL_DATA
5739e7ec1f modernize all tests to use cache and report outcome
9bc247a915 change NeXT hint to add -posix to C compiler flags
7d47329656 add INSTALL_PROGRAM and INSTALL_DATA; check for getopt
40b9835e98 Always use 'anonymous' if os.environ doesn't exist
c39f4f8968 Yet another Pstring()
5ef86d55b5 Undef strerror on the mac before redefining it
febf811a2d Added mac-only intrpeek routine that peeks for command-.
7874d1fe7e Fix NULL dereference in case of out-of-memory condition
f90a113176 Fixed listen()/getsockname() bug
a42960cd09 ported to THINK C (not tested yet)
6a5df90918 ported Jacks changes back to think C
f74d4e2a0e added high level event interface (requires stdwin patch)
8f69179f97 modernized/rationalized, added PyMac_BuildOSType
8d6c180c8d fully adapted to new naming scheme and added some features for AppleEvent generation
8cfc4bfb9d initial version
84fa5ecfff Initial version of FSSpec and Alias code. Non-functional as of now.
d50e4e1c54 More Pstring() stuff and some cosmetics
48d071d302 Comment fix
67132b3de7 Some of these were overwriting their argument with a pascal string. Use own Pstring() routine (which uses a static buffer) everywhere.
5f653091d1 - Moved some useful routines from macosmodule.c here - Added GetFSSpec (tuple-style), BuildFSSpec and Pstring   (platform-independent correct conversion of C to Pascal strings)
9589e93491 Moved some generally useful routines to macglue.c
75b6f1c8e5 - Ported to powerpc - Fixed bug with accept() call - Better error checking
fa4fd8ef4f Fast (and correct) malloc for MetroWerks PPC compiler
fbfacf6d1f Macconsole module is think-specific
31f61dddfa Moved development-platform specific files to subdirectories
6520119700 This commit was manufactured by cvs2svn to create tag 'r12beta2'.
514d351d45 use $INCLUDE path (Mark Hammond)
3256e87dbc *** empty log message ***
5426ab33d9 1.2beta news
58e4a1e0cb last bits
97d68c03bc added getopt.c to object, permanently
0ddb028444 the usual
d09119e889 be more careful about building Modules/Makefile.pre
19e0c26e6f add hint for NeXT users
f618d2ccc2 hopefully final changes for Sequent -linet
32b582b953 fix strobject() behavior
b0fe3a9312 added reverselist; free recycling bin on error exit
3535f6e0a1 long_scan is no longer used
ce00509702 make a few things static
4d3468deab don't declare fmod/pow for any STDC compiler
5c2306c44f include rename2.h
2ac3bc2c05 rename method arg because of typedef conflict
0865dd9ce9 fix Alpha bug in (x)range; different __builtins__ initialization
c3f82b6b8a nt thread support
b4e7e25fe6 different init for __builtins__
cd938fc5a1 Made some more things static, and other cleanup for new naming scheme
78c0535a22 fix loop on unterminated triple quotes
62e376b164 made interrupted static again
087579ea51 added $& to $(LIB) target for Sequent
938178283c new names for lots of new functions
8e8a525f22 evolution
5c83252be4 must include rename2.h
ae7bf1a5e7 fix reentrancy bug in slice assignment
ba0b6aeda6 This commit was manufactured by cvs2svn to create tag 'r12beta1'.
4f9181ee0b improve treatment of multi-line replies, ignore empty lines
1134991fb1 typo
ee24811042 Invent Message-ID header if none is present
7f49b7a1a4 cosmetics/typos
28379703dc optional bufsize arg for popen and fdopen
fffb8bb526 rename2 changes
9a22de101f new files
8d2080d043 use getattr() instead of eval(), fix string representations
fb00a99e6c run config.status after recheck
79dddcbd13 the usual
d626da8ace removed refs to --with-svr4, add --without-gcc
17ac14de9e try to improve svr4 socket library inquiries
caa6380886 The great renaming, phase two: all header files have been updated to use the new names exclusively, and the linker will see the new names. Files that import "Python.h" also only see the new names.  Files that import "allobjects.h" will continue to be able to use the old names, due to the inclusion (in allobjects.h) of "rename2.h".
94390ec2a6 use getbuiltins() everywhere, it defaults to getbuiltidict()
922d8ff803 Include rename2.h
a3c04b003f cosmetics
b9418686ba rearrange declarations somewhat
20566845c6 properly implement cmp() for class instances
a597dde3f1 cosmetic changes so these modules will work with the strict new naming scheme
6c1874fc2b changes for C++ (Tim MacKenzie)
062cfb0c4e added interface to Tk_DoOneEvent (R Lindsay Todd)
58b6873f6b fix subtle refcount big in filter() -- Tim MacKenzie
630112ed04 demonstrate shell in a Tk window
b8fe9b3fc8 menu-simple.py: fixed lay-out bind-with-multiple-calls-per-event-type.py: new, or forgot to add earlier
d0c063361f Improved explanation of what's here
dfa70a9fbc initial checkin of www Tk examples
ca9b323c52 better test for existence of hstrerror()
a6a1e536ac added bufsize parameter to fdopen and popen
5524a59b09 move coerce() from bltinmodule.c to object.c and implement builtin_coerce() differently
879c581826 implement coercions involving instances properly
c206c766dd fix memory leak and null pointer dereference
946805d418 new module
9c51e41201 sys.setcheckinterval(x) instead of sys.check_interval = x
f860162093 updated eval(), added execfile()
4ff90ad2a0 some belated updates
84eaa8396e fix globals/locals defaults for eval/execfile
10393b1708 add restrictions in restricted mode
c113482871 add builtins handling and restricted flag
be9f212f7e fix comments for list command
1f97612e64 Fix exec test so presence of __builtins__ doesn't break it
409780f8f2 shallow and deep copy operations
a48061a580 shelve.py: database of persistent objects, on top of pickle.py and anydbm.py pickle.py: new low-level persistency module (used to be called flatten) dbmac.py: stupid dbm clone for the Mac anydbm.py: generic dbm interface (should be extended to support gdbm)
8a30adc33f the usual
6135a87f2b __builtins__ mods (and sys_checkinterval for ceval.c)
2565bff40a Alpha OSF/1 fix
37431fbbd0 initmodule3 -> initmodule3
970a0a20b8 api version checking
6da5bfad0f remove nogus reload check
a0d7a23398 sys.check_interval=x -> sys.setcheckinterval(x)
e791c2e441 Used new getargs interface; added {Get,Set}FileInfo.
99546997f6 1995 copyright
50620fa9b8 New newmethodobject() interface takes struct methodlist pointer instead of individual components; initmodule3() now has doc string argument as well
1f4fa50176 Two independent chages: (a) support import NAME.NAME...NAME; (b) support doc strings in modules, classes and function definitions
06186519e5 Use new instancebinop interface
6a00cd8b89 	* Python/bltinmodule.c: restructured coerce(), divmod(), pow() to 	use new instancebinop interface
a10f512dba Grammar changed
5fb1da76ff NT dlls have .pyd extension instead of .dll
e7d444f785 	* Objects/classobject.c: added 5th (function) parameter to 	instancebinop, to support things like Rational * float; added 	documentation strings to classes and methods
cab650db8e 	* Objects/methodobject.c: changed drastically, the object now 	contains a pointer to the struct methodlist (which must be 	static); added attributes __name__, __doc__ and __self__
5bd3805ae9 Added __doc__ attribute (alias func_doc), initialized from first constant in code object if it is a string, else None
8b14b4c733 initialize __doc__ to None
29ca26eebf added getattr(), supporting __doc__ and _name__
016564ab51 attribute-less object is AttributeError, not TypeError
5e56997969 initmodule2 -> initmodule3 (with doc string)
f9888eb2fb totally revamped
9558825dad do not call newmethodobject directly
3615aaf6c5 Changed since Grammar has changed
7a01389bc7 add 5th arg to instancebinop
0908bacfa5 added func_doc
9dc8d0e0a3 added ml_doc and changed newmethodlist interface
6fde390655 new tp_str and tp_doc members in type object
4a1da26891 changed import to support NAME.NAME...NAME
03d4c260e3 New file -- creates FAQ.html.
227a0a1e2d Added 1995 to copyright message; added a few people to acks again...
f456b6d691 Moved 1.1 and 1.1.1 news here
e1130a49cd Added clarifying comment
06ed202ef4 sys.stderr(...) should be sys.stderr.write(), of course
31cce97374 copyright.tex: Add 1995 to copyright message. lib.tex: add libimp; remove bogus warning about lineii. libmath.tex: document hypot(). libmd5.tex: rename md5.md5() to md5.new(). libposix.tex: document chown(). libposixfile.tex: openfile() instead of fileopen(). libsocket.tex: document gethostbyaddr(). libtypes.tex: add footnote explaining why readline() keeps the newline. ref3.tex: correct typos, add back*quotes to index. ref4.tex: don't use \verb inside footnote. ref5.tex: explain repr() and str() and add them + back*quotes to index. ref6.tex: correct typo, don't use \verb in footnote. ref7.tex: don't use \verb in footnote.
e5f8b60429 spam -> foo (etc.) in examples
6d023c98b0 Added 1995 to copyright message. bltinmodule.c: fixed coerce() nightmare in ternary pow(). modsupport.c (initmodule2): pass METH_FREENAME flag to newmethodobject(). pythonrun.c: move flushline() into and around print_error().
524b588553 Added 1995 to copyright message. Setup.in: clarified Tk comments somewhat. structmodule.c: use memcpy() instead of double precision assignment.
b9f8d6e54d Added 1995 to copyright message.
6610ad9d6b Added 1995 to copyright message. floatobject.c: fix hash(). methodobject.c: support METH_FREENAME flag bit.
5799b52008 Added 1995 copyright. object.h: made sizes and refcnts signed ints. stringobject.h: make getstrsize() signed int. methodobject.h: add METH_VARARGS and METH_FREENAME flag bit definitions.
af5b83ec4a README: changed URL format to <URL:...>; added section on Tk. Makefile.in: run config.status in "make recheck". configure.in: add test for hypot(). config.h.in, configure: since configure.in changed. rest: the usual boring stuff.
efc8713428 	* Objects/mappingobject.c (mappingremove): don't call 	lookmapping() for empty dictionary
3bbc62e9c2 Another bulky set of minor changes. Note addition of gethostbyaddr() and improved repr() for sockets, renaming of md5.md5() to md5.new(), and fixing of leaks in threads.
437a0e60ba Think 6.0 version
d7047b395e Lots of minor changes.  Note for mappingobject.c: the hash table pointer can now be NULL.
1ae940a587 Lots of changes, most minor (fatal() instead of abort(), use of err_fetch/err_restore and so on).  But... NOTE: import.c has been rewritten and all the DL stuff is now in the new file importdl.c.
824de25fe2 	* Lib/test/test_b1.py: test eval() and execfile() with globals, 	locals arguments
40b2cfb3f3 	* Lib/mhlib.py: added movemessage(), copymessage(), added copy 	fallback for refilemessages(), and updated the docs
76be6eda96 The usual changes when a release is nearing...
a6c707c679 Posted as 1.18
a1124700f8 Add hacks for switching protocol and path but leaving host unchanged
eecf035aa2 Test new __import__ module, test reload of built-in module, test has_key() on empty dictionary
5505d56f08 Fixed 'propagate' method
588633daa2 Parser/tokenizer.c (tok_nextc): zap tok->buf after freeing; rest: abort() -> fatal(); small things
66cb311fba Lots of small things, see ChangeLog
31b7727bad Ported the editor to X.  The GL version won't work. This version needs Jack's img module and Sjoerd's new and improved (?) X extensions for Python.
3ff444992f (py-compute-indentation): in `t' clause, watch for the re-search-backwards landing you inside a mult-line string.
06fe7e5c2c Added comment symbols around word after #endif.
4359860517 Let extensions start at the last period after the last slash in the name.
1cfb6b8992 Can't remember the reason for the change, but it was necessary.  :-)
1dfb7d74a5 Added libaifc.tex to list of library files.
0c637709ad Ported to CodeWarrior
f93c72a4b0 New routines: macstrerror - strerror which uses 'Estr' resource to convert numerical 	MacOS errors to strings. PyErr_Mac - Raise exception with MacOS error in string form. PyMac_Idle - better idle-loop routine, which allows the user to 	switch applications.
34e7cae663 Unix functionality expected by python but missing from CodeWarrior runtime system.
97ce361c2c - Use PyErr_Mac for nicer exceptions - Added methods AsString() and AsBytes() to resource objects, so you   can get at the contents of resource items. - Ported to CodeWarrior (mainly ProcPtr/UniversalProcPtr stuff)
0c097eab57 Ported to MetroWerks, which misses file-descriptor like functionality.
bac428d2e0 Enlarged version buffer (nobody expects the spanish inquisition:-)
c5b26f4a05 - PYTHONPATH is now \n-separated, so you can have directories with   spaces in the name. - If you run python with a script the working directory is now the   directory where the script lives (was: directory where python   application lives). sys.path will include current dir, application   dir and Lib, etc. relative to application dir. This is more like   unix python does things and more useful besides (since you can   easily import files living in the same directory as the importer). - Added the macconsole, ctb, macspeech, macdnr and mactcp modules. - For MW compiler, put 68K/PPC indication in version string.
fea75336aa Added support for MetroWerks CodeWarrior compiler
edf585579c Interface to MacTCP and the MacTCP Domain Name Resolver
114ca5c170 - Added Version method - Now gives new mac exceptions - Ported to PowerPC Mac and CodeWarrior
ee735be06a Interface to Mac Communications Toolbox (only Connection Manager for now)
115590d22f This file (which is Guido's) was somehow missing...
0d7cba86a6 New standard modules for the mac.
599f0d1c2c - Added ability to get at strings embedded in the struct - For the mac, added ability to get at pascal-style strings
e00637bdcf Removed extraneous fclose() in case of .pyc file argument
234fd7e4bb Use \n as PYTHONPATH delimiter on Mac (less likely to occur in filenames than space).
44fff3cfb5 Added missing initialization
8fd2d94e37 Added hook for better mac error messages.
7ae7768890 Initial revision
52c8b26454 Use /depot/gnu/plat/bin/perl
7c7fa46d20 This commit was manufactured by cvs2svn to create tag 'release111'.
5dee5e7dc0 bugfix release
635649f90f next release
cfb45e476e typos
9351fdb011 misc stuff
d57021eaeb workshop attendees etc
a67bb7ea98 python-mode-hook instead of py-mode-hook
f34cadda28 added timer and file callbacks and global mainloop and quit fns
5e8e8327f8 don't use backslashes for continuation lines
132f5c2d77 don't fail moving empty list of shared modules
69d9eb9f56 replace abort() calls by fatal()
363ac7d5b6 set name to <lambda> instead of None for lambdas
13d0ed13c3 prevent core dump for old getargs() with NULL arg
c054a663eb call err_clear in err_setval
030ae17582 fix pow() core dump
bb3c5f7406 fix comparison of instances without _-cmp__
f483846386 pl1.1.1; added newgetargs renaming
a558e37eb4 improved prompt format
e23b62f288 more complete tests of built-in functions
40272f812b Removed erroneous +. (Patched manually since configure.in not yet ported to autoconf 2.0.)
47f7c71549 Removed erroneous +.
8eee56f0ae the usual
9444ce0b41 the usual
2bcafeb645 test for presence of stddef.h separate arg requirements for getpgrp() and setpgrp()
904127924e run sharedinstall; add BINDIR macros etc
5ebc0cad57 include stddef.h
780044f27a added option interface
971dc53f0e fix bug in poly.minus
05bf280d47 clarifications
e6757c2cd4 don't assum '.' is in PATH
411a8bd799 add hypot()
2ce15a59f7 always make sharedmods
89910656d1 makesetup should use $cc not cc
6493389a8c distinguish between getpgrp and setpgrp arg requirements
b9a6d12498 Comparison of two class instances without __cmp__ or __rcmp__ methods was broken.
2abc49458b Free was called with a struct as argument instead of a field from the struct.
4eba0c9b91 Escaped $(LDSHARED) in a string.
c94d53db0e This commit was manufactured by cvs2svn to create tag 'release11'.
7647b826c8 really the last log entry for 1.1
dd99fd2133 change date to 11 oct
42a24ef2d7 add getargs.o:getargs.c rule
ac5a4e39ca add hints about doco
dabb11b2a2 add test for volatile
6b111b0aef remove old readline note, add smake note
4450bab750 update pathnames
1146c8736a final release date of release 1.1 is Oct 11
73624e9c3b new style
4a91df41be apply ranoib to installed libraries
e5e73b96e1 initial commit
29c1b97d28 __call__, __getattr__ c.s.
2e61103c0b adapted to new overloading scheme
74233b34e1 fix buffer size
705d517e3f initial checkin
3dc44aba71 add debug, use waitpid
82268e078d initial checkin
00d59746f6 fix bind arg
37f142d1d1 add setdefscrollbars call
6910f42d23 new version by Tim
81a12bceb6 totally redone for new overloading scheme
72eb83ca25 add warning about ultrix cc
33325f439d Vgeneric -- used in frozen version
05fc9cea5d print gl variables
fa78560d6e test cache
fc146cb9e0 init -> __init__
50519c6190 micro changes
46e4b07a81 moved my examples to subdir guido
35820f77e4 Matt's examples
884657af49 Added Matt's examples
aa25386fc2 Moved older news to HISTORY file
94ed6f5f63 Oops!  version numbers again!
8780a44f2c Oops -- version number!
2b11c613d3 Change status of fixed bugs
b85ae1aa65 Hopefully the last edits for 1.1
c3706076ee Add pointer to GPL-free MP library
061f182a16 For release 1.1
e1f17b593d Only require autoconf 1.8
ac97fd7fc8 Micro portability changes
9702c4bde0 changed script interpreter
0c57abb7ce Removed this module (will be distributed with Jack's package)
29766b2da6 Add simpler __getattr__ example and document __call__
9fd48ab27e Added missing \end{datadesc}.
ca3f6c8c01 Removed description of class.init() method. Added news about new operator overloading and __getattr__ etc.
16cd7f9f12 Moved author and date to boilerplate.tex. Added copyright.tex to all files. Added descr of check_interval to libsys.tex. Corrected lotsa typos in tut.tex (thanks to George M. Sipe). Corrected mktuple (should be newtupleobject) example in ext.tex.
d8336c2286 Lots of things added.  README written (mostly).
ca9321e6d0 Import posixpath for freeze script
e8a1e8cef3 Fix getpythonpath() fix; never #include frozen.c.
6e890b86a8 Save static pointer to malloc'ed buffer
a44031031c Plug memory leak for code objects
07c9645413 Get rid of freeze (now its own directory). Added some new demos.  Fixed a few others.
011813444c Don't search for *.so modules since we can't handle them!
619e1beda9 Add check for unknown modules
00ff4336a9 Totally new "freeze" program.
dbaf332107 Jack's last version (now I'm supposed to get it working :-)
ebea896e20 Ignore empty markers.
3a80c8defe Add files by Jack
950d47fd67 Make it work under MPW too.
cd57dc3a98 Added documentation on the aifc module.
457c0ab366 Fix bug in formatting of new questions
e5f6f45a99 Got rid of history (was beginning to get silly). Removed a few diagram breaks since Kees' program is now cleverer
adc940eabf Cosmetic changes
e433c974bc config.c: add MacOS module macosmodule.c: lots of updates (though playing sound can still hang :-( )
14ed0b2cd3 	* Modules/xxmodule.c: integrated with xxobject.c by Jack
180d7b4d55 	* Python/ceval.c, Include/ceval.h: promote MakePendingCalls to 	global: Py_MakePendingCalls.  Also guard against recursive calls
fe3f1a256b 	* Python/{modsupport.c,getargs.c,Makefile.in}, 	Include/modsupport.h: moved getargs() to its own file and 	re-implemented it entirely to support optional arguments, multiple 	arguments without surrounding parentheses 	(when called as newgetargs()), and better error messages
6989e54ebf 	* Python/errors.c (err_clear): clear interpreter stack trace
83dd6c319e 	* Python/pythonrun.c: add string "Python" to fatal error message
a66e25dfa3 	* Python/pythonmain.c: fatal error if can't alloc mem for -c 	string
bfd5d755a0 	* Python/traceback.c: security fix -- check for buffer oveflow 	before concatenating sys.path item and module name
03093a248d 	* Include/classobject.h, Objects/classobject.c, Python/ceval.c: 	entirely redone operator overloading.  The rules for class 	instances are now much more relaxed than for other built-in types 	(whose coerce must still return two objects of the same type)
2929527aed 	* Parser/intrcheck.c: make 'interrupted' global (forgot for 	whom...)
c5d92e1271 ceval.h: added Py_MakePendingCalls() classobject.h: added instancebinop() modsupport.h: added newgetargs() rename1.h: removed Py_FPROTO
6c849697fd Fix various potential buffer overrun problems.
138d72f64b point perl to ~/bin/perl
b34e8aa60a New version: 1.14 (previous oine was misnumbered 1.12). Lots of new questions about everything.
c24da7cbbc Added obfuxcated lambda's by Ulf Bertelt
be9f149574 Various layout changes; some extra warnings; for IRIX, IRIX 5 is the default.
cc1b8d5030 Specified libraries for flmodule.
fa59e83813 Fix bug if tmpcache is None
798199d8a6 	* Python/pythonrun.c (print_error): print only last line of 	multi-line source line
1a817c0911 	* Parser/tokenizer.c (tok_nextc): count line numbers when parsing         strings
df1c4ee503 Support user routines (callbacks) on sound channels.
bc0ba01001 Added some files, reformatted some paragraphs.
31e7642340 Added some more files to Mac-Makefile (not tested!); finishing touch to README.MPW.
e174c1500f audiodev.py: Mac port. Audio_mac.py: Mac specific class for audiodev.py. aifc.py: open files for reading/writing in binary mode ('rb', 'wb').
2d16703d65 gestaltmodule.c: interface to Gestalt Manager. macosmodule.c: interface to random collection of Managers. macsetfiletype.c: set file type, for import.c.
bf677edc45 Put a comment start symbol at the start of a comment that lacked one.
14421777fc Some new files...
14a6e3d5e8 	* Lib/whrandom.py: if seed is (0,0,0), initialize from current 	time; default seed's arguments to (0,0,0)
602099a756 	* various modules: #include "Python.h" and remove most remporary 	renaming hacks
a96720907a 	* Python/ceval.c (eval_code): added registry of pending functions 	(to be used by functions that are called asynchronously, like 	UNIX signal handlers or Mac I/O completion routines)
fdef271550 	* Import/pythonrun.h, Python/{import,pythonrun}.c, 	mac/macsetfiletype.c: changes by Jack to execute .pyc file passed 	as command line argument.  On the Mac .pyc files are given a 	special type so they can be double-clicked
956640880d pythonrun.h: added run_pyc_file ceval.h: added Py_AddPendingCall rest: modules using the new naming scheme must now include Python.h
f5e0ea89db 	* Modules/Setup.in: define PYTHONPATH using COREPYTHONPATH for 	extensions; add -lm to math module definition
73737abead If an argument on a Setup line starts with `$', treat it as a library, but only if it does not end in a known suffix.
0a516c99dd The usual junk
ac405f6c4e Shared library support
7cc5abd454 Support shared library creation.
9adae8e182 Steen Lumholt's termios interface.
43021932bc Added _getpty interface.
ae311bd503 Mods for HP-UX dynamic loading.
73b20df99e Added TERMIOS module
23cb2a83a5 New tty/pty modules by Steen; new urlparser.
c0af2aafeb Add'l notes by Guido
6522eb0400 	* Parser/grammar1.c (finddfa): massive speed up by using direct 	addressing instead of searching
853474194f mhlib.py: delay opening of sequences file so we don't overwrite it when putsequences is called with a bad argument rfc822.py: better handling of dates with no or bad timezones uu.py: contributed by Lance -- uu{en,de}code
91951481b8 added Tommy Burnette's setblocking() method
1662dd5a3d added Py_AtExit() -- register cleanup functions for C modules
9776adf565 rearranged code in debugging version of DELREF to avoid touching data after it has been freed.
c6cf1dd317 pythgonrun.h: added Py_AtExit().
e4485b064d Setup.in: added tkinter; rearranged the definition of PYTHONPATH so that the module-specific components are in the section for that module.
a142613678 Added minmax function.
e202c38d76 Can now also give a hashed ID to Cddb.
1f05754640 Added support for ADPCM compression.
03a909628b Define cl_{get,set,del}attr members in classobject
524f146c01 Added mboxconvert.py
52ca98a390 Yet another version (by me) of __getattr__ etc.
e773754ae5 Mods (really diffs to 2.29) by Michael Scharf for alternative __getattr__ etc.
56bf235d4c Lance's release 1.1 -- fixes some problems with 1.0
fbea2f3e7c Release 1.0 by Lance
7522f030ee Makefile.in: run compileall on installed library; rest: the usual
e4ab6475f1 * Python/getmtime.c: Remove mac specifics (Mac subdirectory has its own version now) * Python/bltinmodule.c (builtin_tuple): use pre-existing listtuple(v) for lists
f6971e2958 Lance has converted his modules to the new naming conventions, and contributed a curses interface. Setup.in uses .c instead of .o now.
0c4071e69f FAQ: Added lambda stress test by Ulf ACKS: Added Ulf README: fix typo
f023ab0471 Dialog.py: d.num should be numeric, not string Tkinter.py: on destroy(), remove self from master's dict of children
c1be9d59e4 	* Doc/tut.tex (subsection{Lambda Forms}): fix typo in lambda 	example
275b0a44d5 Description of what's here
9717991b78 Merge back to main trunk
224b289efa 	* Modules/makesetup: bugfix: add objects from sources to OBJS
1d5735e846 Merge back to main trunk
013142a95f fix nasty bug in resizing (formatstring)
e59214ed91 call_object: print message before abort()
b078ce10d4 Move #endif for NT
74e6a118ca         * Python/import.c: support *.o/*.so as alternative for         *module.o/*module.so
14144fcdfd Added delattr()
cae027b298         * Python/bltinmodule.c: added tuple() builtin
df05ac6dfb         Python/bltinmodule.c: mods by Andrew Kuchling to implement         pow(x,y,z) == pow(x,y)%z, but without incurring overflow
2d9518585c         * Python/bltinmodule.c (builtin_vars): correct typo in error msg
a110aa658b         * Python/pythonrun.c (print_error): added INCREF/DECREF pair --         the exception returned by a syntax error (when reported) would         contain an object with refcnt zero! MPW changes
bf8c0e336f mods by Andrew Kuchling to implement         pow(x,y,z) == pow(x,y)%z, but without incurring overflow Correct problems found by THINK C 6.0
eb1fafcec1 New patches by Andrew to fix various problems Add cast for Lance
6cd2fe043b Correct problems found by THINK C 6.0
f4b1a64a21         * Parser/tokenizer.c: backup over illegal newline in string         literal (for "completeness" test)
bd0389d5fd don't call strncpy(str, NULL, 0)
4ca6c9db81         * Python/compile.c (com_argdefs, com_arglist): avoid referencing         CHILD(n,i) for i >= NCH(n)
3a24181837 err_clear: clear interpreter stack trace
13836d9e6d add function name to traceback info MPW fixes
d2002c79f0 Added PyArg_NoArgs(v)
ff18df0eb3 For THINK C 6.0
3bb5448767 New way of generating .pyc files, thanks to Sjoerd. urllib.py: '+' is not always safe (even though the RFC says so :-( ) whrandom.py: throw away top bits of time to avoid overflow on Mac (where times can be negative)
7b1e974b4b Makefile.pre.in: add $(OPT) to link command audioop.c: fix for MPW config.c.in: save original argc/argv for Lance rotormodule.c: new coding conventions timemodule.c: add casts for Lance
0e3da7ba50 Makefile: add $(OPT) to linking line tokenizer.c: move tok_backup call around
ba941eba67 MPW changes
8e1f8dd094 Restructured MPW notes
8ce65b4cde README, Makfiles and `buildall' script to build Python under MPW 3.2.
739267b7c3 Completed (hopefully) the unification of THINK 6.0 and MPW 3.2 versions -- they now share config.c and config.h, and statting is always done through macstat.[ch] (THINK's <stat.h> defines funny constants).  Also the configuration of stdwin is done differently: you have to define USE_STDWIN to the compiler prefix.
e783444440 Intermediate version of changes after porting to MPW 3.2
f0171a1626 	* configure.in, */Makefile*.in: OPT can now be specified in the 	env at configure time and will then be put in all Makefiles as 	default 	* */Makefile*.in: remove lib*.a before adding to it
c561e5dd58 The usual...
794b93ea8a 	* Modules/Setup.*: removed all except Setup.in (huh?  I thought 	I'd done that already?!); disable gdbm by default 	* configure.in, */Makefile*.in: OPT can now be specified in the 	env at configure time and will then be put in all Makefiles as 	default 	* */Makefile*.in: remove lib*.a before adding to it
aa0f4c73e5 	* Modules/signalmodule.c: added pause().
0b498beea2 	* Modules/makesetup: support C++ files now; these should be given 	as file.C or file.cc or file.c++; C files can be given as file.c 	(instead of file.o, which is still supported)
794d81313b 	* Modules/posixmodule.c: some more NT changes
9731d4470f 	* Modules/config.c.in: change mac specific things
d250ee2413 	* Parser/tokenizer.c: backup over illegal newline in string 	literal (for "completeness" test) 	* */Makefile*.in: remove lib*.a before adding to it
b4f066da49 	Include/node.h: make some fields short to save space during 	parsing
b0f3c82a3b Added macmain.c (separate Mac specific main prog); bump version to 1.1
7aeb4b9ce8 	* Lib/linecache.py: don't crash on empty filename 	* Lib/macpath.py: don't return trailing colon for dirname() 	(XXX won't do for volume names -- but otherwise glob(':*:*.py') 	loops forever) 	* Lib/traceback.py: print SyntaxError correctly 	* Lib/stat.py: moved to posixstat.py; added macstat.py which has 	the constants for the Mac; and created new stat.py which includes 	the right one 	* Lib/urllib.py: fix caching bug (by disabling the cache)
9e1e149a5f 	* Lib/sgi/flp.py: fix caching bug (always write the whole file to 	the cache!)
29e7af07f0 Some more changes
bd851cd167 	* Doc/libtime.tex: get rid of references to millitime() and 	millisleep(); document clock()
d849a4838d Description of how to build Python for the Mac.
24f4850377 errors.c: clear traceback too. Makefile.in: remove lib*.a before creating new one.
b1ba03f045 Match new configure.in
4e8af445ec Simplify value of INSTALL (always 'cp'). Pass value of OPT from configure environment to Makefile. Add check for limits.h. Use <directory>/libreadline.a instead of -lreadline.
5622ef3cbb Moved mpzpi.py to scripts subdirectory
4040ed018e Add test for mpz module
386a554fad Added pathfix
9af22a037f newslist.py: Added search for .newslistrc.py; pindent.py: use /usr/local/bin/python; pathfix.py: new script to fix #! lines in a group of scripts.
72824bab44 Move all code from version.c into config.c
0c7095484e Changes for Mac
a715274421 No need to define THINK_C any more
d4d7728440 Updates for THINK C 6.0.  Moved the necessary UNIX emulation routines here.
e89bc75048 Changes for dynamic linking under NT
14aa5da824 version.c is no longer...
6a3eb5f14d Changes to make it work and compile on NT, by Mark Hammond. (NT changes for posixmodule.c re-invented by Guido.)
8a38a6b99f Moved to Include and changed format to "<complete_version>"
a322862eff Added #diagram:... comments for Kees Blom's railroad diagram generator
2828e9dbd4 	* Doc/libstring.tex (section{Standard Module \sectcode{string}}): 	removed references to {ato{f,i,l},index}_error
710c352d05 	* Lib/string.py: find/rfind is now the main implementation and 	index/rindex is a wrapper that raises index_error (which is now 	always ValueError)
5806a4f5c3 	* Modules/stropmodule.c: implement find/rfind instead of 	index/rindex (raising and catching an exception is much more 	expensive than returning and testing -1)
3d67feed24 The usual
a28f2dc321 do fake "import posix" for freeze.py script
f8c76d0cd1 1.12 -- new address for fu-berlin mirror, infoseek uses python, more info about windows stdwin, more about gnu getopt, correct typo
2d3a94010f delattr, strncopy in parsetok.c
1efbb0f002 Added docs for delattr
91ab4a8353 If an attribute is deleted, __setattr__ is called with 2 instead of 3 arguments (adding __delattr__ was deemed too much overhead)
fda5fb2158 The usual
a0e9a77183 	* configure.in, Makefile.in: remove the AC_PREFIX() call -- it's 	more trouble than it's worth at CWI and most other people seem to 	install Python in the default (/usr/local) anway.  Changed comment 	describing --prefix in Makefile.in
3f9a6ec9e6 	* Lib/rfc822.py: fix two bugs: error in readheaders interpreting 	regex.match() result, and wrong logic in getfirstmatchingheader() 	when the same header occurs twice consecutively
dc1cdca10b Test set for new pow() function
b8b264b165 	* Doc/libfuncs.tex: don't use $math$ in description of pow(x,y,z); 	describe tuple()
0b7d02a36f New patches by Andrew to fix various problems
e149fa2a1e 	* Objects/classobject.c, Include/classobject.h: added __getattr__ 	and __setattr__ support to override getattr(x, name) and 	setattr(x, name, value) for class instances.  This uses a special 	hack whereby the class is supposed to be static: the __getattr__ 	and __setattr__ methods are looked up only once and saved in the 	instance structure for speed
e025e31de6 	* Include/rename1.h: added PyMethodDef and PyObject
03d8f745e6 Rewrote sections on GNU readline (now that I'm using 2.0), ftp, and mailing list / newsgroup.
9bb4fd6061 	* tkintermodule.c (*FileHandler): generalize to arbitrary file ids 	and objects that hav a fileno() method; fix bug in FileHandler 	(should call XDECREF instead of DECREF)
75abc6392b 	* Objects/{int,long,float}object.c, Include/object.h, 	Python/bltinmodule.c: mods by Andrew Kuchling to implement 	pow(x,y,z) == pow(x,y)%z, but without incurring overflow
fba65fe134 Tree displaying class
ef8f88101a Add Widget.unbind and {Canvas,Text}.tag_unbind. In Widget.__init__, call config only if cnf not empty.
16d6e7109d Lots of small corrections by Andrew Kuchling (plus all new rotor docs)
4b4c664d2e 	* Modules/{Setup.in, gdbmmodule.c}, Doc/{lib,libgdbm}.tex: added 	Anthony Baxter's gdbm module (derived from Jack's dbm module)
b69e0958a5 Added gdbm docs
e06752b457 Added cheatsheet
c8180cca25 Very useful file!
14cbecc23e Some new names...
5552eb7203 	* BUGS: new file (merger of unofficial BUGS1.0.x files)
c65a525cdc 	* Modules/{Setup.in,Makefile.pre.in}: renamed some modules to 	shorter names (dropped the "module" from the name): sunaudiodev, 	imgformat, audioop, imageop, imgfile
781db5d0bb 	* Doc/libsocket.tex (subsection{Socket Object Methods}): 	documented gethostname() and a few misc things
3d0df46fff AttrDialog.py: some structural changes listtree.py: "Print" -> "List" in description
d7b19488d7 Use new packing and 'name' in cnf dict
e2ca9bd156 	* tkintermodule.c: OK, I've fixed the "tty" problem.  You're right 	no need for the stdin handler, a Tk_DoOneEvent(TK_DONT_WAIT) did 	the trick.  I've included a diff to tkintermodule.c.
46f24027f4 Strange...  levels 1 and 2 were never committed?
379dc587c8 Move to revision level 2 (like the other files)
e7af5a0816 Merge lost alpha100 revision
e9914961b8 Merge lost revisions back
6938f06047 Merge alpha100 branch back to main trunk
ab3a2504b9 libsocket.tex: send[to] returns nbytes. libstring.tex: added count(). ref2.tex: new keywords; moved keyword printing program to keywords.py.
7f43da7d61 Merge rev alpha100 bck into main trunk
433c8ade13 Merge alpha100 branch back to main trunk
761c7a323c The usual
b6775db241 Merge alpha100 branch back to main trunk
2979b01ff8 Merge changes
da5d518d46 Bring alpha100 revision back to mainline
16c40cdf61 small usage note change
b5ddae7388 small change in message
efae52ec2c Initial revision
3de273691f Version 1.11 -- added several new answers on design questions
5f47e5752a 	* Lib/mhlib.py (removefromallsequences): call putsequences with 	proper argument
8c9736561b ACKS: some new names; NEWS: 1.0.3
e44e373cbc Added some names to Setup.in, and added syslogmodule.c. posixmodule.c: use pclose, not fclose! selectmodule.c: trap negative fileno's, change some error messages. stropmodule.c: change semantics of rindex to match string.py.
64ea535b5e Released 1.0.3. configure*: don't check for strtod!
ea2c6f75c6 rtfm.mit.edu IP number; unix.hensa.ac.uk mirror site
78b0c82535 Made refile work -- basically set exportselection to 0 for list of folders, then fix minor bugs and remove debug print statement.  Also needs a fix to mhlib.py
74f2565e7c Added comment about need of OO style
e7e8d1e15c Change remote operation -- display the widget tree in a listbox and open relevant dialogs on double click
3284abe754 Initial revision
50f437c968 Added names to demo widgets; added RemoteWidgetDialog.
3e4f182f4c Added names to all widgets
28bb652887 correct typo
b78e03c23d Complete redesign for more code sharing. Added readonly options, used for .class field.
27b77a4367 read various startup files in Tcl and Python based upon className and baseName.
5e0c25bbf1 Fix bug in At() (Steen)
c618ed9868 Use disabled state to enforce read-only state (bit painful since it means switching states each time we insert some text but has to be done this way since else class bindings might allow editing...)
3e395be1ee Initial revision
69170c5d79 Make Pack.newinfo() return a dict
36ea0e760e Add menu to change directories -- also generalize acceptable names from *.n into *.[ln123456789]
0f650f4107 Use guido's Python
18886ab24f Initial revision
119749b7d7 Adapted to new async ManPage interface (kill, busy); Added case sensitive searching; Added explicit buttons for man page display and search (in addition to <Return> and double clicking in the listbox)
7d5e4217ef Rewritten somewhat again, distinguished between internal and external methods (internal ones start with '_'), asynchronous transfers are now killed synchronously (i.e. after t.kill(), t.busy() is false immediately).
9755b26fa9 Always insert at 'end'
fdfa2b5136 parsefile() now calls self.update() while filling the buffer, so you can read the top of the man page while the rest is being parsed
97aeca1527 Added _exit and register as Tcl command exit.  Micro lay-out fix.
d308e2ba3e 	* tkintermodule.c 	 (PyInit_tkinter): Only create stdin file handler when stdin 	 is a tty. 	 (Tkinter_Cleanup): New function.  This is an exit handler that 	 cleanup Tk.
460b6bb192 Totally changed, now it is actually derived from Text (This breaks something in MimeViewer.py, don't know what yet)
72cb020b19 Don't use self.text -- it's self now!
f09b770f68 Initial revision
5113569151 tag_remove: add tagName to tk call
5179236a41 Added bind and tag_config methods; minor lay-out change
2a39031006 Remove garbage '+ ' and reformat tag_delete function budy
a3cd357771 	* ScrolledText.py: added some more methods of Text (This should 	really be done differently, e.g. by deriving from the Text class.)
639b8b8d9a Misc changes by Steen
e20864d6c2 	* kill.py: Don't use the exec Tcl command.
2dcf529b55 Tue Jul  5 13:22:45 1994    (lumholt@login.dkuug.dk)
cd3c0425e1 ...
7c395db298 * Lib/urllib.py: implemented new quoting rules; added splituser, splitpasswd, splitattr, splitvalue; new ftp syntax (user:passwd, cwd to each subdir, type={a,i,d})
bd84b04f64 Mon Jul  4 12:42:04 1994  Guido van Rossum  (guido@voorn.cwi.nl)
526beed88d New module, formats traceback just like the C code does
32d8ba4b08 * Makefile.in (Makefile): add dependency on config.status * configure.in: support --with-gcc[=value], --without-gcc * configure.in, acconfig.h, config.h.in: check for clock_t
6dc31a1740 configure: libtermcap hack; ChangeLog: the usual...
50df381f44 Initial revision
0b0804be77 Lots of new stuff
9beb9327df wait_{variable,window,visibility} register = _register
c93e13d734 Replace <MacHeaders> by specific required header files
170c2e108f Change include path for unixemu headers; rename access to access_
f713247ed7 Initial revision
7687522309 	* tkintermodule.c (Tkapp_New): Remove #ifdef WITH_APPINIT. 	* tkintermodule.c (FileHandler): Make arg a tuple; bug found 	by <tnb2d@cs.virginia.edu>.  Call the Python file handler 	function with (file, mask) argument.  Fix a few of my refcnt bugs.
535cf0cbe2 Redo these changes: 	(Menu.index): return int or None, not string 	(Widget.__getitem__): use splitlist, not split
aec5dc9f67 Sun Jun 26 02:19:01 1994  Steen Lumholt  (lumholt@login.dkuug.dk)
c2fb7e65de 	(Menu.index): return int or None, not string 	(Widget.__getitem__): use splitlist, not split
7152740076 lots of new changes committed again...
2f600762d0 new versions derived from new acconfig.h and new configure.in
0039f51e9c changed GETPGRP_HAVE_ARGS into GETPGRP_HAVE_ARG
8b605eb06a documented writelines()
a84ec51965 clarify the meaning of address for those methods that or return addresses
560131328c mhlib.py: new interface to MH folders and messages multifile.py: added readlines() and read() methods mimetools.py: mimetools.py: added functions to encode/decode standard MIME 	Content-transfer-encoding types (as well as uuencode) rfc822.py: Accept lines ending in CR LF as well
85d8945590 Two new generally useful modules: types defines names for all built-in types, StringIO implements pseudo files writing into and reading from strings.
adb3105ec4 Companion module for new profile.py
bb4ba12242 * Modules/signalmodule.c: added thread compatibility (only main thread uses signals); much improved efficiency; intrcheck() doesn't call sigcheck() but only tests and clears the SIGINT tripped flag.
20882d5067 Split pwd in pwd and grp; added imgformat (by Jack)
c9422ebc2b Don't include intrcheck.h
9b68fd961c 	* Tkinter.py 	(Widget): generalized config(); added keys(). 	(Canvas): added addtag_xxx and find_xxx functions; generalized 	itemconfig().
08a403821d 	* Tkinter.py: some tidying up. 	(Misc.after): arrange to call deletecommand after it is called. 	(Canvas.itemconfig): generalized to support all forms. 	(Canvas.find): returns a list of integers instead of strings. 	* Tkinter.py (Canvas._create): call _flatten earlier.
fea128ecf3 Reformatted using 8-space wide tabs
67ef5f3fb6 	* Tkinter.py (Canvas): made create_ methods return the item id; 	flatten argument list to _create before passing on to tk.call; 	_do should return a value.
45853db868 	Added dictionary mapping names to children, and _name attribute. 	Renamed tkerror to _tkerror, default_root to _default_root. 	(_substitute, _subst_prefix): move back into class Misc; added 	widget Event attribute. 	Added functions that return widgets or widget lists: 	winfo_children; focus_get; grab_current. 	(Pack.slaves, Place.slaves): return Widget objects instead of 	pathnames. 	Renamed __del__() to destroy() (because of circular refs, __del__ 	won't ever be called). 	Added some names with explicit _set: focus_set, focus_default_set, 	grab_set. 	Added focus_default_none. 	(Misc._getints): use tk.splitlist() instead of tk.split(), return 	None if string empty.
e7571856f3 Fix initial fill color of square .,
1e9e400ba7 Added getdouble, getboolean. Removed redundant global statements getboolean returns None if argument is empty AtInsert() concatenates optional arguments after 'insert'
df09691e7c Adapt to new Tkinter.py
8d1e439b89 Moved tk.record() to record whole commands instead of lines
5e8d3724fe Added getvar, getint, lower, tkraise==lift to Misc class
3c1d087b19 Adapted to new Tkinter.py.
1846882254 Initial revision
7ce61c1388 Version 1.9
0038cd9e4d Added convenience functions {complete,reformat}_{filter,string,file}. Added usage message to test program.
26c86abb4b Fixed faulty apply call
abe173a225 Replace intrcheck() by sigcheck() in many places. In Pythonrun, tirn off SIGPIPE and move signal handlers elsewhere. In ceval.c, also move locals_2_fast/ fast_2_locals to frameobject.c, replaced local variable trace by f->f_trace, got rid of unused mergelocals() and unneeded calls to fast_2_locals, return the variable name on "fast variable not found", AND use "__call__" method if it exists to call an inmstance.  Whew!
169b61295a Constants from <sys/wait.h> (IRIX 5 version)
6299d1ee03 Speed up checking for signals and define intrcheck differently
c50158e70c Added stuff about indentation
36a373407f Document -s option -- suppress printing of top-level expressions
6f5f8ddeaf Fix waiting for children -- save ppid in pidlist as well.
3962fdb25a correct typos in option parsing loop
e6b7979d17 Quentin's latest version
b25c402eda Initial revision
e944da8916 ceval.c: dict of local mapping is now a tuple compile.c: lists and dictionary in code objects become tuples import.c: bump MAGIC thread*.[ch]: added thread_ident() function version.c: added '++' to version number and bumped date
34162a123a Added some new modules
b3107c3bee ACKS: added Rickard Westman CXOPYRIGHT: removed spaces at end of some lines
a9df70e02b Removed some random ^D characters
d3b6842d9f added barrier test (by Tim Peters)
f3b4903a9f dospath: fix by Amrit (don't normalize glob patterns away) ftplib: get rid of non-auto port assignment
f624666eb3 Generate some files automatically from system files
7f61b3511c README: correct typo (lib.index) lib.tex: include libfcntl, libposixfile myformat.sty: add tableii environment libfcntl.tex, libposixfile.tex: docs contributed by Jaap V
c762becaf5 Changes by Jaap -- added 'fileopen' method
78f8dea44a New module by Jaap V
a6970580d1 Added optional lock parameter to condition class. Added mrsw (multiple-reader-single-writer) lock.
c95f7248d6 Script to regenerate FCNTL.py, IN.py, SOCKET.py
01f5f62401 Added -i option to ignore general regexps
846c3224a8 Added semaphores; fix event.wait().
48a69b70b2 Initial revision
9f2a5b0f66 Added bug.py and condition.py
655f600b58 Don't use thread.exit_prog(); set a global variable to stop other thread
dc3c53cf8d Don't use thread.exit_prog; let child die if EOF read
3ac5b00d40 Fixed for stricter argument matching rules
1d28e1707a Initial revision
bc9231a3f6 Added pindent.py
398d9fec3c New experimental modules -- signal and sybase
b98b1b3deb Tim's changes; removed some remaining non-functional ifdefs
2c8cb9f3d2 Split thread.c into a number of system-specific files. Added Tim Peters' pthread version.
b9c4461a35 Derived changes after change to configure.in
c5832ffdba Changes for posix threads
e6ef03260c 	* Doc/libtypes.tex: fix typo in table of list methods; clarify 	truncation behavior of floating point formatting
7faf67caf5 Initial revision
1ced40f380 Added ifdef.py
921a08f303 Walker's changes fixed so they work in THINK C 5
3ce7a1a9ea Changes by RMW for MPW
87f223c6c7 As extended by Richard M Walker for MPW
df14503cb9 the ususal...
2922c6dabb Changes to use default argument values where possible
e4c6131baa crypt module (Steve M's)
7a325c385b This commit was manufactured by cvs2svn to create tag 'release102'.
dc0493ac67 Initial revision
fe16cc0338 Release 1.0.2.
44b4cb1f54 Release 1.0.2
a3d4d37282 Finalize release 1.0.2
5c74304731 News for 1.0.2
59ad40d0b0 Added Andy Bensky
1ed77974d6 Added Adrian Phillips
9c7e7bf4c4 README: version 1.0.2; Makefile.in: change clobbered files; rest: as usual
8ad2a2a987 The usual
acfe4171ef The usual...
041be05976 Documented optional bufsize argument to open() and the fact that mode is now also optional
19806f4ce2 Module to lock open files using fcntl()
f13285271f Finally committed it again (a matter of cvs admin trouble?)
09336f9f73 Process command line arguments; skip #defines that generate invalid Python
ef5bca380c Documented -u (unbuffered), undocumented -k (killprint)
70dc86f52a Initial revision
d15a155681 added Generator.py
871b805a04 New version handles -o<string> same as -o <string>
a83d954912 zzz
c7b6882326 Jack's module for parsing UNIX mailbox files
581d172d61 Now it's 1.09.  Only change from 1.08az is to make kill-emacs-hook work under Lucid Emacs.
9274e2d0e9 Improved guesswork by Tim for continuations where the open bracket is the last thing on the line.
0ec5c5dcad Improvements from Tim after some complaints...
a143e90c1b tata
1738311dab Documented new built-in function vars(). Documented new formatting features: %s takes any type, and '%(key)format' % dictionary. Documented posixpath.expandvars().
590b289672 Added tests for missing host to open_http and open_gopher
e531e4b042 Tim Peters' version of the indentation changes (and more).
cc54417d1a Module to test threads
a873fcecdf Jaap V's changes plus a few of my own -- now it seems to work.
ed3112c1b5 The usual
2508ade19e A getopt.c for your amusement
26d86dba2f Added some names
6441c7a4b8 Initial revision
617536e6cf Added news
0d471619a3 Fix by Sjoerd so nested indents also work if the open paren is on a line containing tabs
d3976e20d8 Added Donald Beaudry's change for neater indentation within parentheses
5333c5d734 Updated for existence of newsgroup and various misc things
7c6ebb572e Renamed urlopen.py to urllib.py.
cc32ac9704 Use float constants directly; cosmetic changes; initialize largest correctly; allow test(N) to set number of calls in the tests.
95bfcda3e0 Added gauss() (same as normal but twice as fast) and betavariate(); print more statistics in test_generator()
ff03b1ae5b Random variable generators
b19d86232b Search for test files in sys.path
131e2abcd1 *** empty log message ***
d1df83ba6c urlopen: add basejoin() function. addpack: new module to add packages to sys.path.
d66acb45f8 avoid crash in open_ftp when no host in url
5e334d9823 ceval.c mod
f18a4f4565 The usual list of stuff...
67e22c2684 use caching of temp files; added cleanup
5da5755c4a adapt to min value of 1 for listen() backlog argument
b5f2714e94 listen(0) -> listen(1) for Solaris 2
749908b9b6 listen(0) -> listen(1)
ea6f6ed80c Change listen(0) to listen(1) for Solaris 2 sockets
914973a0be Added __repr__ to addbase class; delete more objects
d5b9ea1c67 Added __del__(), close(), cleanup(), retrieve() and open_local_file()
555915a90b Added ntpath.py (for os.py when used with Windows NT)
68cfbe7c93 Documented xrange; crossreffed lambda a bit more
9f65ae0093 Fix weird messed up paragraphs
749057be5a Redesigned as a class
76ca3c17f0 Fix bug with somtimes uninitialized port
9f14863053 Added descriptions of lutz, mpzpi.py and stoffel
23acc9590c Towards a standard access mechanism for URLs.
3da56c3686 tatata
e69d3fec87 Use time.time() instead of time.millitimer()
d9193c67d6 This commit was manufactured by cvs2svn to create tag 'release101'.
094183ebeb At the release of 1.0.1.
c5c67bc367 At release 1.0.1.  Scripts, Makefile, README: cosmetic changes and streamlined procedure; tut.tex: fixes by Tim Peters; libposix.tex: added posix.fdopen; ext.tex: typos
3ed23cc158 aifc, sunau: make rate an int; os: restruct; ospath: obsolete; rfc822: date and addr parsing; string: force result of atof to float and support atoi, atol, atof in strop; tzparcs: don't call test().
e1056b3c32 At release 1.0.1
91f6083cc7 At the release of 1.0.1
aff6906e6a Added HAVE_STDARG_PROTOTYPES and signed
44fa566927 correct spelling error
f8ae54d10c Initial revision
46f1ca8fe5 added unbirthday.py
b513c74b1b wave.py: module to read and write .wav files with the same interface 	as aifc.py and sunau.py. sunau.py: small change in comment (au -> sunau).
2434999740 Released version 1.4; out after 1.0.0 is released...
3db6ebcc3f Use __builtin__ instead of builtin
ffe9490d79 aifc.py: framerate should be an int. sunau.py: should convert number of frames correctly to number of bytes 	when reading.
5125908d2b Amrit Prem
2a7cbe9ae7 Release of 1.0.0
76821a5411 Finishing touch before 1.0.0...
99bf250819 Add hier module names to future plans
a85d053135 Initial revision
95f61a7ef0 Changes for release of 1.0.0
62326f2108 builtin -> __builtin__
6dfccb34c2 Remove unused import of builtin
34e5dcacb0 Descripbe new files
a7925f18de Initial revision
8f0d0c8a21 correct typo on DL_DIRECTORY; Doc/ext.tex log message
9e93fb6879 Support for latex2html (at version 0.5.1)
23d19398fa Final changes for 1.0.0 BETA 6
5ec8b525d2 Restructured main, use getopt, use regular expression search instead of prefix match
cb38cd01c7 fcntl.h, AIX, TESTPATH
381f65c057 Removed www (now in Demo2), added embed (formerly one level higher up)
a1238eb734 Fix copyright -- 1994 instead of 1004!
b46152ade1 * configure.in: check for sys/time.h; substitute and check for AR; check for nice() * Makefile.in: make python .PRECIOUS; define OPT=-O and pass it to submakes
cbcd8d796f Make more robust against Minix and Mac
4de6cbccf0 new file, setup for minix
b90bdebf19 sndhdr.py: restored lost file; audiodev.py: import platform specific modules only when needed
8f0d15c637 *** empty log message ***
7590193909 Add colon to TESTPATH (oops!)
42f69dab7e Added TESTPATH
4c627be931 Small changes
4600566285 os.exec -> os.execv
3303315ff3 Fix test for bad static forward; minor other changes
fa7fcb93e9 Add test code for audioop and rgbimg (includes three binary files!)
2712c162f2 Lots of minor stuff, install prefix, LIBM/LIBC, bad static forward, irix4 and GNU dynamic loading, version 1.0.0 BETA 6
6eb1d4a4da Clarified comments about build process. Removed whitespace from variables used to build PYTHONPATH.
8b03cae9a8 Integers are specified as "i" and not as "d".
0b7dfbb9b7 Initial revision
a635b9a6ff remove references to /ufs/guido/bin/sgi/python
8425b79c54 Add fixheader.py
e024873397 Added ftpstats.py
032d39461b Minor output format change
f62f687453 Various changes, andded -c option
4e8aef842c Initial revision
658c9982d8 Finishing touch before release of 1.0.0 BETA 5
e03bf9c497 Removed now useless convert functions.
49c2df16f5 Removed silly dependence on AL module.
e0d95c3aab New versions; changed Setup procedure
516d4d999b Assorted Mac changes
ce9739ba76 Initial revision
718581a522 Final touch for BETA 4 (only getting rid of --with-solaris)
2f3e8d56f3 The final touch for release of BETA 3 (Makefile: fix "find" target)
04e74c4e0c made depend target work with VPATH
f1009e8373 * README: describe new build procedure; added section on building for multiple architectures * acconfig.h: fix (reversed!) comment for SYS_SELECT_WITH_SYS_TIME
afee3eb347 Initial revision
80e32bf546 Added Makefile with clean and clobber targets
7dd31d0608 Makefile.pre.in (renamed from Makefile.in.in), makesetup: changes to support new build process and VPATH Setup*: disable nis and fix comments rest: fix compiler warnings
79556aab81 redid build process; added --with-svr4; renamed USE_THREAD to WITH_THREAD; bumped version to 1.0.0 BETA 3
e182fe5342 The usual...
61fe8619fb Now generated automatically by autoheader
976877ea11 Added AC_REVISION; swapped -lnsl and -lsocket test; test whether sys/socket.h and sys/time.h can be used together
4290161d2d s.avail() has met its maker
93fcb9bbbd One NULL should have been 0.
721cd289ef Specified _framesize twice in access statement.
91168a8c9d new file (again!?!?!)
313e5cb4b9 Add tests for <sys/un.h> and getpeername(), for Modules/socketmodule.c
bbf27193a1 installation procedure improved and explained; more stuff in README
4b35ef5297 Implemented sort of a solution for PYTHONPATH. Added Setup.guido with my own preferences.
326c0bc241 Added symcomp and resulting new data items
5536a3c0a7 README: versions BETA 2 ChangeLog: new! configure*: remove strtoul from AC_REPLACE_FUNCS; remove leading blank line
116857ca01 Added George Neville-Neil's timing module
a1c996c9d6 1994 Copyright
36b4807621 A small but essential file...
5fdeeeae2a Restructured library documentation
0b0719866e Lots of new stuff for 1.0.0 BETA release
fba715ab6c Added some files to new module
f30adc8a99 all: 1994 copyright moved config.c and most modules to ../Modules moved patchlevel.h here from ../Include changed version to 1.0.0 BETA, date to January 1994
5a18919d00 all: 1994 copyright added config.h, config.h.in moved parser.h to ../Parser, patchlevel.h to ../Python allobjects.h: include config.h some: remove all refs to THINK_C_3_0 mymalloc.h: di HAVE_STDLIB differently, use size_t instead of MALLARG
fbee23e55b Documented the fact that IRIX 5.x also supports Sun style shared libraries.
e30cb84ed2 Initial revision
70f1418d35 New files (not really...)
dd8cb446e1 Some minute changes.
424e4da9f3 Rot out all uses of time.milli*().
0efafb39da Rot out all uses of time.milli*(). Slightly improve debug output.
605909dc9d Rot out all uses of time.milli*(). Also change command line options to use seconds for all times.
ca1c876d43 Use freeze_form instead of freeze_object
810a92f95b Added depend target; cosmetic changes to other targets
6d5ebe24ee Added (dummy) depend target
6085e32a75 Alpha 1.0.0
1dfec14f83 Py -> Include
0d2d397bc5 Added function ttob.
627b2d7cd7 New files
6fa6343f0e None
60a578aa4e New files
8e454f3858 Misc changes.
be0e9420a1 New files.
2e1d433e43 Added getmaxint() so sys can initialize sys.maxint. Added Makefile.in.
92fa23fd6d ANSIfied somewhat.
c6d846a5d5 And another init incompatibility bites the dust.
d6b9ce961e Fixed use of aifc module.
7d6aa51b56 * rangeobject.[ch], bltinmodule.c: incorporate new version of range   object (unchanged from source except "range" -> "xrange").
c4f169cc5a rgbimgmodule.c, Makefile, config.c: new module to read RGB image files. 	Does not need any SGI-specific libraries. cgen.py, cstubs, Makefile: Generate glmodule.c differently so that it 	can be compiled using an ANSI compiler.
7030b1ff2d almodule.c: added close method, equivalent to closeport. thread.h: use PROTO instead of _P for prototypes.
248a50c168 * Grammar: corrected old typo (class instead of 'class') * dosmodule.c: MSDOS specific stuff from posixmodule.c. * posixmodule.c: removed all MSDOS specific stuff. * tokenizer.h, parsetok.h: in prototypes, don't mix named and unnamed   parameters (MSC doesn't like this).
455b87d457 New file
badac73dfc New file
b898bd29b0 New file
2a45141741 aifc.py, sunau.py: Adapted comments; added access statements. SUNAUDIODEV.py: Added some constants for Solaris.
6ed9df2641 * aifc.py (Aifc_write): fix bogus reference to filename
7bc817d5ba * Mass change: get rid of all init() methods, in favor of __init__()   constructors.  There is no backward compatibility.  Not everything has   been tested. * aiff.{py,doc}: deleted in favor of aifc.py (which contains its docs as   comments)
aa14837bd0 Interface to audio hardware for SGI and Sun.
21a3ff9d5d Uniformly replaced init() functions by __init__() constructors. A few simple things seem to work, I haven't tested it thouroughly though...
96b608cf6d *** empty log message ***
1b789f9fe0 Initial revision
f82fef0f59 *** empty log message ***
d55f4d1a76 *** empty log message ***
9e80d6f125 *** empty log message ***
7565b93414 *** empty log message ***
3cbc16d904 * lib2.tex (sys): updated sys.std{in,out,err} docs.  Added   sys.tracebacklimit. * tut.tex (Exceptions): change text printed by traceback. * lib5.tex (audioop): added minmax. * lib5.tex (audioop.getsample): move wandered paragraph back * lib3.tex, partparse.py: undo mucking with \nopagebreak (didn't work). * partparse.py: ignore \nopagebreak command * ref5.tex: added description of lambda forms. * ref7.tex: added reference to lambda forms to section on function   definition. * lib1.tex: removed lambda as built-in function (it is now a special   form).  Also removed feature of filter, map, reduce to turn a string   argument into an anonymous function.
67a5fdbcc2 * mpzmodule.c: cast some methods to the proper type. * traceback.c (tb_print): use sys.tracebacklimit as a maximum number of   traceback entries to print (default 1000). * ceval.c (printtraceback): Don't print stack trace header -- this is now   done by tb_print().
ad7324c71f Don't close the file explicitly.
feaa7d296f Don't close the file.
79c85f1778 * wdbframewin.py (re_eval): set __privileged__ in globals so private   variables can still be seen by the debugger * ftplib.py (retrlines): args should be *args. * ChangeLog: entries for Sjoerd's addition sunau.py and changes to aiff.py * test_md5.py: test program for built-in md5 module
6930b3d18d Initial revision
c4801ed513 Added minmax function: -- function of module audioop: minmax (FRAGMENT, WIDTH)     Minmax returns a tuple consisting of the minimum and maximum     values of all samples in the sound fragment.
43bf0bc857 aifc.py: added missing tell() method in AIFC write class; 	 use audioop module as backup for cl module when reading or 	 writing u-law compressed files. sunau.py: interface with the same methods as aifc for Sun and NeXT 	  audio files
66bca326cb Port to Solaris 2.3.
57531fea90 change syntactical position of lambdef (was an atom, now is a test)
ae3b3a33d8 * test_*.py: new lambda syntax (also affects tests for filter, map,   reduce) * ftplib.py: added default callback for retrlines; added dir() method * ftplib.py: don't return self in self.connect(); added hack so that if   'CDUP' is not understood, 'CWD ..' is tried. * ftplib.py: second method called init() should have been called   connect(); if __init__ sees more than one argument, it will also try to   login().
590baa4a7a * import.c (get_module): pass .py filename to parse_file, not .pyc filename! * funcobject.c (func_repr): don't call getstringvalue(None) for anonymous   functions. * bltinmodule.c: removed lambda (which is now a built-in function);   removed implied lambda for string arg to filter/map/reduce. * Grammar, graminit.[ch], compile.[ch]: replaced lambda as built-in   function by lambda as grammar entity: instead of "lambda('x: x+1')" you   write "lambda x: x+1". * Xtmodule.c (checkargdict): return 0, not NULL, for error.
8732d6aeea Fix lay-out of previous fix.
b376a4ad18 * timemodule.c: Add hack for Solaris 2. * posixmodule.c: don't prototype getcwd() -- it's not portable... * mappingobject.c: double-check validity of last_name_char in   dict{lookup,insert,remove}. * arraymodule.c: need memmove only for non-STDC Suns. * Makefile: comment out HTML_LIBS and XT_USE by default * pythonmain.c: don't prototype getopt() -- it's not standardized * socketmodule.c: cast flags arg to {get,set}sockopt() and addrbuf arg to   recvfrom() to (ANY*). * pythonrun.c (initsigs): fix prototype, make it static * intobject.c (LONG_BIT): only #define it if not already defined * classobject.[ch]: remove all references to unused instance_convert() * mappingobject.c (getmappingsize): Don't return NULL in int function.
83eb962528 * {lib,ref,ext,tut}.tex: added explicit \date{<date> \\ <release>}. * lib2.tex: change bogus \\var to \var.
6f0132f490 * text2latex.py: call main() instead of always processing ext.tex. * Makefile: added 'ext' to 'all' target * ext.tex: more changes towards a readable text * lib4.tex (posix): added set{uid,gid} * lib2.tex (array): restored doc for typecode and itemsize (which were   there but not visible for dir())
c45611d0e3 * import.c (get_module): total rewrite, to ensure proper search order: for   each dir in sys.path, try each possible extension.  (Note: C extensions   are loaded before Python modules in the same directory, to allow having   a C version used when dynamic loading is supported and a Python version   as a back-up.) * import.c (reload_module): test for error from getmodulename() * moduleobject.c: implement module name as dict entry '__name__' instead   of special-casing it in module_getattr(); this way a module (or   function!) can access its own module name, and programs that know what   they are doing can rename modules. * stdwinmodule.c (initstdwin): strip ".py" suffix of argv[0].
71e57d090d Fix the fix :-(
6938a297da Three micro fixes to formatstring
b31c7f732a * test_select.py: (some) tests for built-in select module * test_grammar.py, testall.out: added test for funny things in string literals * token.py, symbol.py: definitions used with built-in parser module. * tokenize.py: added double-quote recognition
52f2c05401 * parsermodule.c, Makefile, config.c: rudimentary interface to the Python   parser. * mappingobject.c (lookmapping): 'freeslot' was never used due to a bug in   the code.
a3d78fb268 * posixmodule.c: added set{uid,gid}. * {tuple,list,mapping,array}object.c: call printobject with 0 for flags * compile.c (parsestr): use quote instead of '\'' at one crucial point * arraymodule.c (array_getattr): Added __members__ attribute
b2e358d433 Use __init__ instead of init. Also use CDDB_PATH and CDDB_WRITE_DIR environment variables in cddb.py.
e65cce5eec * string.py: added rindex(), rfind(); changed index() to interpret   negative start indices starting from the right. * ftplib.py: debug() -> set_debuglevel(); change demo to use __init__(). * os.py: added execl, execlp, and execvp. * lambda.py: removed (now that we have built-in map, reduce, bagof, lambda) * test_b{1,2}.py, testall.out: added tests for bagof, lambda, map, reduce * commands.py: use os, not posix * test_grammar.py: make it easy to disable non-portable int overflow tests * dis.py: don't abuse range()
db65a6ce55 * ext.tex: did most of the tedious changes from plain ASCII text to LaTeX. * text2latex.py: automatically put function names in \code{}. * lib.tex, ref.tex, ext.tex, qua.tex, tut.tex: use new P.O.Box number in   address.
7a2dba2a00 * ext.tex: documentation for extending, reference counts, and embedding   (formerly ../misc/{EXTENDING,REFCNT,EMBEDDING}).  Also affects Makefile. * text2latex.py: script to do part of the conversion from an plain ASCI   text file (in my particular style) to LaTeX.   (Chapter/section/subsection headers, and verbatim sections.) * partparse.py, texipre.dat, fix.el, Makefile: Minor cleanup of latex ->   info conversion process (at least it works again, and with less   debugging output).  Removed fix.sh. * lib1.tex (section{Built-in Functions}): adapt description of str() and   repr() to new situation. * lib3.tex (Module os): added exec*() variants. * lib3.tex (Module posix): added execve(). * lib2.tex (Module array): documented reality; remove typecode and itemsize, add byteswap, rename read/write to fromfile/tofile, and re-alphabetized. * lib1.tex (Built-in Functions): renamed bagof() to filter().
c600411755 * mpzmodule.c: removed redundant mpz_print function. * object.[ch], bltinmodule.c, fileobject.c: changed str() to call   strobject() which calls an object's __str__ method if it has one.   strobject() is also called by writeobject() when PRINT_RAW is passed. * ceval.c: rationalize code for PRINT_ITEM (no change in function!) * funcobject.c, codeobject.c: added compare and hash functionality.   Functions with identical code objects and the same global dictionary are   equal.  Code objects are equal when their code, constants list and names   list are identical (i.e. the filename and code name don't count).   (hash doesn't work yet since the constants are in a list and lists can't   be hashed -- suppose this should really be done with a tuple now we have   resizetuple!)
2e8f8a398e Added compare operations for functions and code objects. (Also hash, but it doesn't work yet.)
4199facacd Added getmappingsize().  (Needed by previous checkin of posixmodule.c)
32be3a7a88 Fix stupib bug in concatenation
094885b0f0 Must initialize 'inspect' flag
c6dcc9f407 Added execve; change getstrarg into getargs with "s" format
572d2d994d Fix memory leaks in join & joinfields
e77a757094 * nismodule.c: database keys and values can contain null bytes.  be more   careful about these. * arraymodule.c: added 8 byte swap; added 'i' format character; added   reverse() method; rename read/write to fromfile/tofile. * config.c: Set version to 0.9.9++. * rotormodule.c (r_rand): declare k1..k5 as unsigned longs so the shifts   will have a well-defined effect independent of word size. * bltinmodule.c: renamed bagof() to filter().
78ed420314 Fixed a couple of bugs: getargs doesn't use % escapes, and seconds must be set after timeout is initialized.
b73cc04e62 * ceval.c, longobject.c, methodobject.c, listnode.c, arraymodule.c,   pythonrun.c: added static forward declarations * pythonrun.h, ceval.h, longobject.h, node.h: removed declarations of   static routines
c7a22703e7 * selectmodule.c (select_select): timeout argument may be None with same   meaning as no 4th argument
82d410e733 * fileobject.c (softspace): fix bug if called with NULL file.
c70b61fe6d Hacks for NEXTSTEP.
2586bf0a34 * rangeobject.{c,h}, bltinmodule.c: removed non-essential ops from range   object.
0667626694 Replace <<-13 by >>13.  Leave old code in #ifdef BUGGY_CODE_BW_COMPAT.
13ecc7a1a2 Simplify life for md5: include (slightly modified) md5.h and md5c.c from RFC 1321 here, and point to that RFC instead of a non-existant incompatible file on rsa.com.
74901d589d Restructured main loop.  Etc.
e36f735616 Major rewrite with new read_* interfaces
0b26a19a4f Fix bug in backup inside esc sequence.
b71f879baf Changed redraw policy.
615194a352 Fixed bugs in resizetuple and extended the interface. Added ifdefs in stringobject.c for shared strings of length 1. Renamed free_list in tupleobject.c to free_tuples.
0a2fa75a9c Added Dates.py and Rev.py
102ababef9 Initial revision
becec31f17 Fix bug and use __init__
74b3f8a9e3 Initial revision
dc4b93db70 * listobject.c (list_ass_slice): XDECREF instead of DECREF so   setlistslice() can be used to cut the unused part out of a freshly made   slice (as done by bagof()).  [needed by the next mod!] * structural changes to bagof(), map() etc.
4bd023f882 * lib3.tex (module string): added rindex(). * lib1.tex (section{Built-in Functions}): added bagof(), lambda(), map()   and reduce().  Repharased apply().  Removed or rephrased references to   exec() (now the exec stmt). * lib4.tex: posix.exec --> posix.execv * ref4.tex, ref8.tex, tut.tex: builtin --> __builtin__ * lib3.tex (module string): added atof() and atol(), and ato[fl]_error.
3b716046a0 Committing the correct graminit.c; also changed confusing comments in Grammar.
ed49c5e3f8 *** empty log message ***
f1bbf9c308 Add coercions
b6957e434f Initial revision
12d12c5faf * compile.[ch]: support for lambda() * PROTO.h, mymalloc.h: added #ifdefs for TURBOC and GNUC. * allobjects.h: added #include "rangeobject.h" * Grammar: added lambda_input; relaxed syntax for exec. * bltinmodule.c: added bagof, map, reduce, lambda, xrange. * tupleobject.[ch]: added resizetuple(). * rangeobject.[ch]: new object type to speed up range operations (not   convinced this is needed!!!)
444fc7c90c Add some necessary casts; use double quotes to represent strings in some cases.
ee9012f58f Added rindex().  index() and rindex() interpret negative start index as normal indexing does.
06191530b6 Work around a bug in the DEC alpha OSF/1 C preprocessor.
72481a3497 Changes to make range checks portable to 64-bit machines.
8054fad890 Changes to accept double-quoted strings on input.
546185075c Fix reference to undefined 'memsize' in calcnframes().
5a2a683e72 * filemodule.c: added writelines() -- analogous to readlines() * import.c: fixed core dump when out-of-date .pyc file encountered (again!)
52c1f51554 import.c: When something is wrong with the .pyc, properly open the .py 	file. object.c: Write allocation statistics to stderr.
89b3325dc4 * import.c (MAGIC): Changed magic word to avoid confusion about exec   function vs. exec statement * bltinmodule.c: renamed the module to __builtin__. * posixmodule.c (posix_execv): renamed exec --> execv since it is now a   reserved word.
b3b09c97ce added builtin b/w compat module. changed testing of exec.
b37954f917 Added missing "import os" to pdb.help()
e61fa0a1e4 * profile.py, pdb.py: added help() function * builtin.py: b/w compat for builtin -> __builtin__ name change * string.py: added atof() and atol() and corresponding exceptions * test_types.py: added test for list sort with  user comparison function
3bb8a05947 Several optimizations and speed improvements. cstubs: Use Matrix type instead of float[4][4].
a75d306e2b "exec" is now a statement.  execfile() is obsolete. (Also added a stub for "access".)
db3165e655 * bltinmodule.c: removed exec() built-in function. * Grammar: add exec statement; allow testlist in expr statement. * ceval.c, compile.c, opcode.h: support exec statement;   avoid optimizing locals when it is used * fileobject.{c,h}: add getfilename() internal function.
cacd9579d4 * stdwinmodule.c (stdwin_done): interface to shutdown stdwin (now this is   no longer done by config.c). * stdwinmodule.c (initstdwin), config.c (initall): get command line   arguments from sys.argv instead of special-casing stdwin in config.c * import.c (get_module): fix core dump when foomodule.o does not define   initfoo(). * ChangeLog: documented changes by Sjoerd.
842d2ccdcd intobject.c: Save references to small integers, so that they can be 	shared.  The default is to save references to the integers in 	the range -1..99.  The lower limit can be set by defining 	NSMALLNEGINTS (absolute value of smallest integer to be saved) 	and NSMALLPOSINTS (1 more than the largest integer to be 	saved). tupleobject.c: Save a reference to the empty tuple to be returned 	whenever a tuple of size 0 is requested.  Tuples of size 1 	upto, but not including, MAXSAVESIZE (default 20) are put in 	free lists when deallocated.  When MAXSAVESIZE equals 1, only 	share references to the empty tuple, when MAXSAVESIZE equals 	0, don't include the code at all and revert to the old 	behavior. object.c: Print some more statistics when COUNT_ALLOCS is defined.
21d335ed9e Makefile, import.c: Lance's alternative module search (allow .pyc file without .py file); Bill's dynamic loading for SunOS using shared libraries.
cbaddb52ae Added widget methods {Height,Width}{,MM}OfScreen.
f9b7201bb8 * Added support for X window interface. * Moviechannel now uses colormap mode on 8-bit XS Indigo's instead of   converting the image to RGB32. * Compression Library support is dependent on USE_CL compile-time flag.
7f8765d327 * ref3.tex: added cross-ref to try statement for exc handler. * ref7.tex: added description of sys.exc_{type,value,traceback}. * lib5.tex: rect.intersect is different now!
a9c3c22c33 * Extended X interface: pixmap objects, colormap objects visual objects,   image objects, and lots of new methods. * Added counting of allocations and deallocations of builtin types if   COUNT_ALLOCS is defined.  Had to move calls to NEWREF down in some   files. * Bug fix in sorting lists.
35fe6ec4cf Not everyone has Guido's bin in his/her PATH...
be80e0e83e Instead of single clicks, use double clicks to get the instance window.
148644d5ac WDB enhancement:  Click once on a line with a class instance in the local or global variables list and you get a window with the instance variable of the class instance.  This list is of course automatically kept up to date.
72d73649ff - VFile: moved decompression code to VideoParams (so it is also   useable via VinFile). - Vcopy: now allows decompression of 'compress' movies.
dbf71b7b4b Added ability to edit compressed movies.
264117295e Sanity check for compress files.
bab2ca3eb1 Added autoedit and cancel commands, removed debug output
f993d28794 Don't import gl if not needed. Fixed a typo.
c9d73d1f64 Implemented support for CDDB_PATH and CDDB_WRITE_DIR environment variables. Added auxiliary routine tochash to convert a table-of-contents to a hashed toc.
d96ec44f38 Bug fix: check whether call succeeded *after* the call.
4150ede53c Fixed dealing with faulty COMM chunks.
4fddf33c87 XEvent.py: Added support for ExposeEvent. profile.py: Some speed improvements (I hope). rect.py: Bug fix in union().
f64992e95d * clmodule.c (doParams): free PVbuffer in error condition. * frameobject.c (newframeobject): initialize ob_type if taking entry   from the free list, since it is zeroed out when DEBUG is defined.
d29eb6232c This commit was manufactured by cvs2svn to create tag 'release099'.
e906606f5d Final touch before release.
8e2ec56cbc * pdb.py: set 'privileged' property when evaluating expressions * string.py: change whitespace to include \r, \v and \f.   When importing strop succeeds, re-evaluate meaning of letters.
1fc238a813 Minor fixes / changes for Mac compatibility.
a3309960a5 * Added support for X11 modules. * Makefile: change location of FORMS library. * posixmodule.c: turn #if 0 into #ifdef MSDOS (stuff in unistd.h or not) * Almost all .h files: added CPP magic to avoid duplicate inclusions and   to support inclusion from C++.
f6da4f62b4 forms_set_event_call_back: argument of None resets event callback to NULL.
78991fd042 VFile -	Added support for creating compression lib movies Vb, VbForm - Compression lib movie support 	     Save settings in ~/.Vb_init
f1cda9100d This module can now be used asynchronously. Also, some commands have been added.
827cc19be1 Interface to vcr index files (as created by vcrindex program)
ed18fdc9fc * accessobject.c (ownercheck): allow a base class access to protected   objects of its derived classes; allow anything that has an attribute   named "__privileged__" access to anything. * object.[ch]: added hasattr() -- test whether getattr() will succeed.
697e7abbc8 Use module aifc instead of module aiff.
e22e6442b7 * config.c: different default PYTHONPATH for MS-DOS * timemodule.c: change #ifdef TURBO_C into #ifdef MSDOS * posixmodule.c: MSDOS changes by Marcel van der Peijl (Digicash) * stropmodule.c: use C isspace(c) to test for whitespace; add   whitespace, lowercase and uppercase variables to the module.
d05eb8b0fc stropmodule.c: use C isspace(c) to test for whitespace; add whitespace variable to module dict.
df5638662d * posixpath.py: Fix border cases in normpath ('/foo/..' should return '/') * ftplib.py: made cwd() use 'CDUP' when dirname is '..' * FL.py: added new constant FL_PLACE_FULLSCREEN
f1dc566328 * Makefile: added all: and default: targets. * many files: made some functions static; removed "extern int errno;". * frozenmain.c: fixed bugs introduced on 24 June... * flmodule.c: remove 1.5 bw compat hacks, add new functions in 2.2a   (and some old functions that were omitted). * timemodule.c: added MSDOS floatsleep version . * pgenmain.c: changed exit() to goaway() and added defn of goaway(). * intrcheck.c: add hack (to UNIX only) so interrupting 3 times   will exit from a hanging program.  The second interrupt prints   a message explaining this to the user.
9e90a672b4 * pythonmain.c: -k option, usage message, more environment flags.   (the latter also in frozenmain.c) * ceval.c: global 'killprint' flag raises exception when printing an   expression statement's value (useful for finding stray output) * timemodule.c: add asctime() and ctime().  Change julian date to   1-based origin (as intended and documented). * Removed unused DO_TIMES stuff from timemodule.c.  Added 'epoch' and   'day0' globals (year where time.time() == 0 and day of the week the   epoch started).
5ef74b8f8e pdb.py, bdb.py, cmd.py: use __init__() instead of init()
5cfa5dfe97 * calendar.py: all libC functionality now moved to built-in time module * imghdr.py: added jpeg recognition * torgb.py: added jpeg conversion * tzparse.py: use functions from time instead of calendar * whatsound.py: add /ufs/guido/biin/sgi to $PATH when calling 'whatsound'
9b3bc71598 * aifc.py: don't die on invalid MARK chunk * calendar.py: remove stuff now built in time; some cleanup and   generalization in the calendar printing * cmd.py: use __init__. * tzparse.py: This module is no longer necessary -- use builtin time instead!
52fc1f607e * calendar.py: minor cleanups * ftplib.py: support __init__ with optional host, port args * aifc.py: ensure header is written on close even when no data is written
234f942aef * Added gmtime/localtime/mktime and SYSV timezone globals to timemodule.c.   Added $(SYSDEF) to its build rule in Makefile. * cgensupport.[ch], modsupport.[ch]: removed some old stuff.  Also   changed files that still used it...  And made several things static   that weren't but should have been...  And other minor cleanups... * listobject.[ch]: add external interfaces {set,get}listslice * socketmodule.c: fix bugs in new send() argument parsing. * sunaudiodevmodule.c: added flush() and close().
6a0e2282c3 Added fixps, fixcid.
43df862c7f Mostly cosmetics, e.g. change window titles so icon titles are better, size window back to last size when going from 24bits to 8bits mode, etc.
2055ee8480 Keep top left corner of window where it was when resizing. Keep aspect and max size of window at all times. Remove (now unnecessary) sleep(0.1) in vcr capture code. Add messages when initializing VCR. Remove old comments.
aa895c752b Initial revision
2939a4cf1a Fixed another place where set_rgbmode() should be called. Separated out colormap installation (for override by Glx widget).
f6d8032697 Impor VCR at the top.  Change the way audio is recorded subtly.
fa04170682 VCR.py: Use unix files instead of stdio files for tty communication,         because of buffering.  Also added several new commands (Jack). VFile.py: Made setting of RGB or colormap mode separate methods, 	so they can be overridden (e.g. when using the Glx.draw widget 	the way to change the mode is totally different).
672754a488 Added 24 bit RGB capture Added JPEG capture Added multiple-speed VCR sync and single-step VCR sync VCR sync recorded movies get correct timestamps Added (still non-functional) 24-bit picture scaling
34d12de03d Grab a 24-bit image off the StarterVideo
35173716e5 Added jpeg grabber
a1e1f73e2f Newss class style
db392b9b29 Small imporvements, added mpz and md5 to list of modules, changed library list somewhat.  CLOSE FILE "tmpconfig.c" AFTER WRITING!
09abc8e7df Ignore ,v files too
061ec39b07 Initial revision
e6dc0ca122 Initial revision
17ed1ae163 * toaiff.py: import whatsound instead of sndhdr * sndhdr.py: renamed to whatsound.py; use new aifc module for AIFF/AIFC * ftplib.py: added close() (closes without sending QUIT command) * aifc.py: documented close()
f3f753132a Changed setpf so it understands old-style packfactors
18c9a4f8ea * socketmodule.c: fix long-standing bug in recvfrom() -- addrlen   wasn't initialized.
66338ec1b7 New class syntax
eb6b33a837 * classobject.c: in instance_getattr, don't make a method out of a   function found as instance data. * socketmodule.c: added 'flags' argument sendto/recvfrom, rewrite   argument parsing in send/recv. * More changes related to access (terminology change: owner instead of   class; allow any object as owner; local/global variables are owned   by their dictionary, only class/instance data is owned by the class;   "from...import *" now only imports objects with public access; etc.)
23301a9467 * lib1.tex: documented dict.items() and dict.values() * ref3.tex: documented new __init__ and __del__ special methods of   class instances.
d316607732 * ftplib.py: added abort() command (sends oob data). * Several modules: change "class C(): ..." to "class C: ...". * flp.py: support for frozen forms. * Added string.find() which is like index but returns -1 if not found
b3f7258f14 * Lots of small changes related to access. * Added "access *: ...", made access work for class methods. * Introduced subclass check: make sure that when calling   ClassName.methodname(instance, ...), the instance is an instance of   ClassName or of a subclass thereof (this might break some old code!)
81daa32c15 Access checks now work, at least for instance data (not for methods yet).  The class is now passed to eval_code and stored in the current frame.  It is also stored in instance method objects.  An "unbound" instance method is now returned when a function is retrieved through "classname.funcname", which when called passes the class to eval_code.
25831652fd Several changes in one:
687dd13bfe New posix functions open, close, dup, dup2, lseek, read, write, fstat, pipe. Improved some comments and defaults in the Makefile.
02cf582e73 Added cwd()
605b127ff3 Jack's VCR control module
a849b834f1 * selectmodule.c: fix (another!) two memory leaks -- this time in list2set * tokenizer.[ch]: allow continuation without \ inside () [] {}.
b2c6556fb0 Lots of small changes collected over months...
6ac258d381 * pythonrun.c: Print exception type+arg *after* stack trace instead of   before it. * ceval.c, object.c: moved testbool() to object.c (now extern visible) * stringobject.c: fix bugs in and rationalize string resize in formatstring() * tokenizer.[ch]: fix non-working code for lines longer than BUFSIZ
ad4fcd49fc Implemented VCR capture using forward slow instead of stepping. Also added a 'rate' field to specify the capture rate in this case.
c17c84fbe3 Disconnect from VCR when switching modes. Wait for VCR ready and set VCR mode to DNR when initializing VCR. Fix type error in getfloat().
9f42f4fe43 Added single frame capturing. Added VCR synchronized capturing. Added audio capturing (for continuous mode only). Lots of internal and external improvements.
71ba5d96f9 Revived the old aplay tool which can play synchronous audio and video...
c5a14331a0 Moved stop button again; default form position next to video window.
bc6d3c37d1 All combinations of video format and capture mode (cont/burst) now work.  Reorganized a lot of the code, still not satisfied...
e17c6c355a Use groups to show/hide "Stop capture" button. Made mono capture work. Don't support rgb24 capture (the code for this doesn't exist in Vrec either!).
b7e3cc12e1 New program: Video Bag Of Tricks.  Will eventually replace Vrec and Vrecb.  Has a user interface dialog to set options etc.
acbe8da4f8 (I suggest a recompile after getting this, the ceval.c bugfix may be crucial!)
8a0c3456c2 Fix bug in class instance hash (forgot to clear error condition).
9575a44575 * Microscopic corrections to make things compile on the Cray APP. * Removed one use of $> in Makefile and warned about others.   Added configurable lines in Makefile to change CC and AR.
f56e3db1dd Support for frozen scripts; added -i option.
41ffccbba7 *** empty log message ***
9db0c1f7c7 Added freeze.py, methfix.py
0d5eb7e409 bin/python
d5c57e1624 Microfixes
5146ea3a0a Initial revision
8379ed5f02 Updated because of new opcodes introduced for "fast" local variables.
5b7221849e * Fixed some subtleties with fastlocals.  You can no longer access   f_fastlocals in a traceback object (this is a core dump hazard   if there are <nil> entries), but instead eval_code() merges the fast   locals back into the locals dictionary if it looks like the local   variables will be retained.  Also, the merge routines save   exceptions since this is sometimes needed (alas!).
8b17d6bd89 Changes to speed up local variables enormously, by avoiding dictionary lookup (opcode.h, ceval.[ch], compile.c, frameobject.[ch], pythonrun.c, import.c).  The .pyc MAGIC number is changed again. Added get_menu_text to flmodule.
0023078a0b Added whatis command (third try -- filesystem was full, rcs lock failed)
e7113b6b3d * Fix bug in tzparse.py for DST timezone * Added whatis command to pdb.py * new module GET.py (GL definitions from <gl/get.h>) * rect.py: is_empty takes a rect as argument, not two points. * Added tests for builtin round() [XXX not yet complete!]
04321d1e47 Use type(xxx) in stead of except TypeError.
8562c4cee6 Added some error checking.
9bfef44d97 * Changed all copyright messages to include 1993. * Stubs for faster implementation of local variables (not yet finished) * Added function name to code object.  Print it for code and function   objects.  THIS MAKES THE .PYC FILE FORMAT INCOMPATIBLE (the version   number has changed accordingly) * Print address of self for built-in methods * New internal functions getattro and setattro (getattr/setattr with   string object arg) * Replaced "dictobject" with more powerful "mappingobject" * New per-type functio tp_hash to implement arbitrary object hashing,   and hashobject() to interface to it * Added built-in functions hash(v) and hasattr(v, 'name') * classobject: made some functions static that accidentally weren't;   added __hash__ special instance method to implement hash() * Added proper comparison for built-in methods and functions
4b1302bd1d Generalized version of dictionaries, with compatibility hacks.
aff9470d23 Fixed watch cursor origin
7bbceea6a9 Added support for "compress" type video files.  This uses the Compression Library to decompress the images.
6b517fdc95 Added conversion routines to sv module.
e537240c25 * Changed many files to use mkvalue() instead of newtupleobject(). * Fixcprt.py: added [-y file] option, do only files younger than file. * modsupport.[ch]: added vmkvalue(). * intobject.c: use mkvalue(). * stringobject.c: added "formatstring"; renamed string* to string_*;   ceval.c: call formatstring for string % value. * longobject.c: close memory leak in divmod. * parsetok.c: set result node to NULL when returning an error.
f48b419a07 Fix syntax error (sorry!)
2d413788ca Remove debug print statement
0caf46b6cc VFile: fix c0bits etc. after setformat; Vrec.py: use setformat; rm Makefile.
c9e340db8d Definitions from <gl/get.h>
85f7bd5251 Vrec.py, Vrecb.py: 	 - call v.SetParam() after v.BindGLWindow() 	 - turn of dithering in mono/grey mode 	 - use prefposition to place the top left corner at (150, 150) 	   (so that the video remains visible during recording) 	 - default width is 256 Vcopy.py: correct typos; more verbose output. OldVcopy.py: new name for Jack's old grabbing Vcopy.py. Vstat.py: print values of all video parameters.
c97d2eddee Change Vinfo and Vaddcache to usr /ufs/guido/bin/sgi/python. Don't force packfactor to 1 in header when writing rgb data. Small bugfixes in Vcopy.
5e044b7009 - Separated grabbing (which isn't used much!) from VFile. - Renamed old Vcopy.py to OldVcopy.py, some cosmetic changes to it (is   it still needed?) - Added new Vcopy.py which does everything that Vtime.py does but also   format conversions, image scaling, and packfactors. - VFile: make packfactor always a tuple; introduce set and get methods   for pf, format, and calculate some derived values. - Added new module GET.py to std library, use it instead of defining   DM* in VFile. - Get rid of C programs (new Python programs can do all that they do   and they probably don't understand the current file format anyway).
b616ebe4e4 Rewrite applypackfactor() using imageop: faster and more general; get rid of testpackfactor(): not longer necessary
be6d77a9b8 Fix typos in jpeg code
83c81448b1 Fix terse mode for printing tuple packfactor and to avoid zero division
09bf3e310b Added audio recording to Vrecb
a557b0f34e Added jpeg conversions
ccd5bad471 Extensive changes to regex module (group(), casefold, etc.)
337b20e23e Added audioop.reverse() which reverses an audio sample
36d330bf36 * regexmodule.c: added use of translation table, substring() method.
970871f8e6 * Changed preface in texipre.dat. * Added libwww entry to Makefile. * Documented new array module. * Documented extensions to regex (last, substring, translation table).
778983b481 Added new module "array" (for now optional) defining array objects.
171a55bf56 Will now generate converters that go thru intermedeate formats
4fada9c8e0 Added converters for rgb<->rgb8 and rgb<->grey
fa1b9f63c9 Added dither() routine
1e0fdd8a6b Bug fixed wrt greyscale conversion
c82cfc86df Fix to allow tightly packed films to be converted
245be3a3c5 The usual cosmetic changes after Jack is done...
b05eaf1909 DisplayVideoIn - Class similar to LiveVideoIn but sends data from                  screen Dsend - Main program analogous to Vsend to send data from display
1d6821f58f Added support for 24-bit rgb movies
7961ea7868 Moved line-size stuff to single routine
eeec33f820 Companion to rgb2video: convert cmif film file to rgb files
a90805f1c0 This time really check in the new routines :-)
dd8a6eac57 Added lin2lin, findmax, findfactor and fintfit routines
22e44cd0b5 * clmodule.c: the documentation was wrong, so changed the interface   accordingly: SetMin, SetMax, SetDefault are no longer methods of the   compressor/decompressor but are functions of the cl module and they   take a first argument which is a compression scheme
3ea6161bb5 Cleanup of old files, added watchcursor.py (for Vedit.py), updated README.
9b86e1f5f0 VFile.py: fix bogus getrandomframe(). Vedit.py, VeditForm.fd: added scroll bar, Trunc, layout rearrangement. Viewer.py: added random access, qinfo() function.
4e2a4278e8 * clmodule.c: use function prototypes (found and fixed some bugs this   way); more efficiently check whether parameters are float; removed   one argument from DecompressImage method; use clGetParam instead of   clGetParams where it makes sense; convert int parameters in   SetParams, SetParam, SetMin, SetMax, and SetDefault to float when   needed; added QuerySchemeFromHandle method * Makefile: interchanged cstubs and cgen.py so that $> in rule gets   them in the right order
5fc677363f Added readdisplay() routine
852cc22bd3 Vrec.py: don't print Ids if no frames are captured. Vrecb.py: use the new interfaces to imageop (fix -M, -m, -g options).
1104a8562d lib1.tex: Added builtin.round(x, [n]).
9e51f9bec8 bltinmodule.c: added round(x, [n]); coerce() of two class instances will try to coerce anyway. classobject.c: instance 'nonzero' should first try __nonzero__ only then __len__.
e8a3c28f8d Added new audio library functionality (getstatus, float sample fmts)
38a22baea9 Fixed some memory leaks when things go wrong.
55cea47bae Changed adpcm routines to use 2-element state (was 3 element)
bf80e5407f * stdwinmodule.c: various new commands: setwin{pos,size},   listfontnames, bitmap ops. * listobject.c: use mkvalue() when possible; avoid weird error when   calling append() without args. * modsupport.c: new feature in getargs(): if the format string   contains a semicolor the string after that is used as the error   message instead of "bad argument list (format %s)" when there's an   error.
3f2ef09f40 Added usage() and help() to Vrecb, and turn on -f by default. Removed duplicate description of -r option from documentation file.
f0384fdb97 Introductory video documentation
4ab6ff80ff AWARE.py: New file with definitions for Aware Inc.'s compression algorithms in cl module. aifc.py: fixed a small bug.
6f5afc9a73 * ceval.c: ifdef out the last argument passing compat hack. * Fixed memory leaks in socket, select and sv modules: mkvalue("O", v)   does INCREF(v) so if v is brand new it should be XDECREF'd
995c33a2bb aiff.py, calendar.py: change functions taking a tuple to really take a tuple (now that it makes a difference to Python)
3a997279d5 CL.py, clmodule.c: Adapted to new CL library.  Lots of new methods. aifc.py: Several small improvements.  Use new methods from CL module.
8d733a00f0 added kludge for buggy soundfiler from SGI; when reading 0 frames, just set file pointer correctly instead of returning the complete file.
772eca639c Added options to make window bigger than video (for recording to tape)
41292a81a8 Added a comment about XS 4bit pixel support
62fda0acbd Use imgconv to try to do image type conversion
e6f49ecfa9 Initial (skeleton) version of universal image format converter
2c49017279 - Added LiveVideoOutSlow class (which only updates after full pkt) - fixed bug in setmirror - cleaned up some common code
34679b7661 * Added Fixcprt.py: script to fix copyright message. * various modules: added 1993 to copyright. * thread.c: added copyright notice. * ceval.c: minor change to error message for "+" * stdwinmodule.c: check for error from wfetchcolor * config.c: MS-DOS fixes (define PYTHONPATH, use DELIM, use osdefs.h) * Add declaration of inittab to import.h * sysmodule.c: added sys.builtin_module_names * xxmodule.c, xxobject.c: fix minor errors
35fb82a33f * os.py: _exit doesn't exist in all variations of posix * Added fcmp() to test_support.py and use it in test*.py
93f0740073 Fixed a bug where the library inadvertently skipped over the sound data. Pass an extra parameter to the compression library.
3ad7fc70cc Documented marshal.{dumps,loads} and sys.builtin_module_names.
d26b458325 Added tovideo routine
7564a641e5 Found and fixed a few bugs in the handling of audio files with MARKs.
eeabe7eb35 New module aifc to read and write AIFF-C and AIFF files.  See (extensive) comments in the file for usage.
0b0db8e3a0 Added separate main program for the Mac: macmain.c stdwinmodule.c: wsetfont can now return an error Makefile: add CL_USE and CL_LIB*S; config.c: move CL part around New things in imgfile; also in Makefile. longobject.c: fix comparison of negative long ints...  [REAL BUG!] marshal.c: add dumps() and loads() to read/write strings timemodule.c: make sure there's always a floatsleep() posixmodule.c: rationalize struct returned by times() Makefile: add test target, disable imgfile by default thread.c: Improved coexistance with dl module (sjoerd) stdwinmodule.c: Change include stdwin.h if macintosh rotormodule.c: added missing last argument to RTR_?_region calls confic.c: merged with configmac.c, added 1993 to copyright message fileobject.c: int compared to NULL in writestring(); change fopenRF ifdef timemodule.c: simplify times() using mkvalue; include myselect.h   earlier (for sequent). posixmodule: for sequent, include unistd.h instead of explicit   extern definitions and don't define rename() Makefile: change misleading/wrong MD5 comments
80530ce875 * Add some more tests for numbers * mainloop.py: don't use select unless absolutely necessary (for Mac)
9672e44842 Create CMIF-video file from SGI rgb images
09cbf9a7a6 Use full path for izoom.h include file
3c2eb5c5cb Added (optional) better scaling to readscaled
76ab5feb45 ushdr_t was not defined so fill in its size instead of using sizeof.
7b74176762 Close the window when receiving a close request; turn time into int.
e89341250d Added error checking. Improved coexistance with dl module.
dd104400dc This commit was manufactured by cvs2svn to create tag 'release098'.
e35399ea7b Checking in last-minute changes that are already part of release 0.9.8
775f4dacbc * Makefile: use cp -r to install the library * ceval.c: use #ifdef COMPAT_HACKS instead of #if 0 * Makefile: fix to make clmodule.c compile;   make config.o dependent on libpython.a (so date is always correct) * timemodule.c: now sleep() also takes a float argument. * posixmodule.c: added nice().
d513f0bcb6 Fixed various bugs in the adpcm routines
ed59d205a9 Various changes. * Makefile: svmodule.c.proto and svgen.py are gone, svmodule.c came in 	their stead.  Also, pass -DUSE_DL flag to thread.c and give 	the user a possibility to add the -DDEBUG to just thread.c. * ceval.c: init_save_thread() can be called more than once now. * svgen.py, svmodule.c.proto, svmodule.c: Removed prototype file and 	replaced it by the generated file. * thread.c: Added some more checks; added call to DL library when it 	is also used to tell it where the shared arena is so that DL 	can use some other area. * threadmodule.c: Call init_save_thread from another place.  Also, 	added new function getlocklock() which does to lock objects 	what getfilefile does to file objects.
fea2af1e9b * More changes due to stricter argument passing rules * Fixed calendar.py, mimetools.py, whrandom.py to cope with time.time()   returning a floating point number.  (And fix old bug in calendar) * Add recursion level to mainloop.mainloop(), to make it reentrant.
a2b7f40513 * Configure.py: use #!/usr/local/bin/python * posixmodule.c: move extern function declarations to top * listobject.c: cmp() arguments must be void* if __STDC__ * Makefile, allobjects.h, panelmodule.c, modsupport.c: get rid of   strdup() -- it is a portability risk * Makefile: enclosed ranlib command in parentheses for Sequent Make   which aborts if the command is not found even if '-' is present * timemodule.c: time() returns a floating point number, in microsecond   precision if BSD_TIME is defined.
349f2b516b Renamed vcopy to Vcopy (it is the only old tool that's still in use)
3f3c099e9f Get rid of C and out-of-date files
ec706ada62 Added usage message, minor cosmetic changes
42e9be4559 Fix typo in print message
5b40761856 Use plain python.
f1ceba61a4 setsize has two arguments: width, height.
6e0e668d1c Renamed Vrecc to Vrecb (*b*urst mode capture).
6bc8c7f3e2 Added mono, grey2 and grey4 formats
d7b67f261e *** empty log message ***
5dd997c59d Changed indentation to 8, use a better technique to handle window I/O.
de788b8261 fileobject.c: fix nasty bug; Makefile; turn on STROP and change lint flags.
de3adf9ef7 Added 2 and 4 bits grey formats
a3b986ed4c Added generic array handlers
9ef9c07ed9 Changed to use make_call
b637221d93 Full broadcast support
da164d2bff Clarified some parts
73065385e8 Changed to use new make_call method
8f1506b126 Complete broadcast support (both raw and via port mapper CALLIT)
fdcbbcb196 Initial revision
cdd04cad5c Initial revision
6252229170 Added remark about servers
b99457c35c Changed mkcred interface
fd92ac89cc Bind to reserved port if root; changed mkcred interface; added -t/-u option
79f85eedfd Changed mkcred/mkverf interface; added makesocket hook and changed init interfaces; added bindresvport call.
c91d60a640 Changes to protect servers against broken clients
424c673d2f Added server classes, and various robustness hacks
2eed1e796e Don't call test()
0270032423 Don't even show #test()
58dd035f3c Added comments.
7271babcef Compatibility hack with Python 0.9.6.
2f5dd888d1 Initial revision
a585444f7b Added compatibility hacks for Python 0.9.6.
3346b6ad49 Use 'l' as format, not 'i'.
fa83c7b31b Added some XXX comment.
c4698fbfbe Improved exception handing.  Added some XXX comments.
4ac605e627 Changes to some math using underscore as subscript, necessary since the new style file defines underscore as an underscore in tt font.
16b22193e6 Add timeout and retry to UDP version of protocol
63ae96e3d7 Fix spelling of Umnt.
38625352bb Support packing longs.
ad5f862125 Fix misunderstood readdir count (bytes, not dir entries) and minor other changes.
20f9960427 Add explicit auth call
749d0bbe6b Make auth handling different
195a4f70a3 Add explicit auth object
e3cafbe7b8 Initial revision
5f59d6018e * mymalloc.h: always allocate one extra byte, since some malloc's   return NULL for malloc(0) or realloc(p, 0).  (This should be done   differently than wasting one byte, but alas...) * Moved "add'l libraries" option in Makefile to an earlier place. * Remove argument compatibility hacks (b) and (c). * Add grey2mono, dither2mono and mono2grey to imageop. * Dup the fd in socket.fromfd(). * Added new modules mpz, md5 (by JH, requiring GNU MP 1.2).  Affects   Makefile and config.c. * socketmodule.c: added socket.fromfd(fd, family, type, [proto]),   converted socket() to use of getargs().
8de83e041c Actualized
ffd7fa3634 Actualized. Do import stdwingl
2219afcdfa bit vector is now implemented
411588c888 sv now raises sv.error, not RuntimeError
8307443175 Initial revision
2739c9cce8 Added cmpaf.py
57fc52578f Get official parameter names
a8413b2ef0 Choose a port that doesn't conmflict with real radio
e266344faf New 'finally' syntax
4128dedb8b Actualize
6c5c52583a Explicitly close menus.  Make '0' mean the last menu item.
93a35f40a9 Actualized
5ba6142723 Adapted to modern times
63f4cdcdb8 Adapted to modern times.  Cosmetic and comment changes.
0e71dc1106 Adapted to modern times and fixed a bug (id --> my_id)
8dd054d918 adapted to newest version of CL library.
4fff13faca CL.py: adapted to newest version of CL library.
23bafde01d /usr/local/bin/python
ee2ba6c2b4 Add description of kunst.py
2426331433 Unknown changes by Jack.
05e46ddec4 Use tzparse to avoid embarrasment in other timezones or when DST changes. Adapt to new, stricter, rules for argument passing.
89a78697b8 * Got entirely rid of path.py. * Many modules: fixes for new, stricter, argument passing rules   (most changes were automatic ones -- not all of this is tested!). * gwin.py: now uses mainloop.py for its main loop and window admin. * mainloop.py: always call dispatch() with event as a tuple! * Fix bug in pdb's 'clear' command -- don't set the bpt but clear it!
a8993cfe16 Fix for new argument passing rules.
9533ebe857 Band-aid to fix it for new argument passing rules.
3b25371ef1 Changes for supporting monochrome and greyscale video (not yet fully functional)
cf5dd9cbfd Fix bug when reporting error
15f27fb6ea Adapt to modern times...
1d9741742e Initial revision
d3592486ce Friendlier response to interrupt.  Use /usr/local/*bin*/python.
ff3da0502f Microscopic changes, comments/messages changed. Real important: turn off FIELDDROP in Vrec.
8ed294150e Added new modules mpz, md5 (by JH, requiring GNU MP).
95cd2ef162 Incorporated Jan-Hein's changes and texinfo conversion.
2a7178efe1 socketmodule.c: added socket.fromfd(fd, family, type, [proto]); converted socket() to use of getargs().
6209b97df4 Added output from testall run, for autotest.py.
85f1820ee1 Added some new tests and two new files for testing: test_types.py (testing operations on built-in types) and autotest.py (automatic regression testing).
d014ea6b5e * classobject.c: in instance_lenth, test result of call_object   for exception before using it.  Fixed a few other places where the   outcome of calling sq_length wasn't tested for exceptions   (bltinmodule.c, ceval.c).
18fc5696c8 * mainloop.py: added facility for calling select().  Also added   embryonic facility for pseudo-modal dialogs. * stdwinevents.py: added modifier masks for key/mouse events * renamed exceptions in nntplib.py * Changed string.join() to call string.joinfields() to profit of   strop.joinfields()
c89705d697 * config.c: Added audioop to lists. * Makefile: change default source directory * socketmodule.c: added getsockname and getpeername * bltinmodule.c: corrected typo in type() error message * Added new built-in functions str() and repr(): repr(x) == `x`;   str(x) == x if x is a string, otherwise str(x) == repr(x). * Added joinfields to stropmodule.c (string.join calls joinfields now)
df9320f8bc *** empty log message ***
d3b0f38db5 Support default port.
bfef4a0873 Added comments, use 'global' and change prompt to "ftp.py> "
bd07b31d82 Restructured into several subroutines.
21974798ce Added all_errors, list of all possible exceptions.
c68a40183b Use getsockname() if it exists
c567c60135 Added much functionality, changed some names (errors, login).
c629d34c4f * change default line numbers for 'list' in pdb.py * changed eval() into getattr() in cmd.py * added dirname(), basename() and (dummy) normath() to macpath.py * renamed nntp.py to nntplib.py * Made string.index() compatible with strop.index() * Make string.atoi('') raise string.atoi_error rather than ValueError * Added dirname() and normpath() to posixpath.
1115ab2a74 Initial revision
0317a4719b Added imageopmodule.c, also added them to Makefile and config.c. Fixed a bug in Addmodule.sh that caused a crash in Configure.py. Fixed the crash in Configure.py...
a1b51f374f Fixed comments
f3994ff9e7 Use /usr/local/bin/python
8208702f19 Added gopher.py; removed IN.py
6b8d699ea3 Initial revision
a9e7dc1081 * bltinmodule.c: added built-in function cmp(a, b)
2db91358de Misc changes and new modules.  whrandom is "objectified".  SOCKET.py is moved to the sgi subdirectory.
0cb8e8cfc0 Add .fdc and .rgb to default list of ignored extensions
4df20fa80f New tool Vfix: truncate the right edge of 'grey' type images to make the scanline width a multiple of 4.
384f24816b Lots of little fixes. - merged CloseCompressor and CloseDecompressor into one function - keep existing errors in error function (for exceptions raised in the   Compress or Decompress callback functions) - remove newline from error string generated by error function - allocate less memory when compressing multiple frames - keep existing errors when clCompress or clDecompress fails - raise an exception when compressed data doesn't fit within   dataMaxSize bytes - allocate frameSize bytes for decompression buffer instead of   dataMaxSize - use mkvalue more often - new function QueryParams which will accept CL.AUDIO and CL.VIDEO   args - changed some function names
9e3f335bea VFile: added new formats 'jpeg' and 'jpeggrey'.  Decompression is done using module 'jpeg' by the Displayer class.  (Unfortunately it's too slow for real time.)  Print file size in printinfo() method.
3165fe6a56 Modified most (but not yet all) I/O to always go through sys.stdout or sys.stderr or sys.stdin, and to work with any object as long as it has a write() (respectively readline()) methods.  Some functions that took a FILE* argument now take an object* argument.
3a40ae4ef3 New shell script Addmodule.sh makes it easier to add a new optional module by editing Makefile and config.c in all the right places. Used it to add most modules currently known.  Added markers to help the script to Makefile and config.c.
7c4eb40a1a Changed an ifdef from IRIX_405 to CDsetcallback.
37f17b726c Fixed the last known bugs.
f8848acca3 Added resizevideo() interface to LiveVideoIn and rationalized size adjustments (somewhat).  Adapted Vsend to use it.
d65f45da26 Added resizevideo() interface to LiveVideoIn and rationalized size adjustments (somewhat).  Adapted Vsend to use it.
cfb6bb2a30 Changed the init() interface of LiveVideoOut to read out the window size automatically -- the video is always centered.  Added resizevideo() and reshapewindow() interfaces.  Documented all methods. Changed Vsend/Vreceive to use the new interface.  Allow window resizing by the user in Vreceive.
691e59bcb7 Python equivalent of <netinet/in.h> (SGI specific, hence not in python/lib).
7b47c79a4c Added options to Vsend and Vreceive; moved common defaults to senddefs. Optimized LiveVideoIn quite a bit; removed print stmt from LiveVideoOut.
67b4895291 Added multicast to Vsend and Vreceive.  Updated README. Rediced queue size to 1 in LiveVideoIn.
46927bac96 Defined exception cd.error which is used for errors other than TypeError, MemoryError and such.
e7daaa3a01 New module "CL" (Compression Library) for Irix 4.0.5 and higher.
d53a4f3d14 New built-in module "cl" (Compression Library).  Only for Irix 4.0.5 and higher.  Made a few improvements to previous version.
2b65c03603 *** empty log message ***
7814c10233 Better way of deducing mcast group bytes.
c8833d4ad3 Add -b option and sleep shorter.
590177bc88 open() now raises IOError, not RuntimeError!
c431549e21 New built-in module cl, the Compression Library.
ba06615c9f New modules LiveVideo{In,Out} (interfaces will change!). New programs V{send,receive} to send/receive video over UDP. Comment typo changed in Vaddcache.
42e07afe3d Vrec.py: sv now raises sv.error instead of RuntimeError. VFile.py: support for showing partial frames.
66122d2dae __oct__ and __hex__
7a461e5aaf New module regsub contains sub(), gsub() and split() as in nawk. string.splitfields(s, '') now returns [s] as split() in nawk. Added _exit to exported functions of os.
7066dd75c5 * Makefile: added IMGFILE; moved some stuff around. * flmodule.c: added some missing functions; changed readonly flags of   some data members based upon FORMS documentation. * listobject.c: fixed int/long arg lint bug (bites PC compilers). * several: removed redundant print methods (repr is good enough). * posixmodule.c: added (still experimental) process group functions.
c2670a000b posix: added setpgrp() and, if sgi, setsid() and setpgid(pid, pgid)
1899c2e055 Made builtins int(), long(), float(), oct() and hex() more generic.
5c85062e1c Makefile uses $> more often; cgen supports filename argument; added lower, upper and swapcase to strop; cosmetics.
d10d8291f1 Added C++ support in thread.h; don't use signals if not strictly necessary, and when they are, use SIGKILL; when compiled with -DDEBUG, only print debug messages when "THREADDEBUG" is set in the environment.
0aead9f1ba Allow broadcast using setsockopt()
4fab6a5b0b Initial revision
00c5ad6eeb Added mcast demo .,
5c1797ac23 Utility to add a cached index to an existing movie file.
269b2a2eb7 VFile: The Entry-Indigo trick doesn't work on 4.0.1 hosts. VFile: RandomVinFile can now write the cache to the file. Vinfo: use the cached index if present and print a message whether it's there.
3577113d83 Added post_mortem() and pm() interfaces to pdb and wdb. Added colorsys.py (color system conversions). SV.py: new version for new svideo.h (Sjoerd). DEVICE.py: added VIDEO event type.
7b3c8a1422 Added hint about changing the prompt in $PYTHONSTARTUP
aee087946d Made struct a standard built-in module; added string args to {set,get}sockopt; added gl.gversion().
4526f379bc Fixed "clear()" and added "clearto(r, g, b)". Added class RandomVinFile which supports random access and warming the cache. Added eofseen and errorseen methods to BasicVinFile. Use RGB mode for rgb8 data on entry level Indigo. Minor cosmetic changes.
2de9b68fea Clear the window when receiving a REDRAW event and not playing
00ffea3615 Use vin/vout.clear() instead of gl.clear()
87b74730c3 New module 'colorsys' implements conversions between different color systems.
e1783324ab Adapted the world to the new VFile.py.  Fixed bugs in Vplay.py: missing -n in help(), bogus frame skipping; and added patch for weird time jumps.  Removed colorsys.py (now in std library). Fixed "sys.write" error in vcopy.py.  Restructured README.
4045c2fa5b Almost completely rewritten for cleaner code.
32517f9427 Remove PAL dependencies; add -w option (initial window width); add stepunit(8, 6) call.
94472a0374 classobject.c moduleobject.c stdwinmodule.c xxobject.c: raise AttributeError, not KeyError, when attribute deletion fails. sunaudiodevmodule.c: check for deletion before calling setmember.
9a4e3fc56a Changed references to /usr/local into /usr/local/bin. Documented $PYTHONSTARTUP
2dff991f6b Give code objects a more useful representation.
97f0277208 Restructured (yet again) to treat all modules more alike.
cf7448bfa0 Correct debug printing code
3702284d2a Correct spelling in function name
888d205fff Print warnings to stderr and correct spelling
ba3690cd09 Remove outdated warning in comments.
67daef567f Remove bogus type-and-refcnt setting from newsizedstringobject().
a5f61380f8 Got rid the bogus cache code and fix some unchecked errors.
ebc8c51cde Compare instance methods by comparing the object and the function.
aa7ca2dc1a Use getargs() everywhere now.  Standardize lay-out yet more (an ongoing project :-).  Change object administration: objects are removed from the list of known objects as soon as their form is destroyed.
3d1e146086 Improve check for offset out of range
f2c8beba0b AOnly define NDEDBUG if DEBUG is not defined
2e8f6140ff If a type has a repr function but no print function, printing it now calls the repr function.  When the refcount is bad, don't print the object at all (chances of crashes). Changes to checking and printing of references: the consistency check is somewhat faster; don't print strings referenced once (most occur in function's name lists).
99bec95482 Add some debugging features if DEBUG defined (fetch the filename as a string so I can see it with dbx, and set f_lineno); call abort() when detecting an "undetected" error.
59bff399a0 Add sys.exitfunc feature.  Make askync non-static.
da8cd8638f Add $PYTHONSTARTUP feature.
14b4adbd33 Add an optional interface to turn malloc debugging on and off.
e270b432f3 Re-implement some operations from string.py in C, for speed.
be0cba4d5b Made it work with the sub-spec burst capture interface (no bit vector)
44c1f698a5 Added more info
db96c5a7d9 Initial revision
62f6bc8e55 Adapted to new video library -- different capture interface, no bugs. Also use locks and Queues for communication with other threads.
da3eee99e8 version for new library
4e16098ce7 Added a _v21 def to FL.py and added two new input field types Added runcall(func, *args) interfaces to profile.py, bdb.py, pdb.py, wdb.py Added new module bisect.py and used it in sched.py. Mostly cosmetic changes to profile.py (changed output format).
2179945eec newest version
aee8bc1fab adapted SV module to the new svideo library. update thread package.
e0be2b36b6 Added a clear() method to VFile class, to be called when the window receives a REDRAW event
61700bb985 cope with filenames containing spaces
0b2b440a13 all Long constants have an L suffix, not l; added an output() function to move the I/O out of the algorithm
0cc19450e2 Use regex instead of regexp
f2e1cfb8f3 Use regex and don't use path
a93265a666 suppress unnecessary error message if too many arguments are passed
a43111118f Cosmetic changes to Vedit and -Form.
354166fa05 Changed to use regex directly instead of regexp.
9022fceae8 New module implementing a multi-everything queue.
9ee7e15966 Created Vedit.py, the video editor.  This uses the classes in Viewer.py. Viewer.py in turn requires changes to VFile.py (unfortunately that file is now a complete mess...).
e1b4d7ce14 Added rms, maxpp and avgpp methods.
8eace20f68 Removed debug statement
33a8d428db Clear the window to rather light grey when switching to RGB mode.
e755aa50e2 Redesigned option processing and added several new options. Added optional read-ahead thread. Changed mouse interface.
8a861be7f3 Add audio recording
3accf984b3 Added method to write image files.
815adc9870 New files.
99e237f809 new Vtime.py: manipulate time codes.
78aab86201 Lots of changes, options (from Vtime.py) etc. Cleverer skipping of frames.
9a35d57ab2 Added reopen() to VinFile with semantics of old rewind(); rewind() now saves the cache. Added getinfo() to VoutFile. Fixed writing of 'grey' file header. Added quiet parameter. Adapted to new syntax.
dfb61fa2cb Minor improvements: exit status, data size stats.
180924d575 Initial revision
0e389af0c9 Use \input instead of \include (or \inclide)
ae507a42a0 splitfields(s, '') is illegal
732282fa11 Module getattr doesn't exist any more, it's now called newdir.
1e28e5e596 * renamed malloc.h mymalloc.h, and added MALLARG as the type of the   argument to malloc() (size_t or unsigned int)
b001f7adb1 rearranged modules alphabetically
90ddb7b5cb unpack() now returns a tuple, not a list
3af03d8f3e don't call gl.foreground and create a new window after all (seems to break window positions in .Xdefaults)
f9a2d33f01 fix *serious* (new) bug in testbool: by default objects should test true, not false!!!
448f4bf45a added getname, getdefault and getminmax functions
2b81dc9c00 fix *serious* (new) bug in evalfile: forgot to initialize s!!!
7268c93c55 Minor improvements, comments; fix Vinfo -d.
8b9c734e12 Add comments
82534fd828 Add comments and options
bc0eb9967d Add close() method to VinFile
b2e822849b Added some new comments and files
66beddb844 Hacked in audio support.
74a3f8b6c0 Initial revision
44b8e81c42 Change window title: prefix '* ' means playing.
7ff90ef714 Adapt to new syntax and don't print garbage on self.close().
843d153f99 Initial revision
f9f2e82fca New thread.c from Sjoerd, supports _exit_prog().  Use this in goaway() to avoid hanging in cleanup().
0297512a08 struct: pack/unpack binary structs; fcntl: fcntl(), ioctl().
94390a4eaf use getargs() in more cases; oct(0) should return '0', not '00'
2c475427c2 oct(0) should return '0', not '00'
96caaee836 check for embedded \0 in strings for z and s formats
6d946f98bd * macmodule.c: include allobjects.h, not .c * timemodule.c: the mac has no unistd.h * classobject.c: fixed several cases of return NULL that should be   return -1 !!!
e6eefc2231 * classobject.[ch], {float,long,int}object.c, bltinmodule.c:   coercion is now completely generic. * ceval.c: for instances, don't coerce for + and *; * reverses   arguments if left one is non-instance numeric and right one sequence.
70d7a310a9 * xxobject.c: added tp_as_number, tp_as_sequence, tp_as_mapping to   the type object.
2670a16c2e Added chapter titles in comments
084b0b2c16 Fixed botched lay-out in class example
abff0fdab1 Moved chapters each to their own file. Real changes: (a) added section on special class methods. (b) corrected typos spotted by Stoffel Erasmus.
da43a4ab88 Initial revision
46f3e00407 Initial revision
39789030bd Fix bug introduced by Jack (duplicate def of qread)
743db36cd2 Modified to allow other threads to run in a multithreaded environment.
1738388c59 Dumped \cbstart, \cbend
e876949f2b Initial revision
04691fc1c1 Changes so that user-defined classes can implement operations invoked by special syntax: you can now define your own numbers, sequences and mappings.
423d6c6bca DO_TIMES must now be defined in the Makefile
38fbf52b8e Made module regex optional; added optional module nis.
df72a655b9 To ignore a call, cast it to (void), not to (void *)...
3562d52e93 Added error handling and free resources.
9de7a01e0e NIS interface by Fred Gansevles <Fred.Gansevles@cs.utwente.nl>.
a1ed37cb59 Last-minute changes for release.
260cc1a857 Initial revision
814d7cd492 added broadcast.py, ftp.py, radio.py
c2b2a0401b *** empty log message ***
ff535a1b44 Almost totally rewritten.
da8c3fd979 Fixed descr of try/finally
4732ccf642 Added emacs.py (for misc/py-connect.el). posixpath.py: added undocumented expanndvars() (expands $VAR in string).
21803b8a6f Makefile, Configure.py: ##ask --> ##[el]if[yes|no] posixmodule.c: waitpid() is separate
b7fc4afe1b Warn that _ must be in tt font.
5e0759d351 Add chapter on classes (mostly from ../misc/CLASSES).
2d4aa4f5d4 Removed *.libs (now in ./sgi); added gettext() method to TextEdit.py; fixed string.atoi() to ignore leading zeros.
de126a6ff8 Replaced max=-1 by max = -1.
ff4949eeee * Makefile: cosmetics * socketmodule.c: get rid of makepair(); fix makesocketaddr to fix   broken recvfrom() * socketmodule: get rid of getStrarg() * ceval.h: move eval_code() to new file eval.h, so compile.h is no   longer needed. * ceval.c: move thread comments to ceval.h; always make save/restore   thread functions available (for dynloaded modules) * cdmodule.c, listobject.c: don't include compile.h * flmodule.c: include ceval.h * import.c: include eval.h instead of ceval.h * cgen.py: add forground(); noport(); winopen(""); to initgl(). * bltinmodule.c, socketmodule.c, fileobject.c, posixmodule.c,   selectmodule.c:   adapt to threads (add BGN/END SAVE macros) * stdwinmodule.c: adapt to threads and use a special stdwin lock. * pythonmain.c: don't include getpythonpath(). * pythonrun.c: use BGN/END SAVE instead of direct calls; also more   BGN/END SAVE calls etc. * thread.c: bigger stack size for sun; change exit() to _exit() * threadmodule.c: use BGN/END SAVE macros where possible * timemodule.c: adapt better to threads; use BGN/END SAVE; add   longsleep internal function if BSD_TIME; cosmetics
25bec8c8dc Sometimes, recvfrom() returns an empty address; this is not an error. Also, get rid of makepair() in favor of mkvalue().
099d923344 new file for SGI Video
1984f1e1c6 * Makefile adapted to changes below. * split pythonmain.c in two: most stuff goes to pythonrun.c, in the library. * new optional built-in threadmodule.c, build upon Sjoerd's thread.{c,h}. * new module from Sjoerd: mmmodule.c (dynamically loaded). * new module from Sjoerd: sv (svgen.py, svmodule.c.proto). * new files thread.{c,h} (from Sjoerd). * new xxmodule.c (example only). * myselect.h: bzero -> memset * select.c: bzero -> memset; removed global variable
4fbf798f86 * myselect.h: bzero -> memset
f16eda5ff8 cdmodule.c: 2 minor changes by Sjoerd.
e10a19ea6d listobject.c: added optional cmp function to list.sort().
7b2c03f39b New rotor methods: setkey(), encryptmore() and decryptmore().
e6e9fe18bb Changes to make it compile under SGI -- revamped new/dealloc a bit.
500982062f New file rotormodule.c (by Lance Ellinghouse).
c10aa77cb9 fileobject.c: fix fatal bug in getline() (forgot to initialize fp now)
741c81a51f New module to support decoding multipart messages (also see mimetools).
01ca336ed1 New modules mimetools and rfc822. Minor, minor changes to commands.py and sndhdr.py.
eb23155a8e Changed calendar.py to define lists of literals instead of tuples. Got rid of old module 'localtime.py'.
ca7b213b46 Initial revision
0b927e2e3e Added description of pp.py.
5b34373b49 > * Makefile: always create .ps files; add qua to 'all' target; >   added 'clobber' target
b64e63545f Added conversions to/from ADPCM(-4); renamed adpcm to adpcm3 (what it really was).
d7297e61df Makefile: added instann rules and $(*DEST*) defines.
3ee199e0cd added WE_KEY detail format to stdwinmodule.c.
dd9ed839d6 Added qgetfd() to cstubs for GL. Added new module dbm (interface to ndbm).
8e7a0f026e Added  adpcm2lin and lin2adpcm.
9d47992719 Use "myselect.h" as intended.
1f4f7435c5 Remove bibtex log file.
ed233a5696 Changes for new UNIX-specific built-in module 'select' and new header for interfaces to variants of select() system call, "myselect.h".  This includes adding fileno() methods to files, sockets and stdwin.
5dc8eb0914 sysmodule.c: calling sys.settrace() or sys.setprofile() without arguments crashed in INCREF() calls which should be XINCREF() calls.
710e1df585 Some UNIX types want the exact size of the address structure
dfd6e46779 Fix for SEQUENT by Jaap Vermeulen
047979e3d5 Fix regexp recognizing comments to cope with unterminated comments.
aad5344fc1 Fix bug in ulaw2lin for 4-byte values
0e69587dc0 Added {get,set}sockopt().  allowbroadcast is now obsolete.
a3d50763a2 Change recipe to build qua.
6a11eb4e17 Initial revision
54e39908d8 Fixed comparison: i < k < j should be i <= k < j.
c7ff85d612 Documented new contents of lib5.tex
138e6bf66e Removed confusing, incorrect comment.
3dd8c9895e   fixed bugs in generic_setattr (returned NULL instead of   -1 for errors)
000239517d added BYTE, CHAR and unsigned variants
ab2490a6d5 Added new types to setattr() as well...
f0476350b8 Added 1992 to copyright notice
2c4be64f20 added readscaled() function.
9c52e0ff32 Initial revision
c888bf7cae append the default path to $PYTHONPATH; ignore empty $PYTHONPATH. default DATE is now 3 Jun 1992
73b715e259 Initial revision
b1ccc6afe0 Improvements by Sjoerd
6c6b6094fc Improved functionality, by Sjoerd
05b55e76f0 Fix pnm test for short files and add X bitmap as recognized type
d482e8ad4a Remove reference to obsolete module 'audio'
ada67ec3e1 Comment out debug prints (by Sjoerd)
b66efa0d75 Initial revision
1c34fc7afb Initial revision
b83ec8f58d Initial revision
c99a4f900d Change of names
f628a985ff New == syntax
61cfd96003 Added two #! lines
ceb86daa16 Change the way ignore is assigned to
9d741a79c0 IOError instead of RuntimeError
ef96359379 Small improvements everywhere; added info field to the display.
157e3f8a11 Now uses module 'sndhdr' to recognize most sound header types, guess raw file parameters, add Rate menu, call SOX to convert file types or sampling rates that sfplay doesn't support.
cb4b2959f8 Make it at least legal grammar!
f62e1dd0c4 Initial revision
4f0578ddfd Added jukebox
5773798e50 Mark's name is Callow, not Callows
178969df92 Added support for CD module
86d2568e16 Initial revision
46003ff66a Added gete?[gu]id functions
899dcf36a0 Added parameter decls to do_mkvalue for non-template machines
37fa454c11 Initial revision
4476670761 Append /ufs/guido/src/video to sys.path.
fa3de516f5 Print real width and warn for stride not a multiple of 4 bytes
864cde2831 Warn if stride not a multiple of 4 bytes; use PM_SIZE instead of 5.
edb3a5fcf2 Standardize indentation to 8 chars; remove redundant "saveframe"; add -s (short listing) option; don't print space after tab; print data size in bytes and whether it is a color image.
2c8bf9d400 Define colorinfo even if no header line found
9ea0fbc6de Unmerged except and finally clauses
8899a9ca40 Add names for perm bits (S_IREAD etc). Only extract 4 bits of mode to get the file type
e238829359 Add CDDA_DATASIZE to exported constants
509d24aac3 fix a typo in samestat() (ST_DEV, not STD_DEV); rewrite ismount() to compare stats of path and path/..
c3c7ac8ba7 Wanneer er geen disk in de speler zit falen sommige routines.  De exceptie heeft nu in dat geval als argument "no disc in player", behalve wanneer de bibliotheek routine errno zet.  In dat laatste geval wordt (nog steeds) err_errno() gebruikt.
cbcdff7fcf Don't use \ for continuation lines; minor changes.
a3cd071e4c DISK is written with a K
58230c3a05 Changed caching code
9ac9063cef Added comment header; don't use undocumented internals.
dee5d8eb04 The getstatus() method of a Readcd instance always calls self.player.getstatus().
60c225c27c Rewritten (by Sjoerd again) to use module readcd
daea6c842e readcd is now part of the standard library (for SI)
d9feb59b32 Adopted new readcd interface; caught interrupts
f94e309321 Initial revision
8176258421 Initial revision
6f1f39188c Fix finally syntax
f8b7e926e0 Initial revision
08d962260e Document cdaiff and readcd
67aad284dd Fix use of exceptions; new getstatus(); command line argument for trackno.
632d49274e renamed readcd to recvcd (to avoid conflict with Sjoerd's reacd class)
f4be726da2 Changed status format; added host argument; documented arguments; fixed code for missing frame argument.
b108e976a4 Track info is now two triples instead of six number
d5d1912e28 New getstatus() return. Use togglepause() only if playing or paused.
ece6efe5d1 Return more structured data in some cases
e55fef1799 Moved a few lines out of the try statement
e8b8207571 added main() call
b385328fbc added comment and main() call
4bd4147569 cosmetics
dbdeebbbfa improved lay-out; added call to main()
f2759a5c2d made it a little nicer; use CDDA_DATASIZE; restore output sampling rate
9183aaa463 Change comments about SGI subdirectory
b950629b90 Initial revision
9a1425d4fd Initial revision
16b8f3047f Initial revision
5a8f824933 Added declaration for mkvalue()
2ee12f4090 Use mkvalue() instead of painfully constructing values
fc61adb5f1 Merged with Steve Miale's version
3cfe6faffe Added mkvalue() function
bd9ccca812 Test for NULL coming out of err_get() in call_exc_trace()
801dcae64d reverse sense of test for CHECKEXC
d9f5733a92 change the date to say >= 6 Apr 1992
336b591e55 in form_dealloc, only hide the form if it's visible
cf49ac55ac Added missing change log entries
fff3a1ee05 Added help() fn; use os.sep
e33cb80d5e Also remove @* files
379537805b Moved a4wide option to myformat.sty
6a1f089420 Use *args syntax instead of +args
b59cdd4356 Add separator
aa1e140f03 Don't use times by default
d18b8afcbb Change description of a4wide removal
ec24f1fc2c Input a4wide here
5b7313a982 Arg of cmp_outcome becomes an int for portability to the Mac
02334d2be0 Use only '*' for varargs list
57639655c7 New copyright
7cdf5eb5b9 Don't use NULL as 0 int!
74b31c9826 Latest gramamr
d33024c451 Copied doc style from other docs
cd7bf39c16 Made ready for release
bab9d03855 Copyright for 1992 added
f1644a54ad Don't define DO_TIMES (now in posixmodule.c)
22db57e4a2 Added times() (from time)
94fb82e461 Only * can be used for varargs argument lists
8dd79cf788 Don't allow assignment to attributes named __*__
5113f5fd34 Copyright for 1992 added
eee3fd495a (Hopefully) fix bug in reference count in call_exc_trace() plus minor rearrangements found during debugging
e765f7dbae Fix reference counts of sys_trace and sys_profile
33693ea92a '+' no longer accepted for varargs list
ceb3ba2afc Different syntax: cannot mix except and finally any more
6886c835aa Added \exindex and \obindex
2974e3bad1 mostly added index entries.  PRINTED
7084ec8167 getattr() is now built-in; no longer need a class to simulate varargs.
60279da7f5 Almost through with revisions.
bdbadd4ca1 Added style options twoside,a4wide,11pt
aa257d90da use os and os.path
bf1710ac5f use std module os
50399ae583 mac -> os (can't this go now dircache is universal?)
d9596e3a79 mac -> os
25d7cafd8a posix -> os
3bc034bb79 Use bitwise ops instead of %; added some warnings and comments
e58f98bfcf path -> posixpath
41f9503c11 Mostly rewritten to be more flexible and more portable ./
1a76ef260d Added definition for pardir ('..')
c96207abb3 posix -> os
a05026b38d 'cat' no longer exists
2684738d2f Renamed to posixpath; changed def'n of split().
627efd94e9 Some weird forms of try statements are no longer allowed.
643d9326e4 Don't define the page lay-out here -- rely on A4wide, doubleside options.
2c81957ba1 tightened try statement syntax
af82141bb6 Tighten syntax for try statements
14f43cf5dc new '==' syntax
453bd408bd Initial revision
6da6aebfdb Initial revision
715a653152 Initial revision
4a5ab81bc9 posix -> os
3a585bb964 small fixes
9a6757dade posix -> os
391b8b7dee change posix/path to os
01ae0a68ca change posix to os; and change error message
e7b88e7402 change posix to os
b2ac8092a8 change posix to os and path to os.path
4ea570d972 Adapt it to modern times (0.9.6)
9cf8f3372c Initial revision
7ebb23c637 Added guesstabsize() for the mac
719f5fa86a lint fix
dcc6ef2144 fix HUGE and MAXVAL (suggested by Tim Peters)
df840d911f lint
704a26c5f3 lint (added flushline() interface)
0a066c07ac lint (added prototypes for all static fns)
3132a5a7dc answer lint's complaints
f1aeab7f81 fix what lint found
8b27d929a6 Lint stuff (involves casts, yuck!)
eec181ae88 Lint ./
2a591667bd Lint
4f1691d0d5 Remove redundant vars
0c182a1322 Fix lint bug
96163c1dec Lint...
9abc539846 Lint fluff
559e55f73c Make it lint-free
85998fa069 Silence lint
51415a7b3b Quiet lint
292bb8ea33 Shut up lint
2807d191f0 Shut up lint.
50e61dc259 Check empty argument lists. Lint fixes (and include <unistd.h>)
2762f250eb Initialized sigsave to shut lint up
d15b73353f Lint fixes.
e3d7045e47 Add -v option (verbose) and get rid of finaloutput() function (unused)
4cd8b5cad8 Print messages about where from modules are imported when -v is given.
2bac4d3368 Added forms_(de)activate_all_forms functions; minor lay-out fixes.
26e67b0db8 Don't import fl (it tries to initialize GL) but assume it's always v2.0.
6ff2e90c51 Add function to expand tabs.
cb7ce349e2 Add a function to return just the line number of a code object.
c341c62e81 Search through the module search path. Add a warning to the top that this is the case.
b5a40dcade Initial revision
edbfcbd7ef use settrace() intreface
35dcf454e1 Document sys.settrace().
91ece4205b Guess tab size on the Mac from tab resource.
24e77d429d Commented out debug print statements; be a little more clever about strings containing backslashes.
c1b5cec10e *** empty log message ***
be3eb96e2d Use \include instead of \input.
cd8077603a Got rid of display_form() (same as show_form()).
3e94197a52 Improved error handling.
b3a0e4c842 Implemented show_choice(); moved items around a little bit.
9b9ccd3fe3 Moved definition of search path DELIM here (from sysmodule.c).
e2437a191d Added settrace() and setprofile().
d510c786b8 Added definitions of sys_trace and sys_profile
9c8d70de45 New trace implementation; and profile (in a similat vein).
cb9d66da59 *** empty log message ***
cbc1d90cda More functionality by Jack (untested by me)
10d10ffb1b Change the order in which Floatnumber and Intnumber are tried so it will correctly recognize floats. Fix the test program so it works again.
29be3b97a6 Initial revision
56a1bcc107 Totally get rid of silly '\E' escape.
22ebe2f4a7 Strip leading whitespace from input().
27aaa6daa9 Add interface to times(2).
b83241c0bd Much simpler version, intended as a script.
b75d8cea54 Moved macros to myformat.sty.
0e5f0097c4 Back to the Makefile...
573805afd6 _ can now be a normal character.
5badc75f8d Moved macros here from lib.tex.
b5e1c184be Completed missing parts.  Restructured ch. 3/4 to Data and Execution model.  Added index.
f08ab0ad15 Skip leading whitespace of eval() string argument.
e785fbcfa7 Allow NEWLINE* after eval input.
d8b1d37bd8 Append a NEWLINE token at the end of a file.
aa9de679b5 Initial revision
c4adc83378 Set sys.last_{type,value} to characteristics of last unhandled exception.
febd551bab Change error handling.  Call clearerr() more often.
299a734744 Tighten error handling of string printing.
2ba9f30489 Initial revision
becdad3d5e Check for binaries and non-python scripts.
fcd1e6ed4d Added '-l[flags]' option.
8b83bce883 Better intro; added some new scripts.
cf8148b953 Completed execution model and try statement.
bff5bb3db9 Use fnmatch; read ".xxcign" for additional patterns to ignore.
dbd83aa4df Initial revision
2080b347f4 Added class VoutFile. Added rgb8 support. Added cache of frame offsets to VinFile. Misc hacks to grab rgb8 data.
444db07d3c Get rid of RuntimeError.
4fe872988b Make tabs always 8 spaces wide -- it's more portable.
06a6702dc8 Addef gflush
355a33dc6e Initial revision
d8bac6de57 Move SEP to osdefs.h.  Use MAXPATHLEN from osdefs.h.
7169dbb76d Move printing of filename and lineno to tb_displayline. Search sys.path if the filename isn't found. Include osdefs.h.
0f61f8a4bd Added execfile().
465c499544 Added a cache so that the slow parser isn't such a problem in practice.
9b1d33b105 Use correct prototype for invert().
cdc9355367 Set parskip to 0 in the table of content.
2bbb3c0ed3 Initial revision
1d8428f3fc Minor reorg.
676d6dadb9 Added ref and qua; forget about the Makefile
19f2aec581 Initial revision
f47d0485a0 new syntax
d61bbb33f7 Better check of input data?
58b38ccc9d standardized lay-out; new syntax.
5778949295 Get rid of comment about open().
16dfd29e44 Limit length of name passed to sprintf.
c4884007f9 EOF in source is a SyntaxError, not an EOFError.
4ddf8cc408 Get rid of "Unhandled exception: " altogether.
c39de5fe61 Added uname.  Made lstat/readlink/symlink unconditional (the latter two raise posix.error if symlinks aren't supported).
3c8ba7a1ea Fixed getargs() call in setfont. Improved setwincursor() to allow None to explicitly turn the cursor off.
862c6f1046 Added stuff about classes and instances, plus some smaller changes.
9b57385c9a Excitem now has only one argument.
255ad6e659 Described some more standard types and statements.
3bead0984c Initial revision
19a86e72df Added MINHEIGHT.  Use self.dict as environment for evaluation.
fac6da22ff Added a method "format_stack_entry" to be used by derived classes. Forget about the temp file.
d7d8cd44c1 Don't print repeated commands.
23efba4cd1 Rewritten to use bdb.Bdb as base class.
576136044c Adde getmargin() method to calculate the width of the margin.
6fd42b8e92 Split in TextWindow and SourceWindow. Count lines in Python.
0bf32e3c78 Split in a number of subtest for easy maintenance and continued Mac support.
fa3da8aa7c Include modsupport.h for getargs().
33894be657 Added getattr and setattr built-in functions.
ef0a00ec0c Use getargs() function.
550fbcc2aa New getargs() function.  Define macros with conventional names, except get*str*arg --> get*Str*arg; get*str*arg fetches a C string.
9c16d7fbac Cal get*Str*arg() instead of get*str*arg(), until the code is fixed.
9db23a8c5f Change prototypes decision.
cb4eeddeea Don't print "Unhandled exception: " when one occurs -- just print its name.
3b1a57a4a0 Ported to THINK C.
922cfad5a3 New getargs() function: a single varargs function, guided by a format string, makes all get*arg() functions unnecessary.
d577c0ca90 Fix range error (doc and impl of re_search disagreed!) Use getargs() function. Drop re_string from re object.
fc58e58cb7 Use getargs() function.
521f81ca26 Retract the rage bugfix, but change the range assertion.
610cdc52ca Add '*' for varargs list.
56cd67ad47 Get rid of redundant type checks. Define % operator similar to int%int.
5ad58c6aef sysset(name, NULL) does nothing if sys.name is undefined
e0513dee58 getbinaryname is now part of dl_loadmod.
b7e5160838 Add method to call wsetactive(win).
2d78590183 Make "range" one smaller (discrepancy between doc and source for regex.c!).
598fd8c980 Raise SyntaxError for syntax errors detected in this phase.
bd7fd1a225 Use output from h2py.
27060c004e Minor fixes.
b53e67837b Initial revision
177dd80799 Experimental version writes the command to a file.
babe2bf8f4 Initial revision
68c172e3f2 Change \verb\xxx\ in section titles back to {\tt xxx}.
0f1f9da8e2 Another large run of changes and additions.
5f21dd106f #ifdef'ed an unreachable line out.
8401e5678c Added -d option (increments debugging variable); mostly to get rid of a compiler warning.
acbefefe21 Use strtoul() for oct/hex constants. Accept * as well as + in varargs arg list.
b674c3bba5 Initial revision
1cab95c14d Use Tatu Ylonen's copyleft-free reimplementation of GNU regular expressions
44c8f69ff2 Added typedef for longobject and declarations for long_{format,scan}.
e32e014c7e Add prototypes. Change / and % to match divmod.
3d09543472 Move the longobject typedef to longobject.h. Remove some functions that need not be exported.
189e8f9380 Added a header file.
2b16a6feff Make / and % do the same as divmod.
e25c25635e Support for dynamic loading added.
450ed49a89 Change versions. Save argv[0] in global argv0.
8ec25b410c If sys.trace is None, don't trace.  For exceptions, only use the local trace function.
6d80647f7f long_format() is now declared in longobject.h.
670e5a0d92 Another round of careful revisions.
79448288ba Use US paper size.
7b632a6073 Just another intermediate version...
1c462adaa8 Added indexing commands
7ac1c81f4f Added 'r(et)v(al) command. Added pdd (post-mortem debugging) method to class Pdb.
6fe08b0fe4 Moved documentation out to pdb.doc file. Moved class Cmd out to module cmd.py. Rewrote implementation of stack trace to incorporate traceback objects.
7c36ad7f44 New function gettupleslice(v, i, j).
11c03836a2 Change tb_here() prototype.
c6515d12b7 tb_here() can now get the lasti and lineno arguments from the frame.
ee3a299c39 Ensure that sys.argv[0] always exists (maybe as empty string).
23d5cdebac New version from the net.
77b4604eaf Added close method for menus. Check for closed objects in getattr (not perfect, but better).
cc59e94899 Don't depend on patchlevel.h.
22f863feee Added UNPACK_VARARG.
2d709b1608 Get rid of AMOEBA deps; add declaration of fmod() if __STDC__ is not defined.
4c260ff2a5 Changed to 2's complement bitwise ops.  Got rid of ZABS etc.
f3b351f140 Different shift implementation.
a38c0ff7cd Added READONLY specifier to data members.
088bc2ad3c Added f_lasti and f_lineno members.
cff3454eff Use $TMPDIR if it is set in the environment.
a61ff7b160 New implementation method for case conversion.
49d6dc4123 Added varargs code.
92df0c67d0 Added to-do list.
7ac4878773 Make nicer comments. Added expanduser() and normcase() and isabs() and isfile().
6a3f9a841a Added UNPACK_VARARG code.
31104f4624 Initial revision
599f2ed208 Added 'normcase' function.
3ec6c1d401 Get rid of debug print statement.
526e909614 Added varargs syntax "def f(a, b, +c): ..."
e9cde31c47 Now uses varargs syntax to grep more than one file.
b914257366 Almost complete rewritten.  Documentation added. Simple interface "pdb.run('<statement>')" added.
c2ef5c2ded Never return a non-existing pathname. Rewrote has_magic using a regular expression match.
05e5219f53 Rewritten using regex.
9542c58d45 Use module os. Split off file cache to module 'linecache'.
d6c3f25f3e react to interrupts differently
bba77af37a Use module 'os'
2817875b2e Converted to use == equality check syntax.
39d942da0f add READONLY to member list.
96a42c85bc User trace feature.
921c82401b Initial revision
626dae7a42 Fix bug in assign_slice for negative index; used length of wrong object!
70083dee12 Bugfix: it choked on an empty argument!
a8d754e876 Cosmetic changes; added more subsections to chapter 2; new syntax (==).
743d1e76d0 Cosmetic changes; added sections on notation and on objects; new grammar (global, '==').
1230c08b8e Changes needed for indexing.
46b1638044 Stop option processing immediately after "-c command", leaving additional options for the command to handle.
bdfcfccbe5 New == syntax
4d8e859e8f Initial revision
42d1f63c54 New == syntax; regs is no longer a method.
d4e5a733b2 Cosmetic changes; sabotage 'go' and 'stdwin'; New == syntax.
318a91c3f2 Tokenizing version (see lib/tokenize.py).
0a60ee1c69 Cosmetic change.
0af9a283a1 Initial revision
11e7f62dbc Use new, more generic structure for *fix.py scripts.
b824fc6773 'regs' is a read-only data member, not a function.
09cea47433 Don't allow '==' at top level yet, to catch conversion errors.
6a468bf71c Raise SystemExit instead of calling goaway().
5afc74757b Clear errno, just to be sure.
a534ed3ee7 Catch SystemExit and go away if it is caught.
afbb8db8e6 Fixed bug in long masking ops.
768a3f0ab8 Added SystemExit.
a9df32ab2a Minor changes.
6cf1273faa Allow trailing comma after fplist; '=' is no longer comparison; expr/assignment statement now allows testlists.
5fca8a1b0d Adapted to new "regex" module. Introduced egrep() and emgrep() variants. Use '==' for equality test. .,
9f39fbb5b7 Adapt the regular expression to the new class syntax.
6c6b78d6bd Initial revision
564f5507c3 y New class syntax
d404569b97 New class syntax
9b4e1b36f9 Auto include patchlevel in version. Replace regexp by regex.
6f4c43d4fd Initial revision
7e73fd0024 Fix bogus mode mask.
4a3a41f1bb Use 'global' instead of struct kludge.
8fd7eee6db Use new stdwinevents.
ccfd6e105b New class syntax. Use ImportERror
ce08448165 New class syntax.
decc4b99e1 Use ImportError
1820010c1a New class syntax.
470e7617a9 Use AttributeError.
aa3760d91d Use ImportError.
61f9d0d242 Use modern stdwinevent constants.
946749f6fe Use AttributeError
2234bc9101 Use ImportError. New class syntax.
869100a919 Get rid of BCOMPAT. New class syntax.
bb3753d720 Use Attr*Error. New class syntax.
4dedbf7197 Use KeyError.
5c5e829a5d Use IOError.
2f242582f7 Use ImportError; New class syntax.
9f7a956ffa Added classfix.
2c4d7e742c Initial revision
488b7d939d *** empty log message ***
04fe492a44 Initial revision
54a41d6366 Don't rely on <string.h>
0e8e872ebf Raise KeyError instead of RuntimeError when a uid or name (etc) is not found.
3ea7412d38 Change error messages for impossible assignment slightly.
32dffaa016 Fix assignment of a list to a slice of itself.
4135e78204 Use IOError and ImportError when import fails.
201be057fb Added message to EOFError.
85fc392b9e Added ImportError.
86d8e63433 EOF while parsing should raise EOFError, not SyntaxError.
98256aa518 Negative subscript are now allowed as in slices. Added ImportError.
ed7711b7cb Sorted exceptions; added ImportError.
1c8230b70d Adapt to mixed-mode arithmetic, and added a warning comment.
97dddba1bb Better check to avoid executables.
7030d0a159 Modularized the code.
5558b89320 Improved error handling.
5378d5c485 Initial revision
bbf9434337 Change errors into new StdwinError.
8832b62101 Improve error handling.
6e93c07a06 Change RuntimeError into IOError when module file not found on reload.
7fa52f84c7 Explicitly check for weird values after calling pow().
fb905c3ebf Regularize exceptions.
0f1b8063b5 Be vague about default date.
efb087b13f Changed some RuntimeErrors.
7610599756 Added ZeroDivisionError except clauses.
befa2936d0 Attempt at speeding up.
a594fabbfa New opcodes: UNPACK_ARG, STORE_GLOBAL, DELETE_GLOBAL, LOAD_LOCAL, LOAD_GLOBAL
750bf14c32 Added UNPACK_ARG.
c06022966f Add "varargs" attribute.
3ddee714d1 New magic word; and check it.
75f8968ee7 Hide forms before discarding them.
a317365eb2 SyntaxError.
b954c2c39f Use SyntaxError.
aa011411fb Automatically insert the date.
288a60f973 New argument passing.
9c7b861a00 New argument passing mechanism.
c02e15c45e Added "apply"; added "SyntaxError"; changed table lay-out.
d39e412482 Now automatically test for V2.0.
b00649cd06 Initial revision
943094566a Add warning XXX that 09.9 isn't accepted.
7177657bf2 Added sys.version object.
87e7ea72a6 Use new exceptions.
97ff5308fe Added _GLOBAL opcodes.
2912f22afc Use IOError.
bd3a2e6b11 Use AttributeError.
3a62845094 Improved exceptions.
9a9faddbcb Formulate better error strings.
ddc0d3e066 Support for FORMS 2.0.
876336bc7d New exceptions.
9f462af3af Added global 'version' variable. Print version and copyright when called interactively.
c5e96291d0 Implement 'global' and new class syntax.
e2966a6362 The cl_bases member of a class object is now never NULL.
32c6cdf776 Added STORE_GLOBAL and DELETE_GLOBAL. Exceptions may now also be tuples.
50afb7a216 Added new exceptions.
68fc349744 Added 'global' and new class syntax.
ccf0ca2860 Changes for FORMS 2.0.
47f2333609 Fix math containing %!!!
696f91151c Fix division by zero in some cases.
444339d463 Support for CMIF video 3.0 files (more color systems).
8f72bbb2c8 Jack added new color systems (unfortunately using old lay-out).
3e0d556221 Improved lay-out.
094a9deae6 Initial revision
0bb1a51925 AIX fix.
3c28474ea2 Enclosed method lists in braces. Added close methods to various object types.
481ae68911 The Reference Manual is now official.
4fc43bc377 First round of corrections (lexer only).
01ebbb80ab Initial revision
a63f19798d New options: -m mag, and -F. Also support for 'CMIF version 2.0' movies, with compressed color.
7385d583a5 New features
a52117e98d Added ref.tex.
f2612d1edf Initial revision
c67eecf64d Added improved comments.
3f4f91704c Comment 0.9.1 alternative to windows.remove(win) out.
c6913e7da2 Made the sign use one's complement; implemented shifting and masking operators.
d97f048ae8 Fixed duplicate use of OFF macro.
670ceb30d3 Deleted unused local variable.
8f96f7734c Fixed dictionary example to use commas instead of semicolons. (This was actually a bug in the interpreter!)
92fba0293f ?
98d5433852 Added PROTO macro where needed.
32db5e391b Finally added form attributes.
8aff84a100 Call write(fileno(fp), ...) instead of fwrite for LARGE writes.
19f1b8261e Renamed mod to lib; and split in 5 instead of 3 parts.
6d0b5a7880 Improved RGB --> grayscale conversion. Changed error reporting somewhat.
56a5afc7ea Support JPEG option.
ddfb3ebdf6 Split and renamed mod to lib[1-5]
59e9070148 Renamed mod to lib.
eee9498b71 Initial revision
5478cc68f8 Added a comment about a possible interface change.
d3778f9f60 Added samefile() function.
f109f86de5 Added defines for pixmode.
5f5b137017 Added new constants (some? all?) for FORMS version 1.5.
eda5dfd7c8 Update on vinfo
6f00a317a1 Introduced getopt. Added -d option: print deltas instead of absolute times.
b3c493cdd8 Fix third arg (audio skip).
228381e0c2 Changed description of video.py.
5dafd916f2 Added -p packfactor and -l (looping) options.
7d435fee60 Cosmetics.
7caf611a0f Added vcopy.py; and cosmetics.
bac4572300 Fixed to understand new file format; and cosmetics.
5d731fc88c Initial revision
5395c067de Made much faster, but for SHORT movies only, by saving lrectread data unprocessed in memory.  As long as memory doesn't run out this gets us 19 frames/sec! Also many cosmetic changes.
96059b318c Some new info.
afdcb54a82 Initial revision
27cb9916db Made it work for more cases.
b51afcc5c4 Cosmetics, single buffering, block when not running, etc...
e4bddeae23 Initial revision
baf0ebf43c Added shift and mask ops. Allow numbers starting with a period.
7928cd7636 Added shift and mask ops.
7a6dfa7d79 Added shifting and masking ops to as_number struct
d18ad58349 Added frexp, ldexp, modf, fmod.
3d3037d51a Changed convert to add '0' or '0x' prefix for oct/hex. Added NULL function pointers for shift and mask ops.
27acb3379e Added NULL function pointers for shift and mask ops.
006bcd42ac Made dir() more robust. Added hex() and oct().
9eb4f535aa Added shifting and masking operators.
1242f1da67 Added a little comment
7e3090cf08 newclassobject() gets a third argument
fbab905ae1 Added 2-char tokens and new versions of comparisons
8883aaa5eb Added some new tokens
2f1d87e9c2 Added __members__ secret attribute
85f5076962 Added __dict__ attributes all over the place.
e0e5edcb6e Added allowbroadcast()
e9c430fd3b Implemented __methods__ attribute
e6f7d18e6b Added count() method. Changed some conditional INCREFs into XINCREFs.
c64d04dedd Implemented 2-character operators.
2df7bcca97 Done a little bit about garbage collection. Made some routines a little bit more robust.
15ecff4c5e Finally implemented divmod().
5063bab973 Check for EINTR and turn it into KeyboardInterrupt in err_errno().
d26d9ed2ec Added lrect{read,write} and pixmode(). Also added functions (un)packrect, not in GL but needed for tv... Commented out all the functions that cause error messages.
01cfd447d0 Comment out 'abort()' call. Changed comparison operators.
2b9d6e2008 newclassobject gets a third parameter (optional class name)
9430839acc Add several secret __*__ attributes
dc8a108a36 Protect dir() against non-directory __dict__ attributes.
c0aab89d96 Added some error checks.
a76fb5b653 Comparison operators '<=' '>' '<>' are now 1 token. Also support '!=' and '==' as alternatives for '<>' and '='.
2483cbb8ce Initial revision
944e76fb3c Fix typo.
5b39796eca Fix names import.
c96f38eb1f Initial revision
9978a16c7d Move parametrizations to "names.py"
50692d62de Initial revision
4f5eafb0cf Return window ID of form (later should use attr list liek objects).
8db0307399 Call (*func), not ALgetparams!
54ba21bd76 Make Socktype global so old and new compilers will like it.
b988c33d5a getlonglongargs --> getlonglongarg Fixed type error in argument of newopenfileobject.
c5da350310 getlonglongargs --> getlonglongarg Added getlongobjectarg.
18a372f04c getlonglongargs --> getlonglongarg
188f832ae6 Added module 'al' (SGI audio library).
b3a5b9bc4a Added queryparams, get/setparams. Free config object used to get sample width.
7d8b509575 Added work-arounds for MPW 3.{1,2?} code generation bug.
e3db862e5b Initial revision
a232536f50 test new functions and syntax
333c2e02d0 A plus is also a sign!
7045dd04d7 Initial revision
784ca6c835 path.cat --> join
668317db89 Added warning comment
4d0fdc34d1 path.cat --> join Added splitext
fbe0a8e090 macpath.cat --> join
0b7448020a integrate with stdwinq
dff84043e4 save match function instead of regexp object
14d53bf164 Added vspacepixels. Integrated with stdwinq.
48154be152 Now uses pipes.
0d3f4678ba Used mainloop instead of WindowParent functions
e825f15900 minsize->getminsize Keyboard focus policy more?
e11d4ccbb6 minsize -> getminsize Keyboard interface
3c8045acf1 Added activate/deactivate. minsize --> getminsize. Added 'boxed' option. Added lost of code to realize (?)
9b1bfc8810 minsize --> getminsize. Added keyboard downcalls. (I mean keyboard focus policy and activate/deactivate)
ce27298640 minsize --> getminsize; new implementation of getminsize
cadae0fc14 minsize --> getminsize
d085cc6f5d Initial revision
ac62b9e7cb Renamed path.cat to path.join
ca197b520e minsize --> getminsize
1e5ad4e9bb Added class StrutAppearance (a label with with 0). Changed minsize to getminsize.
e6afe6a468 Initial revision
8cf301e757 Changed minsize to getminsize.
6fc178f46d Too much to describe changed...
b881314b6f Use dict2lookup.
f0ada4a130 Use more dict2 functions./
4b3c1da660 Added/moved dict2 interfaces.
b316515289 Changed some interfaces after error reports from Liberte. Added altgetmatrix (better but incompatible).
3fecef73d9 Added initfl() call when USE_FL is define.
831632507a Use dmore dict2lookup.
670690e2aa Reflect changed file name in comments.
df62e44f38 Changed many calls to dict stufff to dict2 variants. *** Somehow the call to printobject was changed back to fwrite?!?! ***
4f4a55b90c Change getbuiltin interface to get the name as an object.
a57fb011f1 Change getbuiltin interface to get the name as an object; call dict2lookup insteead of dictlookup.
abe5835b4f Fixed almost all list errors.
0374711fb3 Lots of cosmetic changes. Lots of small bugfixes (lint!). Made bgn_group and end_group form methods instead of top-level functions.
75cc8980e8 Adde get_mouse and find_first/find_last (by robertl)
c7df79e47d Initial revision
00c567ce6f All mac compilers now use 1904 as the Epoch...
8c11a5c759 Completely ignore lines with only a newline token on them, except wholly empty lines interactively.
8dcbbac15a Added getxwindowin() method
8119447fbe Add gethostname() and s.avail().
e0d452d5ef Ignore SIGPIPE when we've opened a pipe
278ef59110 Check for write errors after printing a value
139e57b2a4 Support for long integers
1492c27350 Add some err_errno calls that were missing
18315a0ecd New syntax
ef098519ed New grammar (semicolons, continue, no multiple NEWLINES)
4bad92cc8a New syntax: semicolons, continue statement. For the latter we must keep track of the current block's type. (We can't continue through a try statement, sigh.()
76a00af3f2 Support for long integers
a049031f2d Added call_object interface
83bf35cb27 Add interface to call a Python function (or other callable) object from C.
7ac4a88721 Change treatment of multiple NEWLINES
a60810973d Call printobject instead of fwrite to print strings.
56f7837704 Added 'continue', semicolons and dictionary displays.
2fe53f7fec The print operation now returns status!
4dd2a7e45b Connection sockets now have the proper family/type/proto values. Fix argument handling bug in socket(f,t,p) call. Fix some comments.
9db401333f Fixed confusing error message (open should be popen)
9fb036811a Change cmpobject() to coerce numerical values before comparing them
ef0068ff9d Added getintintintarg() (3 int args)
1055ecebee Reorganized somewhat to make it really work on Think C. Hope the best for MPW 3.
49955ae360 Support socket module
efc0bd02e5 Check for identical types before comparing objects to see if they are the same -- 0 and 0.0 compare equal but should be considered different here!
89d55cad95 Call coerce() in arithmetic operations, to support mixed mode arithmetic
c6bb8f7ab2 Add and use coerce() routine for mixed mode arithmetic
22825e86f6 Initial revision
2fa5a7fc00 Use posix.popen to read output from a command instead if command.get*.
9c5c80824c Renamed path.cat to path.join.
c3f2a3bf93 Strip redundant -P from arguments; only print 'ahead' count if other users present in queue.
bcf5012887 Add options -amc; do lstat if possible; columnize properly.
30a685f0fe Many changes to the interface, and added comments.
6574b3ee25 Initial revision
d6a15ada72 Generalize to macintosh.
1e2293d1f7 Define 'macintosh' if THINK_C is defined.
247ff718df Don't use printobject() to print a string (filename). Print ';' instead of ',' between file and line for MPW.
1d2a9ade93 Generalize to macintosh; forget Think 3.0.
76f2f2ef67 Apparently MPW has power() instead of pow().
49e85146e2 printobject now returns an error code Remove superfluous err_nomem() call ,
bcaa31c411 printobject now returns an error code Remove superfluous err_nomem() call
76085b95b9 Remove StopPrint hack
d783a46d73 printobject now returns an error code
909336104b printobject now returns an error code
dd0108081b Mention "-c command" option.
689e701919 Add run_command() to implement "-c command".
971443b7d4 Getpgrp() has a parameter, at least on BSD!
56b07c8ad9 When printing an error message, don't choke if tok->buf is NULL.
64b4552069 Add marshalling for dictionaries.
65481401b1 Add "close" function parameter to newopenfileobject().
e24122f5e2 Export getdict2key() interface.
5b02dbc2f8 Simplified STDWIN initialization.
185d06ea91 Added to list of bad filenames.
ec758ead39 Initial revision
0481447f41 Added getpgrp(); fixed buggy calls to getnoarg().
065d71e271 Declare errno, for prehistoric systems.
4410c758a1 *** empty log message ***
6f7b9598b5 Expoer "marshal" module.
4ed1ad5355 Export newcodeobject() interface.
27dec7e376 Export float_buf_repr() interface, for marshalling of floats.
dce2e3d8f5 Initial revision
a082ce40a6 Changed and exported newcodeobject() interface, for ".pyc" files.
3caa6e35cf Added fclose to newopenfileobject() calls.
3b06619e1c Added popen(). Added getmtime() function for use by ".pyc" processing.
c405b7b2fa Support ".pyc" files: cached compilation results. (Similar to Emacs ".elc" files.)
2cfd356f0a Removed Think C 3.0 stuff and wish list.
a1ab7fae44 In support of popen(), file objects are now parametrized with a close function on creation.  (There's a funny thing about the return value of the close function that should be resolved.) Also added 'isatty' method.
067b9c0aef Remove test for unimplemented sq_repeat method (see tupleobject comments)
f380e66c0f Fix comments in string_as_sequence
b8393da8f8 Finally implement tuple*number.  From now on all sequence types must (pretend to) support all operations except assignments; if you don't want to support an operation you have to provide a dummy function that raises an exception...
85e3b01f3b Removed utimes() compatibility hack. Added _exit, exec, fork, getpid, getppid, kill and wait.
326f582763 Don't print the line number for syntax errors in string parsing.
301f1a6f79 Added declarations for dnewlongobject and dgetlongvalue.
149e9ea24c Added dnewlongobject(), function to convert double to long int.
ad40531aa1 Fix conversion of double to long; stylistic changes.
246b9d8258 Don't suppress wsetfont(""); Don't report WE_MENU events with None as menu pointer; Added stdwin.getactie() function; Moved code to turn WINDOW* into windowobject* to a separate function.
76ad8ed51d Call clearerr() after EOF seen.
c7ec9c98e2 Fix off-by-one error in long_repr. Implement long_pow.
70d934601f Fix special cases in pow()
4b9cf8eed9 Added text.setactive and text.setview. Moved some functions around.
a759f64294 Initial revision
aa1791765e *** empty log message ***
17fca179bc *** empty log message ***
a2a181a6a3 Added xor functions. Hide/show focus hacks around tedraw are no longer needed.
cf7423ac8f Added nonzero to number methods
23d6f0e8e7 Many small changes
badb116f5e Added wdigit and stwodigits typedefs, and changed prototypes.
0bff015ac3 Added nonzero test
50b4ef64eb Added nonzero test
fb8edfce22 Don't optimize <string> and <stdin> code
4965bc8ac4 Declare ticker as int; made testbool generic for all numeric types
f023c463d7 Added recognition of 'l' or 'L' as long integer suffix
6a1f54c09c Include sys/select.h for IBM R2
eb4361af6c Defined path delimiter for MS-DOS as semicolon
541c8c0b2e Added many new functions
97ad2d80e5 Added divmod and abs methods for numbers
05ab111b1d Enabled (and fixed) newvarobject()
edcc38aac5 Initial revision
0046695d0c Added divmod and abs, fixed negative powers
175a9ea8c8 Pre-define MS-DOS separator
eba1b5efe1 Added (dummy) divmod and (functional) abs. Fixed comments in number methods list
e3a204fe47 Added long integer support.
faf9c960a2 Renamed class members to instances and class methods to instance methods ,.
e8122f19a0 Renamed class methods to instance methods (which they are)
d4905454cc Added long() and support for longs in int() and float(); turned abs() and divmod() into generic versions; added pow().
9227c0e184 Added longobject.h
67fa160744 Minor improvements.  Removed footnote about CWI pathnames.
a9d5c228f9 Added \dataitem command; removed DRAFT from title; changed a word in the reference to the reference document.
ab2885ee96 Clarify comment.
a31b9ccbbc Delay zero after successful action.
fa0e726154 Remove reference to util.
e2e162ec42 Initial revision
40b0f3aa0e Use built-in file.read() instead of util.readfile().
001fa6a20f Don't sleep if msecs <= 0.
fb9149c401 Support delayed destroy.  Use built-in remove. Dispatch needn't check for win = self.win.
a82a27585a Use text object's new settext() method.
7912b008cf Add destrpy() method.
b8f5c093dc Use built-in remove() method of lists instead of util.remove.
80c9d88cbf New hacks for include files to get time_t in the most portable way. Added Turbo C milli functions (courtesy Mark Anacker) Disable THINK C sleep for 4.0
753e2bfbbf Initial revision
27201069c0 Add filled drawing methods and polygon methods. Sort some method lists. Increase max #menus, and give more reasonable error message if exceeded. Remove window setfont method.
a5900aa549 Move allobjects.h to front (needed by THINK C precompiled headers)
bfe14c5c92 Add warning about Lambert's bug.
ac029489d0 Added pwd and grp modules
0a697f686f BUGFIX!  Instructions are unsigned bytes.
569fce7901 Rename class methods to instance methods (at least where user-visible)
864407d112 Initial revision
0ee42cdcf9 Incorporated MSDOS changes (untested).
1ff6cb4f4f Made utime use much more portable. Incorporated i386 mods. (Oh, BTW, the "right" python name is now posix.utime, not utimes!
d9d2c8246c This is no longer needed, since all these functions are now built-in (with different interfaces). Change the module definition to call the built-in functions, for compatibility.
6179fe6a08 Don't us sys.ps1 and sys.ps2. Exercise trailing comma in tuples.
fac38b7c40 Added join() and joinfields() functions. Fixed center(). Rewrote ljust() and rjust().
2d844d1ddc Initial revision
fa54064967 Support packing whole trees.
fc61383fad Support [...] ranges.  Also [!...] for negated ranges, SYSV shell style.
117dbcb2fe Added window list management functionality. Automatically call self.destroy() if WE_CLOSE event dispatched. Added keyboard, alternate drawing and getwindow interface. Call child's realize method.
4f4794a9a0 Added alternate drawing, realize and getwindow interfaces (why not keyboard?)
aa57a9d733 Added keyboard, alternate drawing, realize and getwindow interfaces.
9ddba3e9ee Enabled logicop arguments (LO_*).
efba63ba1c Added dummy realize() method.
cbe6b53e1b New: getwindow() parent method and realize() child method.
db46c0e4f8 Fix window.setfont() to call drawing_setfont internally.
324aa79f66 Add declaration of struct _node, for scoping reasons.
50429a1d2c More flexible font setting (mainly for the Mac).
0bd2441e00 Added external interface to readline, for raw_input().
26203aa422 Use fileobject's filegetline() to implement unlimited raw_input().
6590d4a250 Hack for THINK C time function. Made more functions externally visible.
daa8bb334d Optimized single-character strings gotten from s[i].
e6c67a7263 Added isatty() for MPW.
054ff1f29e Added opcodes to load local/global variables
eb183da74f Added 'softspace' interface to replace 'needspace' printing hack.
282914b7b0 Added error checking for numeric constants; added local/global variable optimization.
572fd57b5a Changed 'class member' to 'instance'.
21ed88cfe2 Change ugly 'class member' to more normal 'instance'.
374a92261b Moved support functions after main function; added prototypes; Fixed 'needspace' hack to use a flag in the stdout file object; added local and global variable lookup cases.
5662746a9e Made millitimer() and millisleep() global (what the heck...).
0c2290bd53 Added font, color and default scroll bars interfaces.
71f477c797 Added forward declarations.
7a904edcbf Moved get*doublearg() routines here from mathmodule.c
5b7f945bc3 Moved get*doublearg() routines to modsupport.c
4a450d06c7 Swapped list_ass_item and list_ass_slice to satisfy Standard C.
66f1fa83f1 Added forward declaration (to satisfy Standard C).
d594c91293 Added Getnamev() macro.
a0c191eaa2 Initial revision
88671aeabb Added declaration for dict2insert.
2abc7a6a9a Added font manager initialization.
e543a94746 Satisfy Standard C rules about struct scope.
62d4624ea3 Create code string with initial size of 1000 instead of 0.
b8824952cb Define and use GETNAMEV macro.
b6a6bdc7db Optimized stringitem.
bf109736d9 Return value of drawing_generic was ignored!  Foo!
e7ef22ef41 Include patchlevel.h (to ensure it is distributed with the rest).
ed98d48027 Added repeat (for list*integet). Added methods remove(), reverse() and index().
ce5ba841d9 Fixed read() and readline() to do arbitrarily long reads. And readline() now reads null bytes correctly. Added tell(), seek() and flush().
7ff04b39db Dependencies on mod[123].tex.
958ab3dd72 Split into a root file (this one) and three subfile mod[123].tex.
17d82ce78a Added readfile() and readopenfile() functions.
261cbb2165 Use readfile from util.py.
56098fa2d4 Use garamod as alternative style.
8ec6350d78 Made function items bold; other changes?
a95e463d1e Minor changes.
14f7aae080 Remove Emacs garbage.
f70e43a073 Added copyright notice.
7927384a1d Added version that opens a pipe to /bin/pwd.
426035c543 Added BSD implementations of millisleep.
2d14e21382 Call winit() here instead of in main initialization.
7f133ed073 Call the init function of a built-in module here. ,
59e53a564c Turned the list of init calls into a table (see import.c).
865828d7cf Reversed min and max (to alphabetical order).
a08095ab02 Hack to open resource fork on the Mac: open(filename, '*rb').
33f1770ed8 Add getdefwinpos, getdefwinsize; and improve mouse clipping for textedit blocks.
253919f3b7 Fix stringcompare when strings contain null bytes.
5153e5ecd7 Updated to reflect the change to TeX.
20aca5aa39 Took out (di)troff references. Changed dependencies somewhat.
4c22cb2f31 Changed code environment into \bcode and \ecode macros. Learned a lot about these things.
5ce78f11fc Changed code environment into \bcode and \ecode macros. Small lay-out improvements. Took out a ref or two to "python -s".
d38b7648c0 Changed \begin{code} and \end{code} into \bcode and \ecode. Small lay-out improvements.
44000edfce Better solution for code environment.
0ed6918698 Small changes.
2292b8e98a Most silly things fixed.
220d9f1449 The parser module is now called paenlparser.
52cea43097 Added _reset and destroy methods.
52acae65d7 Added XXX remarks.
7df0c16b61 Initial revision
b3fa13cef7 Made the move to TeX.
515834a99b Initial revision
7d9f8d70b9 Small changes.  Use description instead of list env.
4c4177865d Fix bug in input(); add comments to cases in compile().
86cd6e646e File name shortening.
4dae216784 Removed 'dir' statement. Function call argument is a testlist instead of exprlist.
c83fd37341 Moved getcwd() hack to its own file.
de9775af8f Initial revision
28a83ab393 Made all configurable options optional (see Makefile).
e8e7cf49c5 Added pollevent(); returns None if no event available. Don't throw away key events with no window.
875eb7d9c2 Mac version now looks ahead in event queue instead of eating events. Much better!
d9bf55d0d0 Initial revision
94726d55c1 Changed bogus ref to textobject into xxobject.
320a5ccbdc Fixed a bit (still no warranties).
59b3590711 Think C 4.0 fixes a bug in 3.0 that we programmed around.
6607f449be Add backward compatibility with -s. Add initregexp() call.
65a9620fa2 Initial revision
762c39e9d2 Initial revision
b5e05e95c3 Added explanatory comments.
67c9b8cdad Adapted to new cutbuffer interface.
217a5fa3c3 Initial revision
66a07c07a5 Fix bugf in index -- last char would not be checked.
a4ddbd885e Use stdwinevents instead of stdwinsupport.
fc8e0d980f Compensate stdwin bug
ee11583f00 *** empty log message ***
a1ec5fea86 Unimportant changes.
debbe041e6 Comment changes.
b156d7259b Changes for THINK C 4.0.
73531a3bae Return -1 for errors.
6c4f4a92ac Changes for THINK C 4.0. Don't call inittime() and initmath(), let config_*.c decide about those.
706eea8a06 Changess for THINK C 4.0.
801f473a4c Add <errno.h>.
c211ee4b13 Added <errno.h>
f22120ab74 Changed include of <errno.h>
aec7855227 Initial revision
40d0b7e904 Change div() into divide(); div() is a Standard C function.
d05c4b2a7c Include <string.h> instead of "string.h".
3f5da24ea3 "Compiling" version
226d79eb4a Changed interface (no nodes but code).
846e431372 Function objects no longer contain a parse tree node, but intermediate code.
5b3138bec0 Empty all modules' symbol tables, so most circular references are cleared up. (A function definition references its module's symbol table but the symbol table of course references the function...)
392ab32859 Fix wrong #ifdef.
c6aa9e90ad Some extra DECREFs.
840bcf11a8 Set parse tree in parser data structure to NULL when returning a valid parse tree to caller, so caller must free the tree.
99f02d43f3 Free parse tree when deleting parser.
f1270274e2 Added opcodes for classes.
cc398d1cbb Added prototype for new function freenode().
03a24cd47b Add function to free an entire parse tree.
eb38d2411c DECREF pi and e after inserting in symbol table.
3304975647 Add extra DECREF.
d6f3bc2aae Compile class definitions. Document and fix code generation for try statements. Use two bytes for all arguments. Avoid duplicate entries in lists of constants and names.
e9736fc8a1 Free parse tree after compiling. Added support for class definitions. Reorganized main interpreter loop to fetch op and arg once at the head. Use two bytes for arguments (see ceval.c).
921842f2c2 Fixed resizestring() to work if reference tracing is turned on. The realloc() call would move the list head without fixing the pointers to in the the chain of allocated objects...
da0c6bdfe3 Moved configuration-dependent initializations (etc.) to config_*.c
10dc2e8097 Initial revision
d5b70f5bac Add UNREF macro if not tracing refs (see UNREF function in object.c).
a769172f6a Increment line number for continuation lines.
f1ac403c4d Reformulated err_badarg error message.
124967ca8c Turn close commands into WE_CLOSE events. Remove (broken) compatibility hacks from cutbuffer interface.
2e44967104 Initial revision
0c89ec778d *** empty log message ***
c8564cde04 Be more careful with negative reference counts.
3d54f2d3d9 Added provision for THINK C which doesn't have sys_nerrors or sys_errlist.
6923e134fc Moved prototyes for fmod and pow, and don't use them for THINK C.
f5401bd49e Added prototype for strerror.
bd3edc8dc3 Removed redundant prototype for err_nomem(). Added check for negative refcnt in DELREF.
be5ea23374 Added new event types and selection types.
468c448bcc Added S_IMODE() to strip the file type (S_IFMT) from a mode.
36ddc9e318 Initial revision
6acc1b539a Changed resizing functionality.
e15607f3f9 removed resizing functionality.
fc9af02697 Separated out resizing functionality.
5b10f454f7 Added w.setwincursor(), selection, and new cut buffer interface.
01769f083f Change set/getcutbuffer to use the new stdwin interface. This makes it possible to cut/paste strings wuth embedded null bytes.
7f77e2d4f8 Added prototype to declaration of strerror().
14da580104 Added prototype for sortlist().
84c76f52af Added external interface to sort a list.
726749cc5b Added some prototypes.
6990c943a0 Added getdictkeys() prototype.
3ccb6172f8 removed dir statement.  Function arguments may now be tests.
0558a205a3 Added getmodulename() public interface.
738d4ddf81 Take out duplication of code in initmodule().
ed97f6aa04 Added prototype for reload_module.
8d15b5d036 Added reload() functionality.
abbda16f58 Fix zero division checks: return if it occurs!
dd5c7be568 Reads of zero should be legal!
17e66f6d87 Added intobject.h and tupleobject.h includes.
67d3d1348b Removed reference to minmax.
c93fdeb43d Re3moved reference to minmax.
124eb94270 Fix bug in rect.intersect(): empty rects beyond the first were ignored instead of making the outcome empty...
e1f069ec98 Initial revision
4de12876a9 Generalized.
ceae528b9f Generalizations.
f49ef1cad0 Mad readfile() read the file in one fell swoop.
276123d1dc Changed use of stat.
336f2816cd Initial revision
2a9096b5f9 New errors.
4ab9b4c9ad Changed strdup prototype to use const.
e87203afde Added __dict to module getattr. New errors.
5c52b6a75a CHanged errors somewhat.
3e55cb6302 Added err_badcall() and planned new errors.
683a072642 Added err_badcall().
40d9304d66 Use 'stat' module instead of hardcoding information from <sys/stat.h>.
6b47ed1f9d Initial revision
2dbf39cbc6 Set 'parent' field of new created subwindows so wdiff can implement 'close subwindows' command.
5c124871b6 Make readfile read the file in one fell swoop.
9a1581ceca Made posix_error back static as it should be.
536d5d3523 Call asa_done() in goaway().
e8f305aec6 Change posix_error() to call err_errno().
2b654f74c2 New error handling in getattr().
0539ba2c74 Removed declarations of err_badargs [sic] and err_nomem.
68c35d01d6 Move err_badarg() and err_nomme() to errors.c.
165e67edae New error handling.
5c600e1614 Made exception objects extern. Added convenience functions.
7d310eb081 Adde dconvenience functions.
ce4704a4f5 Remove dict2 interface -- it's now static.
3cf0ddfd94 (Some) new error handling.
85a5fbbdfe Initial revision
c636014c43 Initial revision
df79a1ee19 New names etc.
eeaccbf068 Added support for postscript output (*.ps).
b829a0935b Renamed intro and modules to tut and mod; added tbl to pipeline.
3310257195 Warning about incompleteness.
7f777ed95a Initial revision
